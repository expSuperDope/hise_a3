Summary of SPARK analysis
=========================

----------------------------------------------------------------------------------------------------------
SPARK Analysis results        Total        Flow   Interval   CodePeer       Provers   Justified   Unproved
----------------------------------------------------------------------------------------------------------
Data Dependencies                 .           .          .          .             .           .          .
Flow Dependencies                 .           .          .          .             .           .          .
Initialization                   31          27          .          .             .           .          4
Non-Aliasing                      1           1          .          .             .           .          .
Run-time Checks                 155           .          .          .    150 (CVC4)           .          5
Assertions                       16           .          .          .     16 (CVC4)           .          .
Functional Contracts             49           .          .          .     49 (CVC4)           .          .
LSP Verification                  .           .          .          .             .           .          .
----------------------------------------------------------------------------------------------------------
Total                           252    28 (11%)          .          .     215 (85%)           .     9 (4%)


max steps used for successful proof: 1

Analyzed 10 units
in unit calculator, 5 subprograms and packages out of 5 analyzed
  Calculator at calculator.ads:8 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Calculator.Add at calculator.ads:18 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
  Calculator.Div at calculator.ads:27 flow analyzed (0 errors, 0 checks and 1 warnings) and proved (2 checks)
  Calculator.Mul at calculator.ads:24 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (2 checks)
  Calculator.Sub at calculator.ads:21 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
in unit locker, 6 subprograms and packages out of 6 analyzed
  Locker at locker.ads:5 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Locker.Init at locker.ads:9 flow analyzed (0 errors, 0 checks and 1 warnings) and proved (0 checks)
  Locker.Is_Locked at locker.ads:15 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Locker.Locker at locker.ads:7 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Locker.Reset_PWD at locker.ads:13 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Locker.Try_Unlock at locker.ads:11 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
in unit lockmemory, 5 subprograms and packages out of 5 analyzed
  LockMemory at lockmemory.ads:8 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  LockMemory.Get at lockmemory.ads:10 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
  LockMemory.Print at lockmemory.ads:21 flow analyzed (0 errors, 0 checks and 1 warnings) and proved (0 checks)
  LockMemory.Put at lockmemory.ads:14 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  LockMemory.Remove at lockmemory.ads:18 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
in unit main, 11 subprograms and packages out of 11 analyzed
  Main at main.adb:21 flow analyzed (0 errors, 1 checks and 0 warnings) and proved (88 checks)
  Main.Lines at main.adb:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Main.Lines.Equal at mystring.ads:30, instantiated at main.adb:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (11 checks)
  Main.Lines.From_String at mystring.ads:24, instantiated at main.adb:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (12 checks)
  Main.Lines.Get at mystring.ads:42, instantiated at main.adb:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
  Main.Lines.Get_Line at mystring.ads:45, instantiated at main.adb:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (2 checks)
  Main.Lines.Length at mystring.ads:35, instantiated at main.adb:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (1 checks)
  Main.Lines.Less at mystring.ads:28, instantiated at main.adb:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (7 checks)
  Main.Lines.MyString at mystring.ads:18, instantiated at main.adb:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Main.Lines.Substring at mystring.ads:38, instantiated at main.adb:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (11 checks)
  Main.Lines.To_String at mystring.ads:20, instantiated at main.adb:22 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (7 checks)
in unit memorystore, 1 subprograms and packages out of 9 analyzed
  MemoryStore at memorystore.ads:3 skipped
  MemoryStore.Database at memorystore.ads:13 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  MemoryStore.Get at memorystore.ads:22 skipped
  MemoryStore.Has at memorystore.ads:20 skipped
  MemoryStore.Init at memorystore.ads:18 skipped
  MemoryStore.Length at memorystore.ads:31 skipped
  MemoryStore.Print at memorystore.ads:34 skipped
  MemoryStore.Put at memorystore.ads:25 skipped
  MemoryStore.Remove at memorystore.ads:29 skipped
in unit mycommandline, 0 subprograms and packages out of 4 analyzed
  MyCommandLine at mycommandline.ads:8 skipped
  MyCommandLine.Argument at mycommandline.ads:14 skipped
  MyCommandLine.Argument_Count at mycommandline.ads:10 skipped
  MyCommandLine.Command_Name at mycommandline.ads:12 skipped
in unit mystringtokeniser, 3 subprograms and packages out of 3 analyzed
  MyStringTokeniser at mystringtokeniser.ads:3 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  MyStringTokeniser.Is_Whitespace at mystringtokeniser.ads:12 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  MyStringTokeniser.Tokenise at mystringtokeniser.ads:16 flow analyzed (0 errors, 0 checks and 0 warnings) and not proved, 33 checks out of 34 proved
in unit pin, 3 subprograms and packages out of 3 analyzed
  PIN at pin.ads:1 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  PIN.From_String at pin.ads:5 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (12 checks)
  PIN.PIN at pin.ads:3 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
in unit stack, 7 subprograms and packages out of 7 analyzed
  Stack at stack.ads:7 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Stack.Init at stack.ads:20 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  Stack.Pop at stack.ads:28 flow analyzed (0 errors, 1 checks and 1 warnings) and not proved, 1 checks out of 2 proved
  Stack.Pop2 at stack.ads:31 flow analyzed (0 errors, 2 checks and 1 warnings) and not proved, 3 checks out of 4 proved
  Stack.Push at stack.ads:22 flow analyzed (0 errors, 0 checks and 1 warnings) and not proved, 2 checks out of 3 proved
  Stack.Push2 at stack.ads:25 flow analyzed (0 errors, 0 checks and 1 warnings) and not proved, 4 checks out of 5 proved
  Stack.Stack_Instance at stack.ads:18 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
in unit stringtointeger, 2 subprograms and packages out of 2 analyzed
  StringToInteger at stringtointeger.ads:3 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (0 checks)
  StringToInteger.From_String at stringtointeger.ads:6 flow analyzed (0 errors, 0 checks and 0 warnings) and proved (13 checks)
