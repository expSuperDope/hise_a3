module Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type integer = <range -2147483648 2147483647>
  
  val function first : int
    ensures { result = ((- 2147483648) : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = integer,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type integer__ref = { mutable integer__content : integer }
  
  function integer__ref_integer__content__projection (a: integer__ref) : integer =
    a.integer__content
  
  meta "model_projection" function integer__ref_integer__content__projection
  
  meta "inline:no" function integer__ref_integer__content__projection
  
  val integer__havoc (x: integer__ref) : unit
    writes { x }
end

module Standard__positive
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type positive = <range 1 2147483647>
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = positive,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type positive__ref = { mutable positive__content : positive }
  
  function positive__ref_positive__content__projection (a: positive__ref) : positive =
    a.positive__content
  
  meta "model_projection" function positive__ref_positive__content__projection
  
  meta "inline:no" function positive__ref_positive__content__projection
  
  val positive__havoc (x: positive__ref) : unit
    writes { x }
end

module Standard__character
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type character
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (255 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = character,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type character__ref = { mutable character__content : character }
  
  function character__ref_character__content__projection (a: character__ref) : character =
    a.character__content
  
  meta "model_projection" function character__ref_character__content__projection
  
  meta "inline:no" function character__ref_character__content__projection
  
  val character__havoc (x: character__ref) : unit
    writes { x }
end

module Standard__character__rep
  use Standard__character as Standard__character
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__character.character,
    predicate in_range = Standard__character.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Array__Int__Standard__character
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  
  function index_I1_one : int = 1 : int
  
  type component_type = Standard__character.character
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_98 : int.
          if ((a__first <= temp___idx_98) /\ (temp___idx_98 <= a__last)) then
            ((Standard__character__rep.to_rep ((get a) temp___idx_98))
               = (Standard__character__rep.to_rep
                    ((get b) ((b__first - a__first) + temp___idx_98))))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_98 : int.
                 if ((a__first <= temp___idx_98) /\
                       (temp___idx_98 <= a__last)) then
                   ((Standard__character__rep.to_rep ((get a) temp___idx_98))
                      = (Standard__character__rep.to_rep
                           ((get b) ((b__first - a__first) + temp___idx_98))))
                 else true)))
end

module Standard__integer__rep
  use Standard__integer as Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Standard__integer.integer) : int =
    Standard__integer.integer'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__integer.integer,
    predicate in_range = Standard__integer.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Standard__string
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__positive as Standard__positive
  use Standard__character as Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Standard__integer__rep as Standard__integer__rep
  
  type component_type = Standard__character.character
  
  function index_1_id (x: int) : int = x
  
  clone export ada__model.Unconstr_Array with
    axiom .,
    type map = Array__Int__Standard__character.map,
    function array_bool_eq = Array__Int__Standard__character.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__positive.dynamic_property,
    predicate index_rep_le = Int.( <= )
  
  type string__ = __t
  
  meta "model_projection" function to_array
  
  meta "inline:no" function to_array
  
  meta "model_projection" function first
  
  meta "inline:no" function first
  
  meta "model_projection" function last
  
  meta "inline:no" function last
  
  type string____ref = { mutable string____content : string__ }
  
  function string____ref_string____content__projection (a: string____ref) : string__ =
    a.string____content
  
  meta "model_projection" function string____ref_string____content__projection
  
  meta "inline:no" function string____ref_string____content__projection
  
  val string____havoc (x: string____ref) : unit
    writes { x }
end

module Standard_String__Img
  use int.Int
  use Standard__string as Standard__string
  use _gnatprove_standard.Main
  use int.Int
  
  val function to_string (x: Main.__image) (s: int) : Standard__string.string__
  
  val function from_string (x: Standard__string.string__) : Main.__image
  
  axiom to_string__first:
    forall x : Main.__image.
      forall s : int [(to_string x) s].
        ((Standard__string.first ((to_string x) s)) = (1 : int))
  
  axiom to_string__length:
    forall x : Main.__image.
      forall s : int [(to_string x) s].
        ((s >= (0 : int)) ->
           ((Standard__string.length ((to_string x) s)) <= s))
end

module Standard__integer___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  
  predicate dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) =
    if ((temp___is_init_14 = True) \/
          (Standard__integer.first <= Standard__integer.last)) then
      (((Standard__integer.dynamic_property Standard__integer.first)
          Standard__integer.last)
         temp___expr_18)
    else true
  
  val dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_18 : int))
                      (temp___is_init_14 : bool))
                     (temp___skip_constant_15 : bool))
                    (temp___do_toplevel_16 : bool))
                   (temp___do_typ_inv_17 : bool)) }
  
  predicate default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) =
    true
  
  val default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_19 : int))
                   (temp___skip_top_level_20 : bool)) }
end

module Standard__natural
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type natural = <range 0 2147483647>
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = natural,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type natural__ref = { mutable natural__content : natural }
  
  function natural__ref_natural__content__projection (a: natural__ref) : natural =
    a.natural__content
  
  meta "model_projection" function natural__ref_natural__content__projection
  
  meta "inline:no" function natural__ref_natural__content__projection
  
  val natural__havoc (x: natural__ref) : unit
    writes { x }
end

module Standard__natural___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__natural as Standard__natural
  
  predicate dynamic_invariant (temp___expr_46: int) (temp___is_init_42: bool) (temp___skip_constant_43: bool) (temp___do_toplevel_44: bool) (temp___do_typ_inv_45: bool) =
    if ((temp___is_init_42 = True) \/
          (Standard__natural.first <= Standard__natural.last)) then
      (((Standard__natural.dynamic_property Standard__natural.first)
          Standard__natural.last)
         temp___expr_46)
    else true
  
  val dynamic_invariant (temp___expr_46: int) (temp___is_init_42: bool) (temp___skip_constant_43: bool) (temp___do_toplevel_44: bool) (temp___do_typ_inv_45: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_46 : int))
                      (temp___is_init_42 : bool))
                     (temp___skip_constant_43 : bool))
                    (temp___do_toplevel_44 : bool))
                   (temp___do_typ_inv_45 : bool)) }
  
  predicate default_initial_assumption (temp___expr_47: int) (temp___skip_top_level_48: bool) =
    true
  
  val default_initial_assumption (temp___expr_47: int) (temp___skip_top_level_48: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_47 : int))
                   (temp___skip_top_level_48 : bool)) }
end

module Standard__natural__rep
  use Standard__natural as Standard__natural
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Standard__natural.natural) : int =
    Standard__natural.natural'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__natural.natural,
    predicate in_range = Standard__natural.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Standard__positive__rep
  use Standard__positive as Standard__positive
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Standard__positive.positive) : int =
    Standard__positive.positive'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__positive.positive,
    predicate in_range = Standard__positive.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Array__Int__Standard__character__Concat
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  function index_Index_one : int = 1 : int
  
  clone export _gnatprove_standard.Array__1__Concat with
    axiom .,
    type component_type = Array__Int__Standard__character.component_type,
    type map = Array__Int__Standard__character.map,
    type Index.t = int,
    predicate Index.le = Int.( <= ),
    predicate Index.lt = Int.( < ),
    predicate Index.gt = Int.( > ),
    function Index.add = Int.( + ),
    function Index.sub = Int.( - ),
    function Index.one = index_Index_one,
    function get = Array__Int__Standard__character.get
end

module Standard__string___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__positive as Standard__positive
  use Standard__string as Standard__string
  
  predicate dynamic_invariant (temp___expr_103: Standard__string.string__) (temp___is_init_99: bool) (temp___skip_constant_100: bool) (temp___do_toplevel_101: bool) (temp___do_typ_inv_102: bool) =
    if temp___skip_constant_100 then true
    else
      ((((Standard__string.dynamic_property Standard__positive.first)
           Standard__positive.last)
          (Standard__string.first temp___expr_103))
         (Standard__string.last temp___expr_103))
  
  val dynamic_invariant (temp___expr_103: Standard__string.string__) (temp___is_init_99: bool) (temp___skip_constant_100: bool) (temp___do_toplevel_101: bool) (temp___do_typ_inv_102: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_103 : Standard__string.string__))
                      (temp___is_init_99 : bool))
                     (temp___skip_constant_100 : bool))
                    (temp___do_toplevel_101 : bool))
                   (temp___do_typ_inv_102 : bool)) }
end

module Pin__pin
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type pin = <range 0 9999>
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (9999 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = pin,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type pin__ref = { mutable pin__content : pin }
  
  function pin__ref_pin__content__projection (a: pin__ref) : pin =
    a.pin__content
  
  meta "model_projection" function pin__ref_pin__content__projection
  
  meta "inline:no" function pin__ref_pin__content__projection
  
  val pin__havoc (x: pin__ref) : unit
    writes { x }
end

module Pin__pin__rep
  use Pin__pin as Pin__pin
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Pin__pin.pin) : int = Pin__pin.pin'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Pin__pin.pin,
    predicate in_range = Pin__pin.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Locker__locker__rep
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Boolean as Boolean
  use Pin__pin as Pin__pin
  use Pin__pin__rep as Pin__pin__rep
  
  type __split_fields = {
                       rec__locker__locker__number : Pin__pin.pin;
                       rec__locker__locker__locked : bool
                       }
  
  function __split_fields_rec__locker__locker__number__projection (a: __split_fields) : 
    Pin__pin.pin =
    a.rec__locker__locker__number
  
  meta "model_projection" function __split_fields_rec__locker__locker__number__projection
  
  meta "inline:no" function __split_fields_rec__locker__locker__number__projection
  
  function __split_fields_rec__locker__locker__locked__projection (a: __split_fields) : bool =
    a.rec__locker__locker__locked
  
  meta "model_projection" function __split_fields_rec__locker__locker__locked__projection
  
  meta "inline:no" function __split_fields_rec__locker__locker__locked__projection
  
  type __split_fields__ref = {
                            mutable __split_fields__content : __split_fields
                            }
  
  function __split_fields__ref___split_fields__content__projection (a: __split_fields__ref) : __split_fields =
    __split_fields__content a
  
  meta "model_projection" function __split_fields__ref___split_fields__content__projection
  
  meta "inline:no" function __split_fields__ref___split_fields__content__projection
  
  val __split_fields__havoc (x: __split_fields__ref) : unit
    writes { x }
  
  type __rep = { __split_fields : __split_fields }
  
  function __rep___split_fields__projection (a: __rep) : __split_fields =
    __split_fields a
  
  meta "model_projection" function __rep___split_fields__projection
  
  meta "inline:no" function __rep___split_fields__projection
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  predicate locker__locker__number__pred (a: __rep) = true
  
  val locker__locker__number__pred (a: __rep) : bool
    ensures { result <-> (locker__locker__number__pred (a : __rep)) }
  
  val rec__locker__locker__number_ (a: __rep) : Pin__pin.pin
    requires { locker__locker__number__pred a }
    ensures { (result = ((__split_fields a).rec__locker__locker__number)) }
  
  predicate locker__locker__locked__pred (a: __rep) = true
  
  val locker__locker__locked__pred (a: __rep) : bool
    ensures { result <-> (locker__locker__locked__pred (a : __rep)) }
  
  val rec__locker__locker__locked_ (a: __rep) : bool
    requires { locker__locker__locked__pred a }
    ensures { (result = ((__split_fields a).rec__locker__locker__locked)) }
  
  function bool_eq (a: __rep) (b: __rep) : bool =
    if (((Pin__pin__rep.to_rep
            ((__split_fields a).rec__locker__locker__number))
           = (Pin__pin__rep.to_rep
                ((__split_fields b).rec__locker__locker__number))) /\
          ((Boolean.to_int ((__split_fields a).rec__locker__locker__locked))
             = (Boolean.to_int
                  ((__split_fields b).rec__locker__locker__locked)))) then
      True
    else False
  
  val bool_eq (a: __rep) (b: __rep) : bool
    ensures { result = ((bool_eq (a : __rep)) (b : __rep)) }
end

module Locker__locker
  use export Locker__locker__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type locker = __rep
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function locker__locker__number__first__bit : int
  
  val function locker__locker__number__last__bit : int
  
  val function locker__locker__number__position : int
  
  axiom locker__locker__number__first__bit_axiom:
    (locker__locker__number__first__bit >= (0 : int))
  
  axiom locker__locker__number__last__bit_axiom:
    (locker__locker__number__last__bit > locker__locker__number__first__bit)
  
  axiom locker__locker__number__position_axiom:
    (locker__locker__number__position >= (0 : int))
  
  val function locker__locker__locked__first__bit : int
  
  val function locker__locker__locked__last__bit : int
  
  val function locker__locker__locked__position : int
  
  axiom locker__locker__locked__first__bit_axiom:
    (locker__locker__locked__first__bit >= (0 : int))
  
  axiom locker__locker__locked__last__bit_axiom:
    (locker__locker__locked__last__bit > locker__locker__locked__first__bit)
  
  axiom locker__locker__locked__position_axiom:
    (locker__locker__locked__position >= (0 : int))
  
  val function user_eq (a: locker) (b: locker) : bool
  
  val function dummy : locker
  
  type locker__ref = { mutable locker__content : locker }
  
  function locker__ref_locker__content__projection (a: locker__ref) : locker =
    a.locker__content
  
  meta "model_projection" function locker__ref_locker__content__projection
  
  meta "inline:no" function locker__ref_locker__content__projection
  
  val locker__havoc (x: locker__ref) : unit
    writes { x }
end

module Commandhandler__execute__l
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  
  val l__split_fields : Locker__locker.__split_fields__ref
end

module Locker__locker___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  
  predicate dynamic_invariant (temp___expr_188: Locker__locker.locker) (temp___is_init_184: bool) (temp___skip_constant_185: bool) (temp___do_toplevel_186: bool) (temp___do_typ_inv_187: bool) =
    true
  
  val dynamic_invariant (temp___expr_188: Locker__locker.locker) (temp___is_init_184: bool) (temp___skip_constant_185: bool) (temp___do_toplevel_186: bool) (temp___do_typ_inv_187: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_188 : Locker__locker.locker))
                      (temp___is_init_184 : bool))
                     (temp___skip_constant_185 : bool))
                    (temp___do_toplevel_186 : bool))
                   (temp___do_typ_inv_187 : bool)) }
  
  predicate default_initial_assumption (temp___expr_189: Locker__locker.locker) (temp___skip_top_level_190: bool) =
    true
  
  val default_initial_assumption (temp___expr_189: Locker__locker.locker) (temp___skip_top_level_190: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_189 : Locker__locker.locker))
                   (temp___skip_top_level_190 : bool)) }
end

module Stack__int32
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type int32 = <range -2147483648 2147483647>
  
  val function first : int
    ensures { result = ((- 2147483648) : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = int32,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type int32__ref = { mutable int32__content : int32 }
  
  function int32__ref_int32__content__projection (a: int32__ref) : int32 =
    a.int32__content
  
  meta "model_projection" function int32__ref_int32__content__projection
  
  meta "inline:no" function int32__ref_int32__content__projection
  
  val int32__havoc (x: int32__ref) : unit
    writes { x }
end

module Stack__int32__rep
  use Stack__int32 as Stack__int32
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Stack__int32.int32) : int = Stack__int32.int32'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Stack__int32.int32,
    predicate in_range = Stack__int32.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Array__Int__Stack__int32
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Stack__int32 as Stack__int32
  use Stack__int32__rep as Stack__int32__rep
  
  function index_I1_one : int = 1 : int
  
  type component_type = Stack__int32.int32
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_161 : int.
          if ((a__first <= temp___idx_161) /\ (temp___idx_161 <= a__last)) then
            ((Stack__int32__rep.to_rep ((get a) temp___idx_161))
               = (Stack__int32__rep.to_rep
                    ((get b) ((b__first - a__first) + temp___idx_161))))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_161 : int.
                 if ((a__first <= temp___idx_161) /\
                       (temp___idx_161 <= a__last)) then
                   ((Stack__int32__rep.to_rep ((get a) temp___idx_161))
                      = (Stack__int32__rep.to_rep
                           ((get b) ((b__first - a__first) + temp___idx_161))))
                 else true)))
end

module Stack__stack_array
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Stack__int32 as Stack__int32
  use Array__Int__Stack__int32 as Array__Int__Stack__int32
  
  type component_type = Stack__int32.int32
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (512 : int) }
  
  clone export ada__model.Constr_Array with
    axiom .,
    type map = Array__Int__Stack__int32.map,
    function array_bool_eq = Array__Int__Stack__int32.bool_eq,
    function first = first,
    function last = last,
    type index_rep_type = int
end

module Stack__stack_instance__rep
  use _gnatprove_standard.Main
  use int.Int
  use Standard__natural as Standard__natural
  use Standard__natural__rep as Standard__natural__rep
  use Stack__stack_array as Stack__stack_array
  use Array__Int__Stack__int32 as Array__Int__Stack__int32
  use Array__Int__Stack__int32 as Array__Int__Stack__int32
  use Array__Int__Stack__int32 as Array__Int__Stack__int32
  use Array__Int__Stack__int32 as Array__Int__Stack__int32
  
  type __split_fields = {
                       rec__stack__stack_instance__data :
                         Array__Int__Stack__int32.map;
                       rec__stack__stack_instance__top_index :
                         Standard__natural.natural
                       }
  
  function __split_fields_rec__stack__stack_instance__data__projection (a: __split_fields) : 
    Array__Int__Stack__int32.map =
    a.rec__stack__stack_instance__data
  
  meta "model_projection" function __split_fields_rec__stack__stack_instance__data__projection
  
  meta "inline:no" function __split_fields_rec__stack__stack_instance__data__projection
  
  function __split_fields_rec__stack__stack_instance__top_index__projection (a: __split_fields) : 
    Standard__natural.natural =
    a.rec__stack__stack_instance__top_index
  
  meta "model_projection" function __split_fields_rec__stack__stack_instance__top_index__projection
  
  meta "inline:no" function __split_fields_rec__stack__stack_instance__top_index__projection
  
  type __split_fields__ref = {
                            mutable __split_fields__content : __split_fields
                            }
  
  function __split_fields__ref___split_fields__content__2__projection (a: __split_fields__ref) : __split_fields =
    __split_fields__content a
  
  meta "model_projection" function __split_fields__ref___split_fields__content__2__projection
  
  meta "inline:no" function __split_fields__ref___split_fields__content__2__projection
  
  val __split_fields__havoc (x: __split_fields__ref) : unit
    writes { x }
  
  type __rep = { __split_fields : __split_fields }
  
  function __rep___split_fields__2__projection (a: __rep) : __split_fields =
    __split_fields a
  
  meta "model_projection" function __rep___split_fields__2__projection
  
  meta "inline:no" function __rep___split_fields__2__projection
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  predicate stack__stack_instance__data__pred (a: __rep) = true
  
  val stack__stack_instance__data__pred (a: __rep) : bool
    ensures { result <-> (stack__stack_instance__data__pred (a : __rep)) }
  
  val rec__stack__stack_instance__data_ (a: __rep) : Array__Int__Stack__int32.map
    requires { stack__stack_instance__data__pred a }
    ensures { (result
                 = ((__split_fields a).rec__stack__stack_instance__data)) }
  
  predicate stack__stack_instance__top_index__pred (a: __rep) = true
  
  val stack__stack_instance__top_index__pred (a: __rep) : bool
    ensures { result <-> (stack__stack_instance__top_index__pred (a : __rep)) }
  
  val rec__stack__stack_instance__top_index_ (a: __rep) : Standard__natural.natural
    requires { stack__stack_instance__top_index__pred a }
    ensures { (result
                 = ((__split_fields a).rec__stack__stack_instance__top_index)) }
  
  function bool_eq (a: __rep) (b: __rep) : bool =
    if (((Stack__stack_array.bool_eq
            ((__split_fields a).rec__stack__stack_instance__data))
           ((__split_fields b).rec__stack__stack_instance__data)) /\
          ((Standard__natural__rep.to_rep
              ((__split_fields a).rec__stack__stack_instance__top_index))
             = (Standard__natural__rep.to_rep
                  ((__split_fields b).rec__stack__stack_instance__top_index)))) then
      True
    else False
  
  val bool_eq (a: __rep) (b: __rep) : bool
    ensures { result = ((bool_eq (a : __rep)) (b : __rep)) }
end

module Stack__stack_instance
  use export Stack__stack_instance__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type stack_instance = __rep
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function stack__stack_instance__data__first__bit : int
  
  val function stack__stack_instance__data__last__bit : int
  
  val function stack__stack_instance__data__position : int
  
  axiom stack__stack_instance__data__first__bit_axiom:
    (stack__stack_instance__data__first__bit >= (0 : int))
  
  axiom stack__stack_instance__data__last__bit_axiom:
    (stack__stack_instance__data__last__bit
       > stack__stack_instance__data__first__bit)
  
  axiom stack__stack_instance__data__position_axiom:
    (stack__stack_instance__data__position >= (0 : int))
  
  val function stack__stack_instance__top_index__first__bit : int
  
  val function stack__stack_instance__top_index__last__bit : int
  
  val function stack__stack_instance__top_index__position : int
  
  axiom stack__stack_instance__top_index__first__bit_axiom:
    (stack__stack_instance__top_index__first__bit >= (0 : int))
  
  axiom stack__stack_instance__top_index__last__bit_axiom:
    (stack__stack_instance__top_index__last__bit
       > stack__stack_instance__top_index__first__bit)
  
  axiom stack__stack_instance__top_index__position_axiom:
    (stack__stack_instance__top_index__position >= (0 : int))
  
  val function user_eq (a: stack_instance) (b: stack_instance) : bool
  
  val function dummy : stack_instance
  
  type stack_instance__ref = {
                            mutable stack_instance__content : stack_instance
                            }
  
  function stack_instance__ref_stack_instance__content__projection (a: stack_instance__ref) : stack_instance =
    a.stack_instance__content
  
  meta "model_projection" function stack_instance__ref_stack_instance__content__projection
  
  meta "inline:no" function stack_instance__ref_stack_instance__content__projection
  
  val stack_instance__havoc (x: stack_instance__ref) : unit
    writes { x }
end

module Commandhandler__execute__sk
  use _gnatprove_standard.Main
  use int.Int
  use Stack__stack_instance as Stack__stack_instance
  
  val sk__split_fields : Stack__stack_instance.__split_fields__ref
end

module Stack__stack_instance___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__natural as Standard__natural
  use Standard__natural__rep as Standard__natural__rep
  use Stack__stack_instance as Stack__stack_instance
  
  predicate dynamic_invariant (temp___expr_228: Stack__stack_instance.stack_instance) (temp___is_init_224: bool) (temp___skip_constant_225: bool) (temp___do_toplevel_226: bool) (temp___do_typ_inv_227: bool) =
    true
  
  val dynamic_invariant (temp___expr_228: Stack__stack_instance.stack_instance) (temp___is_init_224: bool) (temp___skip_constant_225: bool) (temp___do_toplevel_226: bool) (temp___do_typ_inv_227: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_228 :
                          Stack__stack_instance.stack_instance))
                      (temp___is_init_224 : bool))
                     (temp___skip_constant_225 : bool))
                    (temp___do_toplevel_226 : bool))
                   (temp___do_typ_inv_227 : bool)) }
  
  predicate default_initial_assumption (temp___expr_230: Stack__stack_instance.stack_instance) (temp___skip_top_level_231: bool) =
    if (Stack__stack_instance.stack__stack_instance__top_index__pred
          temp___expr_230) then
      ((Standard__natural__rep.to_rep
          ((Stack__stack_instance.__split_fields temp___expr_230).Stack__stack_instance.rec__stack__stack_instance__top_index))
         = (0 : int))
    else true
  
  val default_initial_assumption (temp___expr_230: Stack__stack_instance.stack_instance) (temp___skip_top_level_231: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_230 : Stack__stack_instance.stack_instance))
                   (temp___skip_top_level_231 : bool)) }
end

module Memorystore__int32
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type int32 = <range -2147483648 2147483647>
  
  val function first : int
    ensures { result = ((- 2147483648) : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = int32,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type int32__ref = { mutable int32__content : int32 }
  
  function int32__ref_int32__content__2__projection (a: int32__ref) : int32 =
    a.int32__content
  
  meta "model_projection" function int32__ref_int32__content__2__projection
  
  meta "inline:no" function int32__ref_int32__content__2__projection
  
  val int32__havoc (x: int32__ref) : unit
    writes { x }
end

module Memorystore__int32__rep
  use Memorystore__int32 as Memorystore__int32
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Memorystore__int32.int32) : int =
    Memorystore__int32.int32'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Memorystore__int32.int32,
    predicate in_range = Memorystore__int32.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Memorystore__cell_opt__rep
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Boolean as Boolean
  use Memorystore__int32 as Memorystore__int32
  use Memorystore__int32__rep as Memorystore__int32__rep
  
  type __split_fields = {
                       rec__memorystore__cell_opt__valid : bool;
                       rec__memorystore__cell_opt__val :
                         Memorystore__int32.int32
                       }
  
  function __split_fields_rec__memorystore__cell_opt__valid__projection (a: __split_fields) : bool =
    a.rec__memorystore__cell_opt__valid
  
  meta "model_projection" function __split_fields_rec__memorystore__cell_opt__valid__projection
  
  meta "inline:no" function __split_fields_rec__memorystore__cell_opt__valid__projection
  
  function __split_fields_rec__memorystore__cell_opt__val__projection (a: __split_fields) : 
    Memorystore__int32.int32 =
    a.rec__memorystore__cell_opt__val
  
  meta "model_projection" function __split_fields_rec__memorystore__cell_opt__val__projection
  
  meta "inline:no" function __split_fields_rec__memorystore__cell_opt__val__projection
  
  type __split_fields__ref = {
                            mutable __split_fields__content : __split_fields
                            }
  
  function __split_fields__ref___split_fields__content__3__projection (a: __split_fields__ref) : __split_fields =
    __split_fields__content a
  
  meta "model_projection" function __split_fields__ref___split_fields__content__3__projection
  
  meta "inline:no" function __split_fields__ref___split_fields__content__3__projection
  
  val __split_fields__havoc (x: __split_fields__ref) : unit
    writes { x }
  
  type __rep = { __split_fields : __split_fields }
  
  function __rep___split_fields__3__projection (a: __rep) : __split_fields =
    __split_fields a
  
  meta "model_projection" function __rep___split_fields__3__projection
  
  meta "inline:no" function __rep___split_fields__3__projection
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  predicate memorystore__cell_opt__valid__pred (a: __rep) = true
  
  val memorystore__cell_opt__valid__pred (a: __rep) : bool
    ensures { result <-> (memorystore__cell_opt__valid__pred (a : __rep)) }
  
  val rec__memorystore__cell_opt__valid_ (a: __rep) : bool
    requires { memorystore__cell_opt__valid__pred a }
    ensures { (result
                 = ((__split_fields a).rec__memorystore__cell_opt__valid)) }
  
  predicate memorystore__cell_opt__val__pred (a: __rep) = true
  
  val memorystore__cell_opt__val__pred (a: __rep) : bool
    ensures { result <-> (memorystore__cell_opt__val__pred (a : __rep)) }
  
  val rec__memorystore__cell_opt__val_ (a: __rep) : Memorystore__int32.int32
    requires { memorystore__cell_opt__val__pred a }
    ensures { (result = ((__split_fields a).rec__memorystore__cell_opt__val)) }
  
  function bool_eq (a: __rep) (b: __rep) : bool =
    if (((Boolean.to_int
            ((__split_fields a).rec__memorystore__cell_opt__valid))
           = (Boolean.to_int
                ((__split_fields b).rec__memorystore__cell_opt__valid))) /\
          ((Memorystore__int32__rep.to_rep
              ((__split_fields a).rec__memorystore__cell_opt__val))
             = (Memorystore__int32__rep.to_rep
                  ((__split_fields b).rec__memorystore__cell_opt__val)))) then
      True
    else False
  
  val bool_eq (a: __rep) (b: __rep) : bool
    ensures { result = ((bool_eq (a : __rep)) (b : __rep)) }
end

module Memorystore__cell_opt
  use export Memorystore__cell_opt__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type cell_opt = __rep
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function memorystore__cell_opt__valid__first__bit : int
  
  val function memorystore__cell_opt__valid__last__bit : int
  
  val function memorystore__cell_opt__valid__position : int
  
  axiom memorystore__cell_opt__valid__first__bit_axiom:
    (memorystore__cell_opt__valid__first__bit >= (0 : int))
  
  axiom memorystore__cell_opt__valid__last__bit_axiom:
    (memorystore__cell_opt__valid__last__bit
       > memorystore__cell_opt__valid__first__bit)
  
  axiom memorystore__cell_opt__valid__position_axiom:
    (memorystore__cell_opt__valid__position >= (0 : int))
  
  val function memorystore__cell_opt__val__first__bit : int
  
  val function memorystore__cell_opt__val__last__bit : int
  
  val function memorystore__cell_opt__val__position : int
  
  axiom memorystore__cell_opt__val__first__bit_axiom:
    (memorystore__cell_opt__val__first__bit >= (0 : int))
  
  axiom memorystore__cell_opt__val__last__bit_axiom:
    (memorystore__cell_opt__val__last__bit
       > memorystore__cell_opt__val__first__bit)
  
  axiom memorystore__cell_opt__val__position_axiom:
    (memorystore__cell_opt__val__position >= (0 : int))
  
  val function user_eq (a: cell_opt) (b: cell_opt) : bool
  
  val function dummy : cell_opt
  
  type cell_opt__ref = { mutable cell_opt__content : cell_opt }
  
  function cell_opt__ref_cell_opt__content__projection (a: cell_opt__ref) : cell_opt =
    a.cell_opt__content
  
  meta "model_projection" function cell_opt__ref_cell_opt__content__projection
  
  meta "inline:no" function cell_opt__ref_cell_opt__content__projection
  
  val cell_opt__havoc (x: cell_opt__ref) : unit
    writes { x }
end

module Array__Int__Memorystore__cell_opt
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Memorystore__cell_opt as Memorystore__cell_opt
  
  function index_I1_one : int = 1 : int
  
  type component_type = Memorystore__cell_opt.cell_opt
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_162 : int.
          if ((a__first <= temp___idx_162) /\ (temp___idx_162 <= a__last)) then
            ((Memorystore__cell_opt.bool_eq ((get a) temp___idx_162))
               ((get b) ((b__first - a__first) + temp___idx_162)))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_162 : int.
                 if ((a__first <= temp___idx_162) /\
                       (temp___idx_162 <= a__last)) then
                   ((Memorystore__cell_opt.bool_eq ((get a) temp___idx_162))
                      ((get b) ((b__first - a__first) + temp___idx_162)))
                 else true)))
end

module Memorystore__mem_array
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Memorystore__cell_opt as Memorystore__cell_opt
  use Array__Int__Memorystore__cell_opt as Array__Int__Memorystore__cell_opt
  
  type component_type = Memorystore__cell_opt.cell_opt
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (256 : int) }
  
  clone export ada__model.Constr_Array with
    axiom .,
    type map = Array__Int__Memorystore__cell_opt.map,
    function array_bool_eq = Array__Int__Memorystore__cell_opt.bool_eq,
    function first = first,
    function last = last,
    type index_rep_type = int
end

module Memorystore__database__rep
  use _gnatprove_standard.Main
  use int.Int
  use Standard__natural as Standard__natural
  use Standard__natural__rep as Standard__natural__rep
  use Memorystore__mem_array as Memorystore__mem_array
  use Array__Int__Memorystore__cell_opt as Array__Int__Memorystore__cell_opt
  use Array__Int__Memorystore__cell_opt as Array__Int__Memorystore__cell_opt
  use Array__Int__Memorystore__cell_opt as Array__Int__Memorystore__cell_opt
  use Array__Int__Memorystore__cell_opt as Array__Int__Memorystore__cell_opt
  
  type __split_fields = {
                       rec__memorystore__database__mem :
                         Array__Int__Memorystore__cell_opt.map;
                       rec__memorystore__database__cnt :
                         Standard__natural.natural
                       }
  
  function __split_fields_rec__memorystore__database__mem__projection (a: __split_fields) : 
    Array__Int__Memorystore__cell_opt.map =
    a.rec__memorystore__database__mem
  
  meta "model_projection" function __split_fields_rec__memorystore__database__mem__projection
  
  meta "inline:no" function __split_fields_rec__memorystore__database__mem__projection
  
  function __split_fields_rec__memorystore__database__cnt__projection (a: __split_fields) : 
    Standard__natural.natural =
    a.rec__memorystore__database__cnt
  
  meta "model_projection" function __split_fields_rec__memorystore__database__cnt__projection
  
  meta "inline:no" function __split_fields_rec__memorystore__database__cnt__projection
  
  type __split_fields__ref = {
                            mutable __split_fields__content : __split_fields
                            }
  
  function __split_fields__ref___split_fields__content__4__projection (a: __split_fields__ref) : __split_fields =
    __split_fields__content a
  
  meta "model_projection" function __split_fields__ref___split_fields__content__4__projection
  
  meta "inline:no" function __split_fields__ref___split_fields__content__4__projection
  
  val __split_fields__havoc (x: __split_fields__ref) : unit
    writes { x }
  
  type __rep = { __split_fields : __split_fields }
  
  function __rep___split_fields__4__projection (a: __rep) : __split_fields =
    __split_fields a
  
  meta "model_projection" function __rep___split_fields__4__projection
  
  meta "inline:no" function __rep___split_fields__4__projection
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  predicate memorystore__database__mem__pred (a: __rep) = true
  
  val memorystore__database__mem__pred (a: __rep) : bool
    ensures { result <-> (memorystore__database__mem__pred (a : __rep)) }
  
  val rec__memorystore__database__mem_ (a: __rep) : Array__Int__Memorystore__cell_opt.map
    requires { memorystore__database__mem__pred a }
    ensures { (result = ((__split_fields a).rec__memorystore__database__mem)) }
  
  predicate memorystore__database__cnt__pred (a: __rep) = true
  
  val memorystore__database__cnt__pred (a: __rep) : bool
    ensures { result <-> (memorystore__database__cnt__pred (a : __rep)) }
  
  val rec__memorystore__database__cnt_ (a: __rep) : Standard__natural.natural
    requires { memorystore__database__cnt__pred a }
    ensures { (result = ((__split_fields a).rec__memorystore__database__cnt)) }
  
  function bool_eq (a: __rep) (b: __rep) : bool =
    if (((Memorystore__mem_array.bool_eq
            ((__split_fields a).rec__memorystore__database__mem))
           ((__split_fields b).rec__memorystore__database__mem)) /\
          ((Standard__natural__rep.to_rep
              ((__split_fields a).rec__memorystore__database__cnt))
             = (Standard__natural__rep.to_rep
                  ((__split_fields b).rec__memorystore__database__cnt)))) then
      True
    else False
  
  val bool_eq (a: __rep) (b: __rep) : bool
    ensures { result = ((bool_eq (a : __rep)) (b : __rep)) }
end

module Memorystore__database
  use export Memorystore__database__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type database = __rep
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function memorystore__database__mem__first__bit : int
  
  val function memorystore__database__mem__last__bit : int
  
  val function memorystore__database__mem__position : int
  
  axiom memorystore__database__mem__first__bit_axiom:
    (memorystore__database__mem__first__bit >= (0 : int))
  
  axiom memorystore__database__mem__last__bit_axiom:
    (memorystore__database__mem__last__bit
       > memorystore__database__mem__first__bit)
  
  axiom memorystore__database__mem__position_axiom:
    (memorystore__database__mem__position >= (0 : int))
  
  val function memorystore__database__cnt__first__bit : int
  
  val function memorystore__database__cnt__last__bit : int
  
  val function memorystore__database__cnt__position : int
  
  axiom memorystore__database__cnt__first__bit_axiom:
    (memorystore__database__cnt__first__bit >= (0 : int))
  
  axiom memorystore__database__cnt__last__bit_axiom:
    (memorystore__database__cnt__last__bit
       > memorystore__database__cnt__first__bit)
  
  axiom memorystore__database__cnt__position_axiom:
    (memorystore__database__cnt__position >= (0 : int))
  
  val function user_eq (a: database) (b: database) : bool
  
  val function dummy : database
  
  type database__ref = { mutable database__content : database }
  
  function database__ref_database__content__projection (a: database__ref) : database =
    a.database__content
  
  meta "model_projection" function database__ref_database__content__projection
  
  meta "inline:no" function database__ref_database__content__projection
  
  val database__havoc (x: database__ref) : unit
    writes { x }
end

module Commandhandler__execute__d
  use _gnatprove_standard.Main
  use int.Int
  use Memorystore__database as Memorystore__database
  
  val d__split_fields : Memorystore__database.__split_fields__ref
end

module Memorystore__location_index
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type location_index = <range 1 256>
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (256 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = location_index,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type location_index__ref = {
                            mutable location_index__content : location_index
                            }
  
  function location_index__ref_location_index__content__projection (a: location_index__ref) : location_index =
    a.location_index__content
  
  meta "model_projection" function location_index__ref_location_index__content__projection
  
  meta "inline:no" function location_index__ref_location_index__content__projection
  
  val location_index__havoc (x: location_index__ref) : unit
    writes { x }
end

module Memorystore__database___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Boolean as Boolean
  use Standard__natural as Standard__natural
  use Standard__natural__rep as Standard__natural__rep
  use Memorystore__database as Memorystore__database
  use Memorystore__location_index as Memorystore__location_index
  use Memorystore__int32 as Memorystore__int32
  use Memorystore__int32__rep as Memorystore__int32__rep
  use Memorystore__cell_opt as Memorystore__cell_opt
  use Array__Int__Memorystore__cell_opt as Array__Int__Memorystore__cell_opt
  use Array__Int__Memorystore__cell_opt as Array__Int__Memorystore__cell_opt
  
  predicate dynamic_invariant (temp___expr_270: Memorystore__database.database) (temp___is_init_266: bool) (temp___skip_constant_267: bool) (temp___do_toplevel_268: bool) (temp___do_typ_inv_269: bool) =
    true
  
  val dynamic_invariant (temp___expr_270: Memorystore__database.database) (temp___is_init_266: bool) (temp___skip_constant_267: bool) (temp___do_toplevel_268: bool) (temp___do_typ_inv_269: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_270 : Memorystore__database.database))
                      (temp___is_init_266 : bool))
                     (temp___skip_constant_267 : bool))
                    (temp___do_toplevel_268 : bool))
                   (temp___do_typ_inv_269 : bool)) }
  
  predicate default_initial_assumption (temp___expr_272: Memorystore__database.database) (temp___skip_top_level_273: bool) =
    ((if (Memorystore__database.memorystore__database__mem__pred
            temp___expr_272) then
        (let temp___274 =
           (Memorystore__database.__split_fields temp___expr_272).Memorystore__database.rec__memorystore__database__mem in
         forall temp___275 : int.
           if ((Memorystore__location_index.first <= temp___275) /\
                 (temp___275 <= Memorystore__location_index.last)) then
             (let temp___276 =
                (Array__Int__Memorystore__cell_opt.get
                   ((Memorystore__database.__split_fields temp___expr_272).
                      Memorystore__database.rec__memorystore__database__mem))
                  temp___275 in
              ((if (Memorystore__cell_opt.memorystore__cell_opt__valid__pred
                      ((Array__Int__Memorystore__cell_opt.get
                          ((Memorystore__database.__split_fields
                               temp___expr_272).Memorystore__database.rec__memorystore__database__mem))
                         temp___275)) then
                  (((Memorystore__cell_opt.__split_fields
                        ((Array__Int__Memorystore__cell_opt.get
                            ((Memorystore__database.__split_fields
                                 temp___expr_272).Memorystore__database.rec__memorystore__database__mem))
                           temp___275)).Memorystore__cell_opt.rec__memorystore__cell_opt__valid)
                     = (Boolean.of_int (0 : int)))
                else true) /\
                 (if (Memorystore__cell_opt.memorystore__cell_opt__val__pred
                        ((Array__Int__Memorystore__cell_opt.get
                            ((Memorystore__database.__split_fields
                                 temp___expr_272).Memorystore__database.rec__memorystore__database__mem))
                           temp___275)) then
                    ((Memorystore__int32__rep.to_rep
                        ((Memorystore__cell_opt.__split_fields
                             ((Array__Int__Memorystore__cell_opt.get
                                 ((Memorystore__database.__split_fields
                                      temp___expr_272).Memorystore__database.rec__memorystore__database__mem))
                                temp___275)).Memorystore__cell_opt.rec__memorystore__cell_opt__val))
                       = (0 : int))
                  else true)))
           else true)
      else true) /\
       (if (Memorystore__database.memorystore__database__cnt__pred
              temp___expr_272) then
          ((Standard__natural__rep.to_rep
              ((Memorystore__database.__split_fields temp___expr_272).
                 Memorystore__database.rec__memorystore__database__cnt))
             = (0 : int))
        else true))
  
  val default_initial_assumption (temp___expr_272: Memorystore__database.database) (temp___skip_top_level_273: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_272 : Memorystore__database.database))
                   (temp___skip_top_level_273 : bool)) }
end

module Mystring_instance__lines__mystring__T13s
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type t13s = <range 0 2048>
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (2048 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = t13s,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type t13s__ref = { mutable t13s__content : t13s }
  
  function t13s__ref_t13s__content__projection (a: t13s__ref) : t13s =
    a.t13s__content
  
  meta "model_projection" function t13s__ref_t13s__content__projection
  
  meta "inline:no" function t13s__ref_t13s__content__projection
  
  val t13s__havoc (x: t13s__ref) : unit
    writes { x }
end

module Mystring_instance__lines__mystring__T13s__rep
  use Mystring_instance__lines__mystring__T13s as Mystring_instance__lines__mystring__T13s
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Mystring_instance__lines__mystring__T13s.t13s) : int =
    Mystring_instance__lines__mystring__T13s.t13s'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Mystring_instance__lines__mystring__T13s.t13s,
    predicate in_range = Mystring_instance__lines__mystring__T13s.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Mystring_instance__lines__mystringstr
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  type component_type = Standard__character.character
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (2048 : int) }
  
  clone export ada__model.Constr_Array with
    axiom .,
    type map = Array__Int__Standard__character.map,
    function array_bool_eq = Array__Int__Standard__character.bool_eq,
    function first = first,
    function last = last,
    type index_rep_type = int
end

module Mystring_instance__lines__mystring__rep
  use _gnatprove_standard.Main
  use int.Int
  use Mystring_instance__lines__mystring__T13s as Mystring_instance__lines__mystring__T13s
  use Mystring_instance__lines__mystring__T13s__rep as Mystring_instance__lines__mystring__T13s__rep
  use Mystring_instance__lines__mystringstr as Mystring_instance__lines__mystringstr
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  type __split_fields = {
                       rec__mystring_instance__lines__mystring__length :
                         Mystring_instance__lines__mystring__T13s.t13s;
                       rec__mystring_instance__lines__mystring__str :
                         Array__Int__Standard__character.map
                       }
  
  function __split_fields_rec__mystring_instance__lines__mystring__length__projection (a: __split_fields) : 
    Mystring_instance__lines__mystring__T13s.t13s =
    a.rec__mystring_instance__lines__mystring__length
  
  meta "model_projection" function __split_fields_rec__mystring_instance__lines__mystring__length__projection
  
  meta "inline:no" function __split_fields_rec__mystring_instance__lines__mystring__length__projection
  
  function __split_fields_rec__mystring_instance__lines__mystring__str__projection (a: __split_fields) : 
    Array__Int__Standard__character.map =
    a.rec__mystring_instance__lines__mystring__str
  
  meta "model_projection" function __split_fields_rec__mystring_instance__lines__mystring__str__projection
  
  meta "inline:no" function __split_fields_rec__mystring_instance__lines__mystring__str__projection
  
  type __split_fields__ref = {
                            mutable __split_fields__content : __split_fields
                            }
  
  function __split_fields__ref___split_fields__content__5__projection (a: __split_fields__ref) : __split_fields =
    __split_fields__content a
  
  meta "model_projection" function __split_fields__ref___split_fields__content__5__projection
  
  meta "inline:no" function __split_fields__ref___split_fields__content__5__projection
  
  val __split_fields__havoc (x: __split_fields__ref) : unit
    writes { x }
  
  type __rep = { __split_fields : __split_fields }
  
  function __rep___split_fields__5__projection (a: __rep) : __split_fields =
    __split_fields a
  
  meta "model_projection" function __rep___split_fields__5__projection
  
  meta "inline:no" function __rep___split_fields__5__projection
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  predicate mystring_instance__lines__mystring__length__pred (a: __rep) =
    true
  
  val mystring_instance__lines__mystring__length__pred (a: __rep) : bool
    ensures { result
                <->
                (mystring_instance__lines__mystring__length__pred (a : __rep)) }
  
  val rec__mystring_instance__lines__mystring__length_ (a: __rep) : Mystring_instance__lines__mystring__T13s.t13s
    requires { mystring_instance__lines__mystring__length__pred a }
    ensures { (result
                 = ((__split_fields a).rec__mystring_instance__lines__mystring__length)) }
  
  predicate mystring_instance__lines__mystring__str__pred (a: __rep) = true
  
  val mystring_instance__lines__mystring__str__pred (a: __rep) : bool
    ensures { result
                <->
                (mystring_instance__lines__mystring__str__pred (a : __rep)) }
  
  val rec__mystring_instance__lines__mystring__str_ (a: __rep) : Array__Int__Standard__character.map
    requires { mystring_instance__lines__mystring__str__pred a }
    ensures { (result
                 = ((__split_fields a).rec__mystring_instance__lines__mystring__str)) }
  
  function bool_eq (a: __rep) (b: __rep) : bool =
    if (((Mystring_instance__lines__mystring__T13s__rep.to_rep
            ((__split_fields a).rec__mystring_instance__lines__mystring__length))
           = (Mystring_instance__lines__mystring__T13s__rep.to_rep
                ((__split_fields b).rec__mystring_instance__lines__mystring__length))) /\
          ((Mystring_instance__lines__mystringstr.bool_eq
              ((__split_fields a).rec__mystring_instance__lines__mystring__str))
             ((__split_fields b).rec__mystring_instance__lines__mystring__str))) then
      True
    else False
  
  val bool_eq (a: __rep) (b: __rep) : bool
    ensures { result = ((bool_eq (a : __rep)) (b : __rep)) }
end

module Mystring_instance__lines__mystring
  use export Mystring_instance__lines__mystring__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type mystring = __rep
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function mystring_instance__lines__mystring__length__first__bit : 
    int
  
  val function mystring_instance__lines__mystring__length__last__bit : 
    int
  
  val function mystring_instance__lines__mystring__length__position : 
    int
  
  axiom mystring_instance__lines__mystring__length__first__bit_axiom:
    (mystring_instance__lines__mystring__length__first__bit >= (0 : int))
  
  axiom mystring_instance__lines__mystring__length__last__bit_axiom:
    (mystring_instance__lines__mystring__length__last__bit
       > mystring_instance__lines__mystring__length__first__bit)
  
  axiom mystring_instance__lines__mystring__length__position_axiom:
    (mystring_instance__lines__mystring__length__position >= (0 : int))
  
  val function mystring_instance__lines__mystring__str__first__bit : 
    int
  
  val function mystring_instance__lines__mystring__str__last__bit : int
  
  val function mystring_instance__lines__mystring__str__position : int
  
  axiom mystring_instance__lines__mystring__str__first__bit_axiom:
    (mystring_instance__lines__mystring__str__first__bit >= (0 : int))
  
  axiom mystring_instance__lines__mystring__str__last__bit_axiom:
    (mystring_instance__lines__mystring__str__last__bit
       > mystring_instance__lines__mystring__str__first__bit)
  
  axiom mystring_instance__lines__mystring__str__position_axiom:
    (mystring_instance__lines__mystring__str__position >= (0 : int))
  
  val function user_eq (a: mystring) (b: mystring) : bool
  
  val function dummy : mystring
  
  type mystring__ref = { mutable mystring__content : mystring }
  
  function mystring__ref_mystring__content__projection (a: mystring__ref) : mystring =
    a.mystring__content
  
  meta "model_projection" function mystring__ref_mystring__content__projection
  
  meta "inline:no" function mystring__ref_mystring__content__projection
  
  val mystring__havoc (x: mystring__ref) : unit
    writes { x }
end

module Commandhandler__execute__s
  use _gnatprove_standard.Main
  use int.Int
  use Mystring_instance__lines__mystring as Mystring_instance__lines__mystring
  
  val function s : Mystring_instance__lines__mystring.mystring
end

module Mystringtokeniser__tokenextent__rep
  use _gnatprove_standard.Main
  use int.Int
  use Standard__natural as Standard__natural
  use Standard__natural__rep as Standard__natural__rep
  use Standard__positive as Standard__positive
  use Standard__positive__rep as Standard__positive__rep
  
  type __split_fields = {
                       rec__mystringtokeniser__tokenextent__start :
                         Standard__positive.positive;
                       rec__mystringtokeniser__tokenextent__length :
                         Standard__natural.natural
                       }
  
  function __split_fields_rec__mystringtokeniser__tokenextent__start__projection (a: __split_fields) : 
    Standard__positive.positive =
    a.rec__mystringtokeniser__tokenextent__start
  
  meta "model_projection" function __split_fields_rec__mystringtokeniser__tokenextent__start__projection
  
  meta "inline:no" function __split_fields_rec__mystringtokeniser__tokenextent__start__projection
  
  function __split_fields_rec__mystringtokeniser__tokenextent__length__projection (a: __split_fields) : 
    Standard__natural.natural =
    a.rec__mystringtokeniser__tokenextent__length
  
  meta "model_projection" function __split_fields_rec__mystringtokeniser__tokenextent__length__projection
  
  meta "inline:no" function __split_fields_rec__mystringtokeniser__tokenextent__length__projection
  
  type __split_fields__ref = {
                            mutable __split_fields__content : __split_fields
                            }
  
  function __split_fields__ref___split_fields__content__6__projection (a: __split_fields__ref) : __split_fields =
    __split_fields__content a
  
  meta "model_projection" function __split_fields__ref___split_fields__content__6__projection
  
  meta "inline:no" function __split_fields__ref___split_fields__content__6__projection
  
  val __split_fields__havoc (x: __split_fields__ref) : unit
    writes { x }
  
  type __rep = { __split_fields : __split_fields }
  
  function __rep___split_fields__6__projection (a: __rep) : __split_fields =
    __split_fields a
  
  meta "model_projection" function __rep___split_fields__6__projection
  
  meta "inline:no" function __rep___split_fields__6__projection
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  predicate mystringtokeniser__tokenextent__start__pred (a: __rep) = true
  
  val mystringtokeniser__tokenextent__start__pred (a: __rep) : bool
    ensures { result
                <->
                (mystringtokeniser__tokenextent__start__pred (a : __rep)) }
  
  val rec__mystringtokeniser__tokenextent__start_ (a: __rep) : Standard__positive.positive
    requires { mystringtokeniser__tokenextent__start__pred a }
    ensures { (result
                 = ((__split_fields a).rec__mystringtokeniser__tokenextent__start)) }
  
  predicate mystringtokeniser__tokenextent__length__pred (a: __rep) = true
  
  val mystringtokeniser__tokenextent__length__pred (a: __rep) : bool
    ensures { result
                <->
                (mystringtokeniser__tokenextent__length__pred (a : __rep)) }
  
  val rec__mystringtokeniser__tokenextent__length_ (a: __rep) : Standard__natural.natural
    requires { mystringtokeniser__tokenextent__length__pred a }
    ensures { (result
                 = ((__split_fields a).rec__mystringtokeniser__tokenextent__length)) }
  
  function bool_eq (a: __rep) (b: __rep) : bool =
    if (((Standard__positive__rep.to_rep
            ((__split_fields a).rec__mystringtokeniser__tokenextent__start))
           = (Standard__positive__rep.to_rep
                ((__split_fields b).rec__mystringtokeniser__tokenextent__start))) /\
          ((Standard__natural__rep.to_rep
              ((__split_fields a).rec__mystringtokeniser__tokenextent__length))
             = (Standard__natural__rep.to_rep
                  ((__split_fields b).rec__mystringtokeniser__tokenextent__length)))) then
      True
    else False
  
  val bool_eq (a: __rep) (b: __rep) : bool
    ensures { result = ((bool_eq (a : __rep)) (b : __rep)) }
end

module Mystringtokeniser__tokenextent
  use export Mystringtokeniser__tokenextent__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type tokenextent = __rep
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function mystringtokeniser__tokenextent__start__first__bit : int
  
  val function mystringtokeniser__tokenextent__start__last__bit : int
  
  val function mystringtokeniser__tokenextent__start__position : int
  
  axiom mystringtokeniser__tokenextent__start__first__bit_axiom:
    (mystringtokeniser__tokenextent__start__first__bit >= (0 : int))
  
  axiom mystringtokeniser__tokenextent__start__last__bit_axiom:
    (mystringtokeniser__tokenextent__start__last__bit
       > mystringtokeniser__tokenextent__start__first__bit)
  
  axiom mystringtokeniser__tokenextent__start__position_axiom:
    (mystringtokeniser__tokenextent__start__position >= (0 : int))
  
  val function mystringtokeniser__tokenextent__length__first__bit : int
  
  val function mystringtokeniser__tokenextent__length__last__bit : int
  
  val function mystringtokeniser__tokenextent__length__position : int
  
  axiom mystringtokeniser__tokenextent__length__first__bit_axiom:
    (mystringtokeniser__tokenextent__length__first__bit >= (0 : int))
  
  axiom mystringtokeniser__tokenextent__length__last__bit_axiom:
    (mystringtokeniser__tokenextent__length__last__bit
       > mystringtokeniser__tokenextent__length__first__bit)
  
  axiom mystringtokeniser__tokenextent__length__position_axiom:
    (mystringtokeniser__tokenextent__length__position >= (0 : int))
  
  val function user_eq (a: tokenextent) (b: tokenextent) : bool
  
  val function dummy : tokenextent
  
  type tokenextent__ref = { mutable tokenextent__content : tokenextent }
  
  function tokenextent__ref_tokenextent__content__projection (a: tokenextent__ref) : tokenextent =
    a.tokenextent__content
  
  meta "model_projection" function tokenextent__ref_tokenextent__content__projection
  
  meta "inline:no" function tokenextent__ref_tokenextent__content__projection
  
  val tokenextent__havoc (x: tokenextent__ref) : unit
    writes { x }
end

module Array__Int__Mystringtokeniser__tokenextent
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Mystringtokeniser__tokenextent as Mystringtokeniser__tokenextent
  
  function index_I1_one : int = 1 : int
  
  type component_type = Mystringtokeniser__tokenextent.tokenextent
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_165 : int.
          if ((a__first <= temp___idx_165) /\ (temp___idx_165 <= a__last)) then
            ((Mystringtokeniser__tokenextent.bool_eq ((get a) temp___idx_165))
               ((get b) ((b__first - a__first) + temp___idx_165)))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_165 : int.
                 if ((a__first <= temp___idx_165) /\
                       (temp___idx_165 <= a__last)) then
                   ((Mystringtokeniser__tokenextent.bool_eq
                       ((get a) temp___idx_165))
                      ((get b) ((b__first - a__first) + temp___idx_165)))
                 else true)))
end

module Commandhandler__execute__t
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  
  val t : Array__Int__Mystringtokeniser__tokenextent.map__ref
end

module Commandhandler__execute__numtokens
  use _gnatprove_standard.Main
  use int.Int
  
  val numtokens : int__ref
end

module Mystring_instance__lines__length
  use _gnatprove_standard.Main
  use int.Int
  use Mystring_instance__lines__mystring as Mystring_instance__lines__mystring
  
  val function length (m: Mystring_instance__lines__mystring.mystring) : 
    int
  
  val predicate length__function_guard (temp___result_166: int) (m: Mystring_instance__lines__mystring.mystring)
end

module Mystring_instance__lines__to_string
  use _gnatprove_standard.Main
  use int.Int
  use Standard__string as Standard__string
  use Mystring_instance__lines__mystring as Mystring_instance__lines__mystring
  
  val function to_string (m: Mystring_instance__lines__mystring.mystring) : 
    Standard__string.string__
  
  val predicate to_string__function_guard (temp___result_167: Standard__string.string__) (m: 
    Mystring_instance__lines__mystring.mystring)
end

module Mystring_instance__lines__to_string___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__string as Standard__string
  use Standard__string___axiom as Standard__string___axiom
  use Mystring_instance__lines__mystring as Mystring_instance__lines__mystring
  use Mystring_instance__lines__length as Mystring_instance__lines__length
  use Mystring_instance__lines__to_string as Mystring_instance__lines__to_string
  
  val to_string (m: Mystring_instance__lines__mystring.mystring) : Standard__string.string__
    requires { true }
    ensures { (((result = (Mystring_instance__lines__to_string.to_string m)) /\
                  ((Mystring_instance__lines__to_string.to_string__function_guard
                      result)
                     m)) /\
                 ((((((Standard__string___axiom.dynamic_invariant result)
                        True)
                       False)
                      True)
                     True) /\
                    ((([@GP_Pretty_Ada:17135]
                       ((Standard__string.length result)
                          = (epsilon temp___result_372: int.
                               ((temp___result_372
                                   = (Mystring_instance__lines__length.length
                                        m)) /\
                                  ((Mystring_instance__lines__length.length__function_guard
                                      temp___result_372)
                                     m))))) /\
                        ([@GP_Pretty_Ada:17142]
                         ((Standard__string.first result) = (1 : int)))) /\
                       ([@GP_Pretty_Ada:17147]
                        ((Standard__string.last result)
                           = (epsilon temp___result_373: int.
                                ((temp___result_373
                                    = (Mystring_instance__lines__length.length
                                         m)) /\
                                   ((Mystring_instance__lines__length.length__function_guard
                                       temp___result_373)
                                      m)))))))) }
end

module Mystringtokeniser__tokenarray
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__positive as Standard__positive
  use Standard__integer__rep as Standard__integer__rep
  use Mystringtokeniser__tokenextent as Mystringtokeniser__tokenextent
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  
  type component_type = Mystringtokeniser__tokenextent.tokenextent
  
  function index_1_id (x: int) : int = x
  
  clone export ada__model.Unconstr_Array with
    axiom .,
    type map = Array__Int__Mystringtokeniser__tokenextent.map,
    function array_bool_eq = Array__Int__Mystringtokeniser__tokenextent.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__positive.dynamic_property,
    predicate index_rep_le = Int.( <= )
  
  type tokenarray = __t
  
  meta "model_projection" function to_array
  
  meta "inline:no" function to_array
  
  meta "model_projection" function first
  
  meta "inline:no" function first
  
  meta "model_projection" function last
  
  meta "inline:no" function last
  
  type tokenarray__ref = { mutable tokenarray__content : tokenarray }
  
  function tokenarray__ref_tokenarray__content__projection (a: tokenarray__ref) : tokenarray =
    a.tokenarray__content
  
  meta "model_projection" function tokenarray__ref_tokenarray__content__projection
  
  meta "inline:no" function tokenarray__ref_tokenarray__content__projection
  
  val tokenarray__havoc (x: tokenarray__ref) : unit
    writes { x }
end

module Mystringtokeniser__tokenarray___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__positive as Standard__positive
  use Mystringtokeniser__tokenarray as Mystringtokeniser__tokenarray
  
  predicate dynamic_invariant (temp___expr_324: Mystringtokeniser__tokenarray.tokenarray) (temp___is_init_320: bool) (temp___skip_constant_321: bool) (temp___do_toplevel_322: bool) (temp___do_typ_inv_323: bool) =
    if temp___skip_constant_321 then true
    else
      ((((Mystringtokeniser__tokenarray.dynamic_property
            Standard__positive.first)
           Standard__positive.last)
          (Mystringtokeniser__tokenarray.first temp___expr_324))
         (Mystringtokeniser__tokenarray.last temp___expr_324))
  
  val dynamic_invariant (temp___expr_324: Mystringtokeniser__tokenarray.tokenarray) (temp___is_init_320: bool) (temp___skip_constant_321: bool) (temp___do_toplevel_322: bool) (temp___do_typ_inv_323: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_324 :
                          Mystringtokeniser__tokenarray.tokenarray))
                      (temp___is_init_320 : bool))
                     (temp___skip_constant_321 : bool))
                    (temp___do_toplevel_322 : bool))
                   (temp___do_typ_inv_323 : bool)) }
end

module Mystringtokeniser__tokenise___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Integer as Integer
  use Standard__integer as Standard__integer
  use Standard__natural as Standard__natural
  use Standard__natural___axiom as Standard__natural___axiom
  use Standard__natural__rep as Standard__natural__rep
  use Standard__positive as Standard__positive
  use Standard__positive__rep as Standard__positive__rep
  use Standard__string as Standard__string
  use Standard__integer__rep as Standard__integer__rep
  use Mystringtokeniser__tokenextent as Mystringtokeniser__tokenextent
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Mystringtokeniser__tokenarray as Mystringtokeniser__tokenarray
  use Mystringtokeniser__tokenarray___axiom as Mystringtokeniser__tokenarray___axiom
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  
  val tokenise (s: Standard__string.string__) (tokens: Array__Int__Mystringtokeniser__tokenextent.map__ref) (tokens__first: 
    Standard__integer.integer) (tokens__last: Standard__integer.integer) (count: int__ref) : 
    unit
    requires { ((if ((Standard__string.length s) > (0 : int)) then
                   ([@GP_Pretty_Ada:9179]
                    ((Standard__string.first s) <= (Standard__string.last s)))
                 else ([@GP_Pretty_Ada:18029] true)) /\
                  ([@GP_Pretty_Ada:9188]
                   ((Standard__integer__rep.to_rep tokens__first)
                      <= (Standard__integer__rep.to_rep tokens__last))))
    }
    writes { tokens, count }
    ensures { ((([@GP_Pretty_Ada:9196]
                 ((count.int__content)
                    <= ((Integer.length
                           (Standard__integer__rep.to_rep tokens__first))
                          (Standard__integer__rep.to_rep tokens__last)))) /\
                  (forall index : int.
                     ((((Standard__integer__rep.to_rep tokens__first)
                          <= index) /\
                         (index
                            <= ((Standard__integer__rep.to_rep tokens__first)
                                  + ((count.int__content) - (1 : int))))) ->
                        ((([@GP_Pretty_Ada:9220]
                           ((Standard__positive__rep.to_rep
                               ((Mystringtokeniser__tokenextent.__split_fields
                                    (let temp___376 =
                                       ((Mystringtokeniser__tokenarray.of_array
                                           (tokens.Array__Int__Mystringtokeniser__tokenextent.map__content))
                                          (Standard__integer__rep.to_rep
                                             tokens__first))
                                         (Standard__integer__rep.to_rep
                                            tokens__last) in
                                     (Array__Int__Mystringtokeniser__tokenextent.get
                                        (Mystringtokeniser__tokenarray.to_array
                                           temp___376))
                                       index)).Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                              >= (Standard__string.first s))) /\
                            ([@GP_Pretty_Ada:9230]
                             ((Standard__natural__rep.to_rep
                                 ((Mystringtokeniser__tokenextent.__split_fields
                                      (let temp___377 =
                                         ((Mystringtokeniser__tokenarray.of_array
                                             (tokens.Array__Int__Mystringtokeniser__tokenextent.map__content))
                                            (Standard__integer__rep.to_rep
                                               tokens__first))
                                           (Standard__integer__rep.to_rep
                                              tokens__last) in
                                       (Array__Int__Mystringtokeniser__tokenextent.get
                                          (Mystringtokeniser__tokenarray.to_array
                                             temp___377))
                                         index)).Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length))
                                > (0 : int)))) /\
                           ([@GP_Pretty_Ada:9240]
                            (((Standard__natural__rep.to_rep
                                 ((Mystringtokeniser__tokenextent.__split_fields
                                      (let temp___378 =
                                         ((Mystringtokeniser__tokenarray.of_array
                                             (tokens.Array__Int__Mystringtokeniser__tokenextent.map__content))
                                            (Standard__integer__rep.to_rep
                                               tokens__first))
                                           (Standard__integer__rep.to_rep
                                              tokens__last) in
                                       (Array__Int__Mystringtokeniser__tokenextent.get
                                          (Mystringtokeniser__tokenarray.to_array
                                             temp___378))
                                         index)).Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length))
                                - (1 : int))
                               <= ((Standard__string.last s)
                                     - (Standard__positive__rep.to_rep
                                          ((Mystringtokeniser__tokenextent.__split_fields
                                               (let temp___379 =
                                                  ((Mystringtokeniser__tokenarray.of_array
                                                      (tokens.Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                     (Standard__integer__rep.to_rep
                                                        tokens__first))
                                                    (Standard__integer__rep.to_rep
                                                       tokens__last) in
                                                (Array__Int__Mystringtokeniser__tokenextent.get
                                                   (Mystringtokeniser__tokenarray.to_array
                                                      temp___379))
                                                  index)).Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))))))))) /\
                 ((((((Mystringtokeniser__tokenarray___axiom.dynamic_invariant
                         (((Mystringtokeniser__tokenarray.of_array
                              (tokens.Array__Int__Mystringtokeniser__tokenextent.map__content))
                             (Standard__integer__rep.to_rep tokens__first))
                            (Standard__integer__rep.to_rep tokens__last)))
                        True)
                       True)
                      True)
                     True) /\
                    (((((Standard__natural___axiom.dynamic_invariant
                           (count.int__content))
                          True)
                         True)
                        True)
                       True))) }
end

module Ada___ada__text_io__line_length__2
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  
  val function line_length (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private) : int
  
  val predicate line_length__function_guard (temp___result_163: int) (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private)
end

module Ada___ada__text_io__page_length__2
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  
  val function page_length (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private) : int
  
  val predicate page_length__function_guard (temp___result_164: int) (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private)
end

module Ada___ada__text_io__file_system
  use _gnatprove_standard.Main
  use int.Int
  
  val file_system : Main.__private__ref
end

module Ada___ada__text_io__standard_in
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_in : Main.__private__ref
end

module Ada___ada__text_io__standard_out
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_out : Main.__private__ref
end

module Ada___ada__text_io__standard_err
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_err : Main.__private__ref
end

module Ada___ada__text_io__current_in
  use _gnatprove_standard.Main
  use int.Int
  
  val current_in : Main.__private__ref
end

module Ada___ada__text_io__current_out
  use _gnatprove_standard.Main
  use int.Int
  
  val current_out : Main.__private__ref
end

module Ada___ada__text_io__current_err
  use _gnatprove_standard.Main
  use int.Int
  
  val current_err : Main.__private__ref
end

module Ada___ada__text_io__put_line__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Standard__string as Standard__string
  use Ada___ada__text_io__line_length__2 as Ada___ada__text_io__line_length__2
  use Ada___ada__text_io__page_length__2 as Ada___ada__text_io__page_length__2
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val put_line (item: Standard__string.string__) : unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err }
    ensures { (([@GP_Pretty_Ada:5312]
                ((old (((((((Ada___ada__text_io__line_length__2.line_length
                               (Main.__private__content
                                   Ada___ada__text_io__file_system.file_system))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_in.standard_in))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_out.standard_out))
                            (Main.__private__content
                                Ada___ada__text_io__standard_err.standard_err))
                           (Main.__private__content
                               Ada___ada__text_io__current_in.current_in))
                          (Main.__private__content
                              Ada___ada__text_io__current_out.current_out))
                         (Main.__private__content
                             Ada___ada__text_io__current_err.current_err)))
                   = (((((((Ada___ada__text_io__line_length__2.line_length
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err)))) /\
                 ([@GP_Pretty_Ada:5318]
                  ((old (((((((Ada___ada__text_io__page_length__2.page_length
                                 (Main.__private__content
                                     Ada___ada__text_io__file_system.file_system))
                                (Main.__private__content
                                    Ada___ada__text_io__standard_in.standard_in))
                               (Main.__private__content
                                   Ada___ada__text_io__standard_out.standard_out))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_err.standard_err))
                             (Main.__private__content
                                 Ada___ada__text_io__current_in.current_in))
                            (Main.__private__content
                                Ada___ada__text_io__current_out.current_out))
                           (Main.__private__content
                               Ada___ada__text_io__current_err.current_err)))
                     = (((((((Ada___ada__text_io__page_length__2.page_length
                                (Main.__private__content
                                    Ada___ada__text_io__file_system.file_system))
                               (Main.__private__content
                                   Ada___ada__text_io__standard_in.standard_in))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_out.standard_out))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_err.standard_err))
                            (Main.__private__content
                                Ada___ada__text_io__current_in.current_in))
                           (Main.__private__content
                               Ada___ada__text_io__current_out.current_out))
                          (Main.__private__content
                              Ada___ada__text_io__current_err.current_err))))) }
end

module Mystring_instance__lines__substring
  use _gnatprove_standard.Main
  use int.Int
  use Mystring_instance__lines__mystring as Mystring_instance__lines__mystring
  
  val function substring (m: Mystring_instance__lines__mystring.mystring) (from: int) (to__: int) : 
    Mystring_instance__lines__mystring.mystring
  
  val predicate substring__function_guard (temp___result_168: Mystring_instance__lines__mystring.mystring) (m: 
    Mystring_instance__lines__mystring.mystring) (from: int) (to__: int)
end

module Mystring_instance__lines__mystring___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Mystring_instance__lines__mystring as Mystring_instance__lines__mystring
  
  predicate dynamic_invariant (temp___expr_291: Mystring_instance__lines__mystring.mystring) (temp___is_init_287: bool) (temp___skip_constant_288: bool) (temp___do_toplevel_289: bool) (temp___do_typ_inv_290: bool) =
    true
  
  val dynamic_invariant (temp___expr_291: Mystring_instance__lines__mystring.mystring) (temp___is_init_287: bool) (temp___skip_constant_288: bool) (temp___do_toplevel_289: bool) (temp___do_typ_inv_290: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_291 :
                          Mystring_instance__lines__mystring.mystring))
                      (temp___is_init_287 : bool))
                     (temp___skip_constant_288 : bool))
                    (temp___do_toplevel_289 : bool))
                   (temp___do_typ_inv_290 : bool)) }
  
  predicate default_initial_assumption (temp___expr_293: Mystring_instance__lines__mystring.mystring) (temp___skip_top_level_294: bool) =
    true
  
  val default_initial_assumption (temp___expr_293: Mystring_instance__lines__mystring.mystring) (temp___skip_top_level_294: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_293 :
                       Mystring_instance__lines__mystring.mystring))
                   (temp___skip_top_level_294 : bool)) }
end

module Mystring_instance__lines__substring___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Mystring_instance__lines__mystring as Mystring_instance__lines__mystring
  use Mystring_instance__lines__length as Mystring_instance__lines__length
  use Mystring_instance__lines__substring as Mystring_instance__lines__substring
  use Mystring_instance__lines__mystring___axiom as Mystring_instance__lines__mystring___axiom
  
  val substring (m: Mystring_instance__lines__mystring.mystring) (from: int) (to__: int) : 
    Mystring_instance__lines__mystring.mystring
    requires { (([@GP_Pretty_Ada:17249] (from <= to__)) /\
                  ([@GP_Pretty_Ada:17252]
                   (to__
                      <= (epsilon temp___result_384: int.
                            ((temp___result_384
                                = (Mystring_instance__lines__length.length m)) /\
                               ((Mystring_instance__lines__length.length__function_guard
                                   temp___result_384)
                                  m))))))
    }
    ensures { (((result
                   = (((Mystring_instance__lines__substring.substring m) from)
                        to__)) /\
                  ((((Mystring_instance__lines__substring.substring__function_guard
                        result)
                       m)
                      from)
                     to__)) /\
                 ((((((Mystring_instance__lines__mystring___axiom.dynamic_invariant
                         result)
                        True)
                       False)
                      True)
                     True) /\
                    ([@GP_Pretty_Ada:17454]
                     ((epsilon temp___result_385: int.
                         ((temp___result_385
                             = (Mystring_instance__lines__length.length
                                  result)) /\
                            ((Mystring_instance__lines__length.length__function_guard
                                temp___result_385)
                               result)))
                        = ((to__ - from) + (1 : int)))))) }
end

module Commandhandler__execute__B_1__token1
  use _gnatprove_standard.Main
  use int.Int
  use Standard__integer as Standard__integer
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val token1 : Array__Int__Standard__character.map__ref
  
  val function token1__first : Standard__integer.integer
  
  val function token1__last : Standard__integer.integer
end

module Locker__is_locked
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  
  val function is_locked (l: Locker__locker.locker) : bool
  
  val predicate is_locked__function_guard (temp___result_169: bool) (l: 
    Locker__locker.locker)
end

module Locker__is_locked___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Locker__locker___axiom as Locker__locker___axiom
  use Locker__is_locked as Locker__is_locked
  
  val is_locked (l: Locker__locker.locker) : bool
    requires { true }
    ensures { (((result = (Locker__is_locked.is_locked l)) /\
                  ((Locker__is_locked.is_locked__function_guard result) l)) /\
                 true) }
  
  axiom is_locked__post_axiom:
    forall l : Locker__locker.locker [Locker__is_locked.is_locked l].
      ((((((Locker__locker___axiom.dynamic_invariant l) True) True) True)
          True) ->
         (let result = Locker__is_locked.is_locked l in
          if ((Locker__is_locked.is_locked__function_guard result) l) then
            ((true /\ true) /\ true)
          else true))
end

module Calculator__int32
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type int32 = <range -2147483648 2147483647>
  
  val function first : int
    ensures { result = ((- 2147483648) : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = int32,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type int32__ref = { mutable int32__content : int32 }
  
  function int32__ref_int32__content__3__projection (a: int32__ref) : int32 =
    a.int32__content
  
  meta "model_projection" function int32__ref_int32__content__3__projection
  
  meta "inline:no" function int32__ref_int32__content__3__projection
  
  val int32__havoc (x: int32__ref) : unit
    writes { x }
end

module Calculator__int32__rep
  use Calculator__int32 as Calculator__int32
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Calculator__int32.int32) : int =
    Calculator__int32.int32'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Calculator__int32.int32,
    predicate in_range = Calculator__int32.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Calculator__result__rep
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Boolean as Boolean
  use Calculator__int32 as Calculator__int32
  use Calculator__int32__rep as Calculator__int32__rep
  
  type __split_fields = {
                       rec__calculator__result__success : bool;
                       rec__calculator__result__value :
                         Calculator__int32.int32
                       }
  
  function __split_fields_rec__calculator__result__success__projection (a: __split_fields) : bool =
    a.rec__calculator__result__success
  
  meta "model_projection" function __split_fields_rec__calculator__result__success__projection
  
  meta "inline:no" function __split_fields_rec__calculator__result__success__projection
  
  function __split_fields_rec__calculator__result__value__projection (a: __split_fields) : 
    Calculator__int32.int32 =
    a.rec__calculator__result__value
  
  meta "model_projection" function __split_fields_rec__calculator__result__value__projection
  
  meta "inline:no" function __split_fields_rec__calculator__result__value__projection
  
  type __split_fields__ref = {
                            mutable __split_fields__content : __split_fields
                            }
  
  function __split_fields__ref___split_fields__content__7__projection (a: __split_fields__ref) : __split_fields =
    __split_fields__content a
  
  meta "model_projection" function __split_fields__ref___split_fields__content__7__projection
  
  meta "inline:no" function __split_fields__ref___split_fields__content__7__projection
  
  val __split_fields__havoc (x: __split_fields__ref) : unit
    writes { x }
  
  type __rep = { __split_fields : __split_fields }
  
  function __rep___split_fields__7__projection (a: __rep) : __split_fields =
    __split_fields a
  
  meta "model_projection" function __rep___split_fields__7__projection
  
  meta "inline:no" function __rep___split_fields__7__projection
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  predicate calculator__result__success__pred (a: __rep) = true
  
  val calculator__result__success__pred (a: __rep) : bool
    ensures { result <-> (calculator__result__success__pred (a : __rep)) }
  
  val rec__calculator__result__success_ (a: __rep) : bool
    requires { calculator__result__success__pred a }
    ensures { (result
                 = ((__split_fields a).rec__calculator__result__success)) }
  
  predicate calculator__result__value__pred (a: __rep) = true
  
  val calculator__result__value__pred (a: __rep) : bool
    ensures { result <-> (calculator__result__value__pred (a : __rep)) }
  
  val rec__calculator__result__value_ (a: __rep) : Calculator__int32.int32
    requires { calculator__result__value__pred a }
    ensures { (result = ((__split_fields a).rec__calculator__result__value)) }
  
  function bool_eq (a: __rep) (b: __rep) : bool =
    if (((Boolean.to_int
            ((__split_fields a).rec__calculator__result__success))
           = (Boolean.to_int
                ((__split_fields b).rec__calculator__result__success))) /\
          ((Calculator__int32__rep.to_rep
              ((__split_fields a).rec__calculator__result__value))
             = (Calculator__int32__rep.to_rep
                  ((__split_fields b).rec__calculator__result__value)))) then
      True
    else False
  
  val bool_eq (a: __rep) (b: __rep) : bool
    ensures { result = ((bool_eq (a : __rep)) (b : __rep)) }
end

module Calculator__result
  use export Calculator__result__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type result__ = __rep
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function calculator__result__success__first__bit : int
  
  val function calculator__result__success__last__bit : int
  
  val function calculator__result__success__position : int
  
  axiom calculator__result__success__first__bit_axiom:
    (calculator__result__success__first__bit >= (0 : int))
  
  axiom calculator__result__success__last__bit_axiom:
    (calculator__result__success__last__bit
       > calculator__result__success__first__bit)
  
  axiom calculator__result__success__position_axiom:
    (calculator__result__success__position >= (0 : int))
  
  val function calculator__result__value__first__bit : int
  
  val function calculator__result__value__last__bit : int
  
  val function calculator__result__value__position : int
  
  axiom calculator__result__value__first__bit_axiom:
    (calculator__result__value__first__bit >= (0 : int))
  
  axiom calculator__result__value__last__bit_axiom:
    (calculator__result__value__last__bit
       > calculator__result__value__first__bit)
  
  axiom calculator__result__value__position_axiom:
    (calculator__result__value__position >= (0 : int))
  
  val function user_eq (a: result__) (b: result__) : bool
  
  val function dummy : result__
  
  type result____ref = { mutable result____content : result__ }
  
  function result____ref_result____content__projection (a: result____ref) : result__ =
    a.result____content
  
  meta "model_projection" function result____ref_result____content__projection
  
  meta "inline:no" function result____ref_result____content__projection
  
  val result____havoc (x: result____ref) : unit
    writes { x }
end

module Commandhandler__execute__result
  use export Calculator__result
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_2__r
  use _gnatprove_standard.Main
  use int.Int
  use Commandhandler__execute__result as Commandhandler__execute__result
  
  val r__split_fields : Commandhandler__execute__result.__split_fields__ref
end

module Commandhandler__execute__result___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Commandhandler__execute__result as Commandhandler__execute__result
  
  predicate dynamic_invariant (temp___expr_365: Commandhandler__execute__result.result__) (temp___is_init_361: bool) (temp___skip_constant_362: bool) (temp___do_toplevel_363: bool) (temp___do_typ_inv_364: bool) =
    true
  
  val dynamic_invariant (temp___expr_365: Commandhandler__execute__result.result__) (temp___is_init_361: bool) (temp___skip_constant_362: bool) (temp___do_toplevel_363: bool) (temp___do_typ_inv_364: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_365 :
                          Commandhandler__execute__result.result__))
                      (temp___is_init_361 : bool))
                     (temp___skip_constant_362 : bool))
                    (temp___do_toplevel_363 : bool))
                   (temp___do_typ_inv_364 : bool)) }
  
  predicate default_initial_assumption (temp___expr_366: Commandhandler__execute__result.result__) (temp___skip_top_level_367: bool) =
    true
  
  val default_initial_assumption (temp___expr_366: Commandhandler__execute__result.result__) (temp___skip_top_level_367: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_366 :
                       Commandhandler__execute__result.result__))
                   (temp___skip_top_level_367 : bool)) }
end

module Commandhandler__execute__B_1__B_2__a
  use _gnatprove_standard.Main
  use int.Int
  
  val a : int__ref
end

module Commandhandler__execute__B_1__B_2__b
  use _gnatprove_standard.Main
  use int.Int
  
  val b : int__ref
end

module Commandhandler__execute__B_1__B_2__success
  use _gnatprove_standard.Main
  use int.Int
  
  val success : bool__ref
end

module Stack__int32___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Stack__int32 as Stack__int32
  
  predicate dynamic_invariant (temp___expr_211: int) (temp___is_init_207: bool) (temp___skip_constant_208: bool) (temp___do_toplevel_209: bool) (temp___do_typ_inv_210: bool) =
    if ((temp___is_init_207 = True) \/
          (Stack__int32.first <= Stack__int32.last)) then
      (((Stack__int32.dynamic_property Stack__int32.first) Stack__int32.last)
         temp___expr_211)
    else true
  
  val dynamic_invariant (temp___expr_211: int) (temp___is_init_207: bool) (temp___skip_constant_208: bool) (temp___do_toplevel_209: bool) (temp___do_typ_inv_210: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_211 : int))
                      (temp___is_init_207 : bool))
                     (temp___skip_constant_208 : bool))
                    (temp___do_toplevel_209 : bool))
                   (temp___do_typ_inv_210 : bool)) }
  
  predicate default_initial_assumption (temp___expr_212: int) (temp___skip_top_level_213: bool) =
    true
  
  val default_initial_assumption (temp___expr_212: int) (temp___skip_top_level_213: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_212 : int))
                   (temp___skip_top_level_213 : bool)) }
end

module Stack__pop2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Stack__stack_instance as Stack__stack_instance
  use Stack__stack_instance___axiom as Stack__stack_instance___axiom
  use Stack__int32___axiom as Stack__int32___axiom
  
  val pop2 (l: Locker__locker.locker) (s__split_fields: Stack__stack_instance.__split_fields__ref) (a: int__ref) (b: int__ref) (success: bool__ref) : 
    unit
    requires { true }
    writes { s__split_fields, a, b, success }
    ensures { (((((((Stack__stack_instance___axiom.dynamic_invariant
                       { Stack__stack_instance.__split_fields =
                           (Stack__stack_instance.__split_fields__content
                               s__split_fields) })
                      True)
                     True)
                    True)
                   True) /\
                  (((((Stack__int32___axiom.dynamic_invariant
                         (a.int__content))
                        True)
                       True)
                      True)
                     True)) /\
                 (((((Stack__int32___axiom.dynamic_invariant (b.int__content))
                       True)
                      True)
                     True)
                    True)) }
end

module Calculator__add
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Calculator__result as Calculator__result
  
  val function add (l: Locker__locker.locker) (a: int) (b: int) : Calculator__result.result__
  
  val predicate add__function_guard (temp___result_170: Calculator__result.result__) (l: 
    Locker__locker.locker) (a: int) (b: int)
end

module Calculator__int32___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Calculator__int32 as Calculator__int32
  
  predicate dynamic_invariant (temp___expr_342: int) (temp___is_init_338: bool) (temp___skip_constant_339: bool) (temp___do_toplevel_340: bool) (temp___do_typ_inv_341: bool) =
    if ((temp___is_init_338 = True) \/
          (Calculator__int32.first <= Calculator__int32.last)) then
      (((Calculator__int32.dynamic_property Calculator__int32.first)
          Calculator__int32.last)
         temp___expr_342)
    else true
  
  val dynamic_invariant (temp___expr_342: int) (temp___is_init_338: bool) (temp___skip_constant_339: bool) (temp___do_toplevel_340: bool) (temp___do_typ_inv_341: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_342 : int))
                      (temp___is_init_338 : bool))
                     (temp___skip_constant_339 : bool))
                    (temp___do_toplevel_340 : bool))
                   (temp___do_typ_inv_341 : bool)) }
  
  predicate default_initial_assumption (temp___expr_343: int) (temp___skip_top_level_344: bool) =
    true
  
  val default_initial_assumption (temp___expr_343: int) (temp___skip_top_level_344: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_343 : int))
                   (temp___skip_top_level_344 : bool)) }
end

module Calculator__result___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Calculator__result as Calculator__result
  
  predicate dynamic_invariant (temp___expr_356: Calculator__result.result__) (temp___is_init_352: bool) (temp___skip_constant_353: bool) (temp___do_toplevel_354: bool) (temp___do_typ_inv_355: bool) =
    true
  
  val dynamic_invariant (temp___expr_356: Calculator__result.result__) (temp___is_init_352: bool) (temp___skip_constant_353: bool) (temp___do_toplevel_354: bool) (temp___do_typ_inv_355: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_356 : Calculator__result.result__))
                      (temp___is_init_352 : bool))
                     (temp___skip_constant_353 : bool))
                    (temp___do_toplevel_354 : bool))
                   (temp___do_typ_inv_355 : bool)) }
  
  predicate default_initial_assumption (temp___expr_357: Calculator__result.result__) (temp___skip_top_level_358: bool) =
    true
  
  val default_initial_assumption (temp___expr_357: Calculator__result.result__) (temp___skip_top_level_358: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_357 : Calculator__result.result__))
                   (temp___skip_top_level_358 : bool)) }
end

module Calculator__add___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Locker__locker___axiom as Locker__locker___axiom
  use Calculator__result as Calculator__result
  use Calculator__add as Calculator__add
  use Calculator__int32___axiom as Calculator__int32___axiom
  use Calculator__result___axiom as Calculator__result___axiom
  
  val add (l: Locker__locker.locker) (a: int) (b: int) : Calculator__result.result__
    requires { true }
    ensures { (((result = (((Calculator__add.add l) a) b)) /\
                  ((((Calculator__add.add__function_guard result) l) a) b)) /\
                 (((((Calculator__result___axiom.dynamic_invariant result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom add__post_axiom:
    forall l : Locker__locker.locker.
      forall a : int, b : int [((Calculator__add.add l) a) b].
        ((((((((Locker__locker___axiom.dynamic_invariant l) True) True) True)
              True) /\
             (((((Calculator__int32___axiom.dynamic_invariant a) True) True)
                 True)
                True)) /\
            (((((Calculator__int32___axiom.dynamic_invariant b) True) True)
                True)
               True)) ->
           (let result = ((Calculator__add.add l) a) b in
            if ((((Calculator__add.add__function_guard result) l) a) b) then
              ((true /\
                  (((((Calculator__result___axiom.dynamic_invariant result)
                        True)
                       False)
                      True)
                     True)) /\
                 true)
            else true))
end

module Calculator__sub
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Calculator__result as Calculator__result
  
  val function sub (l: Locker__locker.locker) (a: int) (b: int) : Calculator__result.result__
  
  val predicate sub__function_guard (temp___result_171: Calculator__result.result__) (l: 
    Locker__locker.locker) (a: int) (b: int)
end

module Calculator__sub___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Locker__locker___axiom as Locker__locker___axiom
  use Calculator__result as Calculator__result
  use Calculator__sub as Calculator__sub
  use Calculator__int32___axiom as Calculator__int32___axiom
  use Calculator__result___axiom as Calculator__result___axiom
  
  val sub (l: Locker__locker.locker) (a: int) (b: int) : Calculator__result.result__
    requires { true }
    ensures { (((result = (((Calculator__sub.sub l) a) b)) /\
                  ((((Calculator__sub.sub__function_guard result) l) a) b)) /\
                 (((((Calculator__result___axiom.dynamic_invariant result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom sub__post_axiom:
    forall l : Locker__locker.locker.
      forall a : int, b : int [((Calculator__sub.sub l) a) b].
        ((((((((Locker__locker___axiom.dynamic_invariant l) True) True) True)
              True) /\
             (((((Calculator__int32___axiom.dynamic_invariant a) True) True)
                 True)
                True)) /\
            (((((Calculator__int32___axiom.dynamic_invariant b) True) True)
                True)
               True)) ->
           (let result = ((Calculator__sub.sub l) a) b in
            if ((((Calculator__sub.sub__function_guard result) l) a) b) then
              ((true /\
                  (((((Calculator__result___axiom.dynamic_invariant result)
                        True)
                       False)
                      True)
                     True)) /\
                 true)
            else true))
end

module Calculator__mul
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Calculator__result as Calculator__result
  
  val function mul (l: Locker__locker.locker) (a: int) (b: int) : Calculator__result.result__
  
  val predicate mul__function_guard (temp___result_172: Calculator__result.result__) (l: 
    Locker__locker.locker) (a: int) (b: int)
end

module Calculator__mul___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Locker__locker___axiom as Locker__locker___axiom
  use Calculator__result as Calculator__result
  use Calculator__mul as Calculator__mul
  use Calculator__int32___axiom as Calculator__int32___axiom
  use Calculator__result___axiom as Calculator__result___axiom
  
  val mul (l: Locker__locker.locker) (a: int) (b: int) : Calculator__result.result__
    requires { true }
    ensures { (((result = (((Calculator__mul.mul l) a) b)) /\
                  ((((Calculator__mul.mul__function_guard result) l) a) b)) /\
                 (((((Calculator__result___axiom.dynamic_invariant result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom mul__post_axiom:
    forall l : Locker__locker.locker.
      forall a : int, b : int [((Calculator__mul.mul l) a) b].
        ((((((((Locker__locker___axiom.dynamic_invariant l) True) True) True)
              True) /\
             (((((Calculator__int32___axiom.dynamic_invariant a) True) True)
                 True)
                True)) /\
            (((((Calculator__int32___axiom.dynamic_invariant b) True) True)
                True)
               True)) ->
           (let result = ((Calculator__mul.mul l) a) b in
            if ((((Calculator__mul.mul__function_guard result) l) a) b) then
              ((true /\
                  (((((Calculator__result___axiom.dynamic_invariant result)
                        True)
                       False)
                      True)
                     True)) /\
                 true)
            else true))
end

module Calculator__div
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Calculator__result as Calculator__result
  
  val function div (l: Locker__locker.locker) (a: int) (b: int) : Calculator__result.result__
  
  val predicate div__function_guard (temp___result_173: Calculator__result.result__) (l: 
    Locker__locker.locker) (a: int) (b: int)
end

module Calculator__div___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Locker__locker___axiom as Locker__locker___axiom
  use Calculator__result as Calculator__result
  use Calculator__div as Calculator__div
  use Calculator__int32___axiom as Calculator__int32___axiom
  use Calculator__result___axiom as Calculator__result___axiom
  
  val div (l: Locker__locker.locker) (a: int) (b: int) : Calculator__result.result__
    requires { true }
    ensures { (((result = (((Calculator__div.div l) a) b)) /\
                  ((((Calculator__div.div__function_guard result) l) a) b)) /\
                 (((((Calculator__result___axiom.dynamic_invariant result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom div__post_axiom:
    forall l : Locker__locker.locker.
      forall a : int, b : int [((Calculator__div.div l) a) b].
        ((((((((Locker__locker___axiom.dynamic_invariant l) True) True) True)
              True) /\
             (((((Calculator__int32___axiom.dynamic_invariant a) True) True)
                 True)
                True)) /\
            (((((Calculator__int32___axiom.dynamic_invariant b) True) True)
                True)
               True)) ->
           (let result = ((Calculator__div.div l) a) b in
            if ((((Calculator__div.div__function_guard result) l) a) b) then
              ((true /\
                  (((((Calculator__result___axiom.dynamic_invariant result)
                        True)
                       False)
                      True)
                     True)) /\
                 true)
            else true))
end

module Stack__push___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Stack__stack_instance as Stack__stack_instance
  use Stack__stack_instance___axiom as Stack__stack_instance___axiom
  
  val push (l: Locker__locker.locker) (s__split_fields: Stack__stack_instance.__split_fields__ref) (a: int) (success: bool__ref) : 
    unit
    requires { true }
    writes { s__split_fields, success }
    ensures { ((((Stack__stack_instance___axiom.dynamic_invariant
                    { Stack__stack_instance.__split_fields =
                        (Stack__stack_instance.__split_fields__content
                            s__split_fields) })
                   True)
                  True)
                 True)
                True }
end

module Stack__push2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Stack__stack_instance as Stack__stack_instance
  use Stack__stack_instance___axiom as Stack__stack_instance___axiom
  
  val push2 (l: Locker__locker.locker) (s__split_fields: Stack__stack_instance.__split_fields__ref) (a: int) (b: int) (success: bool__ref) : 
    unit
    requires { true }
    writes { s__split_fields, success }
    ensures { ((((Stack__stack_instance___axiom.dynamic_invariant
                    { Stack__stack_instance.__split_fields =
                        (Stack__stack_instance.__split_fields__content
                            s__split_fields) })
                   True)
                  True)
                 True)
                True }
end

module Stringtointeger__from_string
  use _gnatprove_standard.Main
  use int.Int
  use Standard__string as Standard__string
  
  val function from_string (s: Standard__string.string__) : int
  
  val predicate from_string__function_guard (temp___result_174: int) (s: 
    Standard__string.string__)
end

module Stringtointeger__from_string___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__string as Standard__string
  use Stringtointeger__from_string as Stringtointeger__from_string
  
  val from_string (s: Standard__string.string__) : int
    requires { true }
    ensures { (((result = (Stringtointeger__from_string.from_string s)) /\
                  ((Stringtointeger__from_string.from_string__function_guard
                      result)
                     s)) /\
                 (((((Standard__integer___axiom.dynamic_invariant result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom from_string__post_axiom:
    forall s : Standard__string.string__
          [Stringtointeger__from_string.from_string s].
      let result = Stringtointeger__from_string.from_string s in
      ((Standard__integer.dynamic_property Standard__integer.first)
         Standard__integer.last)
        result
end

module Commandhandler__execute__B_1__B_3__token2
  use _gnatprove_standard.Main
  use int.Int
  
  val token2 : int__ref
end

module Commandhandler__execute__B_1__B_3__success
  use _gnatprove_standard.Main
  use int.Int
  
  val success : bool__ref
end

module Commandhandler__execute__B_1__B_4__token2
  use _gnatprove_standard.Main
  use int.Int
  
  val token2 : int__ref
end

module Commandhandler__execute__B_1__B_4__token3
  use _gnatprove_standard.Main
  use int.Int
  
  val token3 : int__ref
end

module Commandhandler__execute__B_1__B_4__success
  use _gnatprove_standard.Main
  use int.Int
  
  val success : bool__ref
end

module Commandhandler__execute__B_1__B_5__a
  use _gnatprove_standard.Main
  use int.Int
  
  val a : int__ref
end

module Commandhandler__execute__B_1__B_5__success
  use _gnatprove_standard.Main
  use int.Int
  
  val success : bool__ref
end

module Stack__pop___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Stack__stack_instance as Stack__stack_instance
  use Stack__stack_instance___axiom as Stack__stack_instance___axiom
  use Stack__int32___axiom as Stack__int32___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val pop (l: Locker__locker.locker) (s__split_fields: Stack__stack_instance.__split_fields__ref) (a: int__ref) (success: bool__ref) : 
    unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err, s__split_fields, a, success }
    ensures { ((((((Stack__stack_instance___axiom.dynamic_invariant
                      { Stack__stack_instance.__split_fields =
                          (Stack__stack_instance.__split_fields__content
                              s__split_fields) })
                     True)
                    True)
                   True)
                  True) /\
                 (((((Stack__int32___axiom.dynamic_invariant (a.int__content))
                       True)
                      True)
                     True)
                    True)) }
end

module Commandhandler__execute__B_1__B_6__token2
  use _gnatprove_standard.Main
  use int.Int
  
  val token2 : int__ref
end

module Commandhandler__execute__B_1__B_6__a
  use _gnatprove_standard.Main
  use int.Int
  
  val a : int__ref
end

module Commandhandler__execute__B_1__B_6__success
  use _gnatprove_standard.Main
  use int.Int
  
  val success : bool__ref
end

module Lockmemory__put___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Memorystore__database as Memorystore__database
  use Memorystore__database___axiom as Memorystore__database___axiom
  
  val put (l: Locker__locker.locker) (d__split_fields: Memorystore__database.__split_fields__ref) (loc: int) (val__: int) : 
    unit
    requires { true }
    writes { d__split_fields }
    ensures { ((((Memorystore__database___axiom.dynamic_invariant
                    { Memorystore__database.__split_fields =
                        (Memorystore__database.__split_fields__content
                            d__split_fields) })
                   True)
                  True)
                 True)
                True }
end

module Commandhandler__execute__B_1__B_7__token2
  use _gnatprove_standard.Main
  use int.Int
  
  val token2 : int__ref
end

module Commandhandler__execute__B_1__B_7__a
  use _gnatprove_standard.Main
  use int.Int
  
  val a : int__ref
end

module Commandhandler__execute__B_1__B_7__success
  use _gnatprove_standard.Main
  use int.Int
  
  val success : bool__ref
end

module Lockmemory__get
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Memorystore__database as Memorystore__database
  
  val function get (l: Locker__locker.locker) (d: Memorystore__database.database) (loc: int) : 
    int
  
  val predicate get__function_guard (temp___result_175: int) (l: Locker__locker.locker) (d: 
    Memorystore__database.database) (loc: int)
end

module Memorystore__int32___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Memorystore__int32 as Memorystore__int32
  
  predicate dynamic_invariant (temp___expr_246: int) (temp___is_init_242: bool) (temp___skip_constant_243: bool) (temp___do_toplevel_244: bool) (temp___do_typ_inv_245: bool) =
    if ((temp___is_init_242 = True) \/
          (Memorystore__int32.first <= Memorystore__int32.last)) then
      (((Memorystore__int32.dynamic_property Memorystore__int32.first)
          Memorystore__int32.last)
         temp___expr_246)
    else true
  
  val dynamic_invariant (temp___expr_246: int) (temp___is_init_242: bool) (temp___skip_constant_243: bool) (temp___do_toplevel_244: bool) (temp___do_typ_inv_245: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_246 : int))
                      (temp___is_init_242 : bool))
                     (temp___skip_constant_243 : bool))
                    (temp___do_toplevel_244 : bool))
                   (temp___do_typ_inv_245 : bool)) }
  
  predicate default_initial_assumption (temp___expr_247: int) (temp___skip_top_level_248: bool) =
    true
  
  val default_initial_assumption (temp___expr_247: int) (temp___skip_top_level_248: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_247 : int))
                   (temp___skip_top_level_248 : bool)) }
end

module Lockmemory__get___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Memorystore__database as Memorystore__database
  use Lockmemory__get as Lockmemory__get
  use Memorystore__int32 as Memorystore__int32
  use Memorystore__int32___axiom as Memorystore__int32___axiom
  
  val get (l: Locker__locker.locker) (d: Memorystore__database.database) (loc: int) : 
    int
    requires { true }
    ensures { (((result = (((Lockmemory__get.get l) d) loc)) /\
                  ((((Lockmemory__get.get__function_guard result) l) d) loc)) /\
                 (((((Memorystore__int32___axiom.dynamic_invariant result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom get__post_axiom:
    forall l : Locker__locker.locker.
      forall d : Memorystore__database.database.
        forall loc : int [((Lockmemory__get.get l) d) loc].
          let result = ((Lockmemory__get.get l) d) loc in
          ((Memorystore__int32.dynamic_property Memorystore__int32.first)
             Memorystore__int32.last)
            result
end

module Commandhandler__execute__B_1__B_8__token2
  use _gnatprove_standard.Main
  use int.Int
  
  val token2 : int__ref
end

module Lockmemory__remove___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Memorystore__database as Memorystore__database
  use Memorystore__database___axiom as Memorystore__database___axiom
  
  val remove (l: Locker__locker.locker) (d__split_fields: Memorystore__database.__split_fields__ref) (loc: int) : 
    unit
    requires { true }
    writes { d__split_fields }
    ensures { ((((Memorystore__database___axiom.dynamic_invariant
                    { Memorystore__database.__split_fields =
                        (Memorystore__database.__split_fields__content
                            d__split_fields) })
                   True)
                  True)
                 True)
                True }
end

module Lockmemory__print___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Memorystore__database as Memorystore__database
  
  val print (l: Locker__locker.locker) (d: Memorystore__database.database) : 
    unit
    requires { true }
    ensures { true }
end

module Commandhandler__execute__B_1__B_9__token2
  use _gnatprove_standard.Main
  use int.Int
  use Standard__integer as Standard__integer
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val token2 : Array__Int__Standard__character.map__ref
  
  val function token2__first : Standard__integer.integer
  
  val function token2__last : Standard__integer.integer
end

module Pin__from_string
  use _gnatprove_standard.Main
  use int.Int
  use Standard__string as Standard__string
  
  val function from_string (s: Standard__string.string__) : int
  
  val predicate from_string__function_guard (temp___result_176: int) (s: 
    Standard__string.string__)
end

module Pin__pin___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Pin__pin as Pin__pin
  
  predicate dynamic_invariant (temp___expr_181: int) (temp___is_init_177: bool) (temp___skip_constant_178: bool) (temp___do_toplevel_179: bool) (temp___do_typ_inv_180: bool) =
    if ((temp___is_init_177 = True) \/ (Pin__pin.first <= Pin__pin.last)) then
      (((Pin__pin.dynamic_property Pin__pin.first) Pin__pin.last)
         temp___expr_181)
    else true
  
  val dynamic_invariant (temp___expr_181: int) (temp___is_init_177: bool) (temp___skip_constant_178: bool) (temp___do_toplevel_179: bool) (temp___do_typ_inv_180: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_181 : int))
                      (temp___is_init_177 : bool))
                     (temp___skip_constant_178 : bool))
                    (temp___do_toplevel_179 : bool))
                   (temp___do_typ_inv_180 : bool)) }
  
  predicate default_initial_assumption (temp___expr_182: int) (temp___skip_top_level_183: bool) =
    true
  
  val default_initial_assumption (temp___expr_182: int) (temp___skip_top_level_183: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_182 : int))
                   (temp___skip_top_level_183 : bool)) }
end

module Pin__from_string___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Standard__string as Standard__string
  use Standard__string___axiom as Standard__string___axiom
  use Pin__from_string as Pin__from_string
  use Pin__pin___axiom as Pin__pin___axiom
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val from_string (s: Standard__string.string__) : int
    requires { (([@GP_Pretty_Ada:2180]
                 ((Standard__string.length s) = (4 : int))) /\
                  (forall i : int.
                     ((((Standard__string.first s) <= i) /\
                         (i <= (Standard__string.last s))) ->
                        (([@GP_Pretty_Ada:2191]
                          ((Standard__character__rep.to_rep
                              ((Array__Int__Standard__character.get
                                  (Standard__string.to_array s))
                                 i))
                             >= (48 : int))) /\
                           ([@GP_Pretty_Ada:2197]
                            ((Standard__character__rep.to_rep
                                ((Array__Int__Standard__character.get
                                    (Standard__string.to_array s))
                                   i))
                               <= (57 : int)))))))
    }
    ensures { (((result = (Pin__from_string.from_string s)) /\
                  ((Pin__from_string.from_string__function_guard result) s)) /\
                 (((((Pin__pin___axiom.dynamic_invariant result) True) False)
                     True)
                    True)) }
  
  axiom from_string__post_axiom:
    forall s : Standard__string.string__ [Pin__from_string.from_string s].
      (((((((Standard__string___axiom.dynamic_invariant s) True) True) True)
           True) /\
          (([@GP_Pretty_Ada:2180] ((Standard__string.length s) = (4 : int))) /\
             (forall i : int.
                ((((Standard__string.first s) <= i) /\
                    (i <= (Standard__string.last s))) ->
                   (([@GP_Pretty_Ada:2191]
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (Standard__string.to_array s))
                            i))
                        >= (48 : int))) /\
                      ([@GP_Pretty_Ada:2197]
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (Standard__string.to_array s))
                              i))
                          <= (57 : int)))))))) ->
         (let result = Pin__from_string.from_string s in
          if ((Pin__from_string.from_string__function_guard result) s) then
            ((true /\
                (((((Pin__pin___axiom.dynamic_invariant result) True) False)
                    True)
                   True)) /\
               true)
          else true))
end

module Locker__reset_pwd___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Locker__locker___axiom as Locker__locker___axiom
  
  val reset_pwd (l__split_fields: Locker__locker.__split_fields__ref) (n: int) : 
    unit
    requires { true }
    writes { l__split_fields }
    ensures { ((((Locker__locker___axiom.dynamic_invariant
                    { Locker__locker.__split_fields =
                        (Locker__locker.__split_fields__content
                            l__split_fields) })
                   True)
                  True)
                 True)
                True }
end

module Commandhandler__execute__B_1__B_10__token2
  use _gnatprove_standard.Main
  use int.Int
  use Standard__integer as Standard__integer
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val token2 : Array__Int__Standard__character.map__ref
  
  val function token2__first : Standard__integer.integer
  
  val function token2__last : Standard__integer.integer
end

module Locker__try_unlock___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Locker__locker as Locker__locker
  use Locker__locker___axiom as Locker__locker___axiom
  
  val try_unlock (l__split_fields: Locker__locker.__split_fields__ref) (n: int) : 
    unit
    requires { true }
    writes { l__split_fields }
    ensures { ((((Locker__locker___axiom.dynamic_invariant
                    { Locker__locker.__split_fields =
                        (Locker__locker.__split_fields__content
                            l__split_fields) })
                   True)
                  True)
                 True)
                True }
end

module Commandhandler__execute__TTtSP1
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type tTtSP1 = <range 1 5>
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (5 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = tTtSP1,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type tTtSP1__ref = { mutable tTtSP1__content : tTtSP1 }
  
  function tTtSP1__ref_tTtSP1__content__projection (a: tTtSP1__ref) : tTtSP1 =
    a.tTtSP1__content
  
  meta "model_projection" function tTtSP1__ref_tTtSP1__content__projection
  
  meta "inline:no" function tTtSP1__ref_tTtSP1__content__projection
  
  val tTtSP1__havoc (x: tTtSP1__ref) : unit
    writes { x }
end

module Commandhandler__execute__TtS___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  
  predicate dynamic_invariant (temp___expr_330: Array__Int__Mystringtokeniser__tokenextent.map) (temp___is_init_326: bool) (temp___skip_constant_327: bool) (temp___do_toplevel_328: bool) (temp___do_typ_inv_329: bool) =
    true
  
  val dynamic_invariant (temp___expr_330: Array__Int__Mystringtokeniser__tokenextent.map) (temp___is_init_326: bool) (temp___skip_constant_327: bool) (temp___do_toplevel_328: bool) (temp___do_typ_inv_329: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_330 :
                          Array__Int__Mystringtokeniser__tokenextent.map))
                      (temp___is_init_326 : bool))
                     (temp___skip_constant_327 : bool))
                    (temp___do_toplevel_328 : bool))
                   (temp___do_typ_inv_329 : bool)) }
  
  predicate default_initial_assumption (temp___expr_332: Array__Int__Mystringtokeniser__tokenextent.map) (temp___skip_top_level_333: bool) =
    true
  
  val default_initial_assumption (temp___expr_332: Array__Int__Mystringtokeniser__tokenextent.map) (temp___skip_top_level_333: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_332 :
                       Array__Int__Mystringtokeniser__tokenextent.map))
                   (temp___skip_top_level_333 : bool)) }
end

module Commandhandler__execute__int32
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type int32 = <range -2147483648 2147483647>
  
  val function first : int
    ensures { result = ((- 2147483648) : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = int32,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type int32__ref = { mutable int32__content : int32 }
  
  function int32__ref_int32__content__4__projection (a: int32__ref) : int32 =
    a.int32__content
  
  meta "model_projection" function int32__ref_int32__content__4__projection
  
  meta "inline:no" function int32__ref_int32__content__4__projection
  
  val int32__havoc (x: int32__ref) : unit
    writes { x }
end

module Commandhandler__execute__int32___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Commandhandler__execute__int32 as Commandhandler__execute__int32
  
  predicate dynamic_invariant (temp___expr_349: int) (temp___is_init_345: bool) (temp___skip_constant_346: bool) (temp___do_toplevel_347: bool) (temp___do_typ_inv_348: bool) =
    if ((temp___is_init_345 = True) \/
          (Commandhandler__execute__int32.first
             <= Commandhandler__execute__int32.last)) then
      (((Commandhandler__execute__int32.dynamic_property
           Commandhandler__execute__int32.first)
          Commandhandler__execute__int32.last)
         temp___expr_349)
    else true
  
  val dynamic_invariant (temp___expr_349: int) (temp___is_init_345: bool) (temp___skip_constant_346: bool) (temp___do_toplevel_347: bool) (temp___do_typ_inv_348: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_349 : int))
                      (temp___is_init_345 : bool))
                     (temp___skip_constant_346 : bool))
                    (temp___do_toplevel_347 : bool))
                   (temp___do_typ_inv_348 : bool)) }
  
  predicate default_initial_assumption (temp___expr_350: int) (temp___skip_top_level_351: bool) =
    true
  
  val default_initial_assumption (temp___expr_350: int) (temp___skip_top_level_351: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_350 : int))
                   (temp___skip_top_level_351 : bool)) }
end

module Commandhandler__execute__t__aggregate_def
  use _gnatprove_standard.Main
  use int.Int
  use Mystringtokeniser__tokenextent as Mystringtokeniser__tokenextent
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  
  val function commandhandler__execute__t__aggregate_def (temp___406: 
    Mystringtokeniser__tokenextent.tokenextent) : Array__Int__Mystringtokeniser__tokenextent.map
end

module Temp___String_Literal_414
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_414 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_414__def_axiom:
    forall __void_param : unit [temp___String_Literal_414 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_414 __void_param))
               (1 : int)))
           = (89 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_414 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_414 __void_param))
                     (3 : int)))
                 = (117 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_414 __void_param))
                       (4 : int)))
                   = (32 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_414 __void_param))
                       (5 : int)))
                   = (115 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_414 __void_param))
                         (6 : int)))
                     = (104 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_414 __void_param))
                       (7 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_414 __void_param))
                         (8 : int)))
                     = (117 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_414 __void_param))
                        (9 : int)))
                    = (108 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_414 __void_param))
                       (10 : int)))
                   = (100 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_414 __void_param))
                         (11 : int)))
                     = (32 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_414 __void_param))
                        (12 : int)))
                    = (101 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_414 __void_param))
                         (13 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_414 __void_param))
                           (14 : int)))
                       = (116 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_414 __void_param))
                          (15 : int)))
                      = (101 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_414 __void_param))
                       (16 : int)))
                   = (114 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_414 __void_param))
                         (17 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_414 __void_param))
                         (18 : int)))
                     = (49 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_414 __void_param))
                           (19 : int)))
                       = (45 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_414 __void_param))
                         (20 : int)))
                     = (51 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_414 __void_param))
                           (21 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_414 __void_param))
                          (22 : int)))
                      = (116 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_414 __void_param))
                         (23 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_414 __void_param))
                           (24 : int)))
                       = (107 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_414 __void_param))
                          (25 : int)))
                      = (101 : int))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_414 __void_param))
                           (26 : int)))
                       = (110 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_414 __void_param))
                             (27 : int)))
                         = (115 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_414 __void_param))
                            (28 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_416
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_416 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_416__def_axiom:
    forall __void_param : unit [temp___String_Literal_416 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_416 __void_param))
               (1 : int)))
           = (76 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_416 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_416 __void_param))
                   (3 : int)))
               = (99 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_416 __void_param))
                     (4 : int)))
                 = (107 : int))) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_416 __void_param))
                    (5 : int)))
                = (101 : int))) /\
            (((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_416 __void_param))
                    (6 : int)))
                = (100 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_416 __void_param))
                      (7 : int)))
                  = (33 : int)))))
end

module Temp___String_Literal_418
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_418 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_418__def_axiom:
    forall __void_param : unit [temp___String_Literal_418 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_418 __void_param))
               (1 : int)))
           = (67 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_418 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_418 __void_param))
                     (3 : int)))
                 = (117 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_418 __void_param))
                       (4 : int)))
                   = (110 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_418 __void_param))
                       (5 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_418 __void_param))
                         (6 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_418 __void_param))
                       (7 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_418 __void_param))
                         (8 : int)))
                     = (102 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_418 __void_param))
                         (9 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_418 __void_param))
                           (10 : int)))
                       = (116 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_418 __void_param))
                       (11 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_418 __void_param))
                         (12 : int)))
                     = (107 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_418 __void_param))
                         (13 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_418 __void_param))
                           (14 : int)))
                       = (110 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_418 __void_param))
                         (15 : int)))
                     = (115 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_418 __void_param))
                           (16 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_418 __void_param))
                          (17 : int)))
                      = (105 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_418 __void_param))
                       (18 : int)))
                   = (115 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_418 __void_param))
                         (19 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_418 __void_param))
                         (20 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_418 __void_param))
                           (21 : int)))
                       = (111 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_418 __void_param))
                         (22 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_418 __void_param))
                           (23 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_418 __void_param))
                          (24 : int)))
                      = (99 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_418 __void_param))
                         (25 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_418 __void_param))
                           (26 : int)))
                       = (114 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_418 __void_param))
                           (27 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_418 __void_param))
                             (28 : int)))
                         = (101 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_418 __void_param))
                           (29 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_418 __void_param))
                             (30 : int)))
                         = (116 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_418 __void_param))
                            (31 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_424
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_424 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_424__def_axiom:
    forall __void_param : unit [temp___String_Literal_424 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_424 __void_param))
               (1 : int)))
           = (78 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_424 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_424 __void_param))
                     (3 : int)))
                 = (116 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_424 __void_param))
                       (4 : int)))
                   = (32 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_424 __void_param))
                      (5 : int)))
                  = (101 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_424 __void_param))
                       (6 : int)))
                   = (110 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_424 __void_param))
                         (7 : int)))
                     = (111 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_424 __void_param))
                        (8 : int)))
                    = (117 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_424 __void_param))
                       (9 : int)))
                   = (103 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_424 __void_param))
                         (10 : int)))
                     = (104 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_424 __void_param))
                        (11 : int)))
                    = (32 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_424 __void_param))
                        (12 : int)))
                    = (110 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_424 __void_param))
                          (13 : int)))
                      = (117 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_424 __void_param))
                       (14 : int)))
                   = (109 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_424 __void_param))
                         (15 : int)))
                     = (98 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_424 __void_param))
                        (16 : int)))
                    = (101 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_424 __void_param))
                         (17 : int)))
                     = (114 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_424 __void_param))
                           (18 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_424 __void_param))
                          (19 : int)))
                      = (116 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_424 __void_param))
                         (20 : int)))
                     = (104 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_424 __void_param))
                           (21 : int)))
                       = (101 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_424 __void_param))
                          (22 : int)))
                      = (114 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_424 __void_param))
                          (23 : int)))
                      = (101 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_424 __void_param))
                            (24 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_428
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_428 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_428__def_axiom:
    forall __void_param : unit [temp___String_Literal_428 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_428 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_428 __void_param))
                 (2 : int)))
             = (61 : int))) /\
         ((Standard__character__rep.to_rep
             ((Array__Int__Standard__character.get
                 (temp___String_Literal_428 __void_param))
                (3 : int)))
            = (32 : int)))
end

module Temp___String_Literal_429
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_429 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_429__def_axiom:
    forall __void_param : unit [temp___String_Literal_429 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_429 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_429 __void_param))
                 (2 : int)))
             = (43 : int))) /\
         ((Standard__character__rep.to_rep
             ((Array__Int__Standard__character.get
                 (temp___String_Literal_429 __void_param))
                (3 : int)))
            = (32 : int)))
end

module Temp___String_Literal_440
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_440 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_440__def_axiom:
    forall __void_param : unit [temp___String_Literal_440 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_440 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_440 __void_param))
                 (2 : int)))
             = (61 : int))) /\
         ((Standard__character__rep.to_rep
             ((Array__Int__Standard__character.get
                 (temp___String_Literal_440 __void_param))
                (3 : int)))
            = (32 : int)))
end

module Temp___String_Literal_441
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_441 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_441__def_axiom:
    forall __void_param : unit [temp___String_Literal_441 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_441 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_441 __void_param))
                 (2 : int)))
             = (47 : int))) /\
         ((Standard__character__rep.to_rep
             ((Array__Int__Standard__character.get
                 (temp___String_Literal_441 __void_param))
                (3 : int)))
            = (32 : int)))
end

module Temp___String_Literal_452
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_452 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_452__def_axiom:
    forall __void_param : unit [temp___String_Literal_452 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_452 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_452 __void_param))
                 (2 : int)))
             = (61 : int))) /\
         ((Standard__character__rep.to_rep
             ((Array__Int__Standard__character.get
                 (temp___String_Literal_452 __void_param))
                (3 : int)))
            = (32 : int)))
end

module Temp___String_Literal_453
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_453 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_453__def_axiom:
    forall __void_param : unit [temp___String_Literal_453 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_453 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_453 __void_param))
                 (2 : int)))
             = (42 : int))) /\
         ((Standard__character__rep.to_rep
             ((Array__Int__Standard__character.get
                 (temp___String_Literal_453 __void_param))
                (3 : int)))
            = (32 : int)))
end

module Temp___String_Literal_462
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_462 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_462__def_axiom:
    forall __void_param : unit [temp___String_Literal_462 __void_param].
      ((Standard__character__rep.to_rep
          ((Array__Int__Standard__character.get
              (temp___String_Literal_462 __void_param))
             (1 : int)))
         = (42 : int))
end

module Temp___String_Literal_469
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_469 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_469__def_axiom:
    forall __void_param : unit [temp___String_Literal_469 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_469 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_469 __void_param))
                 (2 : int)))
             = (61 : int))) /\
         ((Standard__character__rep.to_rep
             ((Array__Int__Standard__character.get
                 (temp___String_Literal_469 __void_param))
                (3 : int)))
            = (32 : int)))
end

module Temp___String_Literal_470
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_470 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_470__def_axiom:
    forall __void_param : unit [temp___String_Literal_470 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_470 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_470 __void_param))
                 (2 : int)))
             = (45 : int))) /\
         ((Standard__character__rep.to_rep
             ((Array__Int__Standard__character.get
                 (temp___String_Literal_470 __void_param))
                (3 : int)))
            = (32 : int)))
end

module Temp___String_Literal_479
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_479 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_479__def_axiom:
    forall __void_param : unit [temp___String_Literal_479 __void_param].
      ((Standard__character__rep.to_rep
          ((Array__Int__Standard__character.get
              (temp___String_Literal_479 __void_param))
             (1 : int)))
         = (45 : int))
end

module Temp___String_Literal_484
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_484 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_484__def_axiom:
    forall __void_param : unit [temp___String_Literal_484 __void_param].
      ((Standard__character__rep.to_rep
          ((Array__Int__Standard__character.get
              (temp___String_Literal_484 __void_param))
             (1 : int)))
         = (43 : int))
end

module Temp___String_Literal_491
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_491 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_491__def_axiom:
    forall __void_param : unit [temp___String_Literal_491 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_491 __void_param))
               (1 : int)))
           = (79 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_491 __void_param))
                 (2 : int)))
             = (112 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_491 __void_param))
                      (3 : int)))
                  = (101 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_491 __void_param))
                        (4 : int)))
                    = (114 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_491 __void_param))
                       (5 : int)))
                   = (97 : int))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_491 __void_param))
                        (6 : int)))
                    = (116 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_491 __void_param))
                          (7 : int)))
                      = (105 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_491 __void_param))
                         (8 : int)))
                     = (111 : int)))) /\
              (((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_491 __void_param))
                        (9 : int)))
                    = (110 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_491 __void_param))
                          (10 : int)))
                      = (32 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_491 __void_param))
                         (11 : int)))
                     = (102 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_491 __void_param))
                         (12 : int)))
                     = (97 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_491 __void_param))
                           (13 : int)))
                       = (105 : int))))) /\
             ((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_491 __void_param))
                        (14 : int)))
                    = (108 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_491 __void_param))
                          (15 : int)))
                      = (101 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_491 __void_param))
                         (16 : int)))
                     = (100 : int))) /\
                 ((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_491 __void_param))
                          (17 : int)))
                      = (33 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_491 __void_param))
                            (18 : int)))
                        = (32 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_491 __void_param))
                           (19 : int)))
                       = (79 : int)))) /\
                (((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_491 __void_param))
                          (20 : int)))
                      = (118 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_491 __void_param))
                            (21 : int)))
                        = (101 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_491 __void_param))
                           (22 : int)))
                       = (114 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_491 __void_param))
                           (23 : int)))
                       = (102 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_491 __void_param))
                             (24 : int)))
                         = (108 : int)))))) /\
            (((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_491 __void_param))
                        (25 : int)))
                    = (111 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_491 __void_param))
                          (26 : int)))
                      = (119 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_491 __void_param))
                         (27 : int)))
                     = (32 : int))) /\
                 ((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_491 __void_param))
                          (28 : int)))
                      = (111 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_491 __void_param))
                            (29 : int)))
                        = (114 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_491 __void_param))
                           (30 : int)))
                       = (32 : int)))) /\
                (((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_491 __void_param))
                          (31 : int)))
                      = (100 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_491 __void_param))
                            (32 : int)))
                        = (105 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_491 __void_param))
                           (33 : int)))
                       = (118 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_491 __void_param))
                           (34 : int)))
                       = (105 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_491 __void_param))
                             (35 : int)))
                         = (100 : int))))) /\
               ((((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_491 __void_param))
                          (36 : int)))
                      = (101 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_491 __void_param))
                            (37 : int)))
                        = (32 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_491 __void_param))
                           (38 : int)))
                       = (98 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_491 __void_param))
                           (39 : int)))
                       = (121 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_491 __void_param))
                             (40 : int)))
                         = (32 : int)))) /\
                  (((((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_491 __void_param))
                            (41 : int)))
                        = (122 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_491 __void_param))
                              (42 : int)))
                          = (101 : int))) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_491 __void_param))
                             (43 : int)))
                         = (114 : int))) /\
                     (((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_491 __void_param))
                             (44 : int)))
                         = (111 : int)) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_491 __void_param))
                               (45 : int)))
                           = (46 : int))))))))
end

module Temp___String_Literal_497
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_497 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_497__def_axiom:
    forall __void_param : unit [temp___String_Literal_497 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_497 __void_param))
               (1 : int)))
           = (85 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_497 __void_param))
                 (2 : int)))
             = (110 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_497 __void_param))
                    (3 : int)))
                = (107 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_497 __void_param))
                      (4 : int)))
                  = (110 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_497 __void_param))
                      (5 : int)))
                  = (111 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_497 __void_param))
                        (6 : int)))
                    = (119 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_497 __void_param))
                      (7 : int)))
                  = (110 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_497 __void_param))
                        (8 : int)))
                    = (32 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_497 __void_param))
                        (9 : int)))
                    = (99 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_497 __void_param))
                          (10 : int)))
                      = (111 : int))))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_497 __void_param))
                      (11 : int)))
                  = (109 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_497 __void_param))
                        (12 : int)))
                    = (109 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_497 __void_param))
                        (13 : int)))
                    = (97 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_497 __void_param))
                          (14 : int)))
                      = (110 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_497 __void_param))
                        (15 : int)))
                    = (100 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_497 __void_param))
                          (16 : int)))
                      = (58 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_497 __void_param))
                         (17 : int)))
                     = (32 : int))))))
end

module Temp___String_Literal_500
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_500 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_500__def_axiom:
    forall __void_param : unit [temp___String_Literal_500 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_500 __void_param))
               (1 : int)))
           = (69 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_500 __void_param))
                 (2 : int)))
             = (120 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_500 __void_param))
                   (3 : int)))
               = (105 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_500 __void_param))
                     (4 : int)))
                 = (116 : int))) /\
             (((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_500 __void_param))
                     (5 : int)))
                 = (105 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_500 __void_param))
                       (6 : int)))
                   = (110 : int)))) /\
            ((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_500 __void_param))
                     (7 : int)))
                 = (103 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_500 __void_param))
                       (8 : int)))
                   = (46 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_500 __void_param))
                       (9 : int)))
                   = (46 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_500 __void_param))
                         (10 : int)))
                     = (46 : int))))))
end

module Temp___String_Literal_502
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_502 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_502__def_axiom:
    forall __void_param : unit [temp___String_Literal_502 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_502 __void_param))
               (1 : int)))
           = (113 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_502 __void_param))
                 (2 : int)))
             = (117 : int))) /\
         (((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_502 __void_param))
                 (3 : int)))
             = (105 : int)) /\
            ((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_502 __void_param))
                   (4 : int)))
               = (116 : int))))
end

module Temp___String_Literal_507
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_507 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_507__def_axiom:
    forall __void_param : unit [temp___String_Literal_507 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_507 __void_param))
               (1 : int)))
           = (65 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_507 __void_param))
                 (2 : int)))
             = (108 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_507 __void_param))
                    (3 : int)))
                = (114 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_507 __void_param))
                      (4 : int)))
                  = (101 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_507 __void_param))
                      (5 : int)))
                  = (97 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_507 __void_param))
                        (6 : int)))
                    = (100 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_507 __void_param))
                      (7 : int)))
                  = (121 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_507 __void_param))
                        (8 : int)))
                    = (32 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_507 __void_param))
                        (9 : int)))
                    = (117 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_507 __void_param))
                          (10 : int)))
                      = (110 : int))))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_507 __void_param))
                      (11 : int)))
                  = (108 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_507 __void_param))
                        (12 : int)))
                    = (111 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_507 __void_param))
                        (13 : int)))
                    = (99 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_507 __void_param))
                          (14 : int)))
                      = (107 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_507 __void_param))
                        (15 : int)))
                    = (101 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_507 __void_param))
                          (16 : int)))
                      = (100 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_507 __void_param))
                         (17 : int)))
                     = (33 : int))))))
end

module Temp___String_Literal_509
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_509 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_509__def_axiom:
    forall __void_param : unit [temp___String_Literal_509 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_509 __void_param))
               (1 : int)))
           = (67 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_509 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_509 __void_param))
                     (3 : int)))
                 = (117 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_509 __void_param))
                       (4 : int)))
                   = (110 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_509 __void_param))
                       (5 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_509 __void_param))
                         (6 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_509 __void_param))
                       (7 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_509 __void_param))
                         (8 : int)))
                     = (102 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_509 __void_param))
                         (9 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_509 __void_param))
                           (10 : int)))
                       = (116 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_509 __void_param))
                       (11 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_509 __void_param))
                         (12 : int)))
                     = (107 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_509 __void_param))
                         (13 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_509 __void_param))
                           (14 : int)))
                       = (110 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_509 __void_param))
                         (15 : int)))
                     = (115 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_509 __void_param))
                           (16 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_509 __void_param))
                          (17 : int)))
                      = (105 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_509 __void_param))
                       (18 : int)))
                   = (115 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_509 __void_param))
                         (19 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_509 __void_param))
                         (20 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_509 __void_param))
                           (21 : int)))
                       = (111 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_509 __void_param))
                         (22 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_509 __void_param))
                           (23 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_509 __void_param))
                          (24 : int)))
                      = (99 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_509 __void_param))
                         (25 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_509 __void_param))
                           (26 : int)))
                       = (114 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_509 __void_param))
                           (27 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_509 __void_param))
                             (28 : int)))
                         = (101 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_509 __void_param))
                           (29 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_509 __void_param))
                             (30 : int)))
                         = (116 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_509 __void_param))
                            (31 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_511
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_511 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_511__def_axiom:
    forall __void_param : unit [temp___String_Literal_511 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_511 __void_param))
               (1 : int)))
           = (73 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_511 __void_param))
                 (2 : int)))
             = (110 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_511 __void_param))
                    (3 : int)))
                = (118 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_511 __void_param))
                      (4 : int)))
                  = (97 : int))) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_511 __void_param))
                     (5 : int)))
                 = (108 : int))) /\
             (((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_511 __void_param))
                     (6 : int)))
                 = (105 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_511 __void_param))
                       (7 : int)))
                   = (100 : int)))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_511 __void_param))
                      (8 : int)))
                  = (32 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_511 __void_param))
                        (9 : int)))
                    = (80 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_511 __void_param))
                       (10 : int)))
                   = (73 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_511 __void_param))
                       (11 : int)))
                   = (78 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_511 __void_param))
                         (12 : int)))
                     = (46 : int))))))
end

module Temp___String_Literal_514
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_514 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_514__def_axiom:
    forall __void_param : unit [temp___String_Literal_514 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_514 __void_param))
               (1 : int)))
           = (85 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_514 __void_param))
                 (2 : int)))
             = (110 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_514 __void_param))
                     (3 : int)))
                 = (108 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_514 __void_param))
                       (4 : int)))
                   = (111 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_514 __void_param))
                      (5 : int)))
                  = (99 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_514 __void_param))
                      (6 : int)))
                  = (107 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_514 __void_param))
                        (7 : int)))
                    = (32 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_514 __void_param))
                      (8 : int)))
                  = (97 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_514 __void_param))
                        (9 : int)))
                    = (116 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_514 __void_param))
                        (10 : int)))
                    = (116 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_514 __void_param))
                          (11 : int)))
                      = (101 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_514 __void_param))
                       (12 : int)))
                   = (109 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_514 __void_param))
                         (13 : int)))
                     = (112 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_514 __void_param))
                        (14 : int)))
                    = (116 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_514 __void_param))
                        (15 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_514 __void_param))
                          (16 : int)))
                      = (109 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_514 __void_param))
                        (17 : int)))
                    = (97 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_514 __void_param))
                          (18 : int)))
                      = (100 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_514 __void_param))
                          (19 : int)))
                      = (101 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_514 __void_param))
                            (20 : int)))
                        = (46 : int)))))))
end

module Temp___String_Literal_520
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_520 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_520__def_axiom:
    forall __void_param : unit [temp___String_Literal_520 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_520 __void_param))
               (1 : int)))
           = (117 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_520 __void_param))
                 (2 : int)))
             = (110 : int))) /\
         ((((Standard__character__rep.to_rep
               ((Array__Int__Standard__character.get
                   (temp___String_Literal_520 __void_param))
                  (3 : int)))
              = (108 : int)) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_520 __void_param))
                    (4 : int)))
                = (111 : int))) /\
            (((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_520 __void_param))
                    (5 : int)))
                = (99 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_520 __void_param))
                      (6 : int)))
                  = (107 : int)))))
end

module Temp___String_Literal_525
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_525 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_525__def_axiom:
    forall __void_param : unit [temp___String_Literal_525 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_525 __void_param))
               (1 : int)))
           = (65 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_525 __void_param))
                 (2 : int)))
             = (108 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_525 __void_param))
                    (3 : int)))
                = (114 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_525 __void_param))
                      (4 : int)))
                  = (101 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_525 __void_param))
                      (5 : int)))
                  = (97 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_525 __void_param))
                        (6 : int)))
                    = (100 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_525 __void_param))
                      (7 : int)))
                  = (121 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_525 __void_param))
                        (8 : int)))
                    = (32 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_525 __void_param))
                       (9 : int)))
                   = (108 : int)))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_525 __void_param))
                      (10 : int)))
                  = (111 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_525 __void_param))
                        (11 : int)))
                    = (99 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_525 __void_param))
                       (12 : int)))
                   = (107 : int))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_525 __void_param))
                        (13 : int)))
                    = (101 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_525 __void_param))
                          (14 : int)))
                      = (100 : int))) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_525 __void_param))
                         (15 : int)))
                     = (33 : int))))))
end

module Temp___String_Literal_527
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_527 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_527__def_axiom:
    forall __void_param : unit [temp___String_Literal_527 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_527 __void_param))
               (1 : int)))
           = (67 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_527 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_527 __void_param))
                     (3 : int)))
                 = (117 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_527 __void_param))
                       (4 : int)))
                   = (110 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_527 __void_param))
                       (5 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_527 __void_param))
                         (6 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_527 __void_param))
                       (7 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_527 __void_param))
                         (8 : int)))
                     = (102 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_527 __void_param))
                         (9 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_527 __void_param))
                           (10 : int)))
                       = (116 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_527 __void_param))
                       (11 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_527 __void_param))
                         (12 : int)))
                     = (107 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_527 __void_param))
                         (13 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_527 __void_param))
                           (14 : int)))
                       = (110 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_527 __void_param))
                         (15 : int)))
                     = (115 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_527 __void_param))
                           (16 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_527 __void_param))
                          (17 : int)))
                      = (105 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_527 __void_param))
                       (18 : int)))
                   = (115 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_527 __void_param))
                         (19 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_527 __void_param))
                         (20 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_527 __void_param))
                           (21 : int)))
                       = (111 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_527 __void_param))
                         (22 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_527 __void_param))
                           (23 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_527 __void_param))
                          (24 : int)))
                      = (99 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_527 __void_param))
                         (25 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_527 __void_param))
                           (26 : int)))
                       = (114 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_527 __void_param))
                           (27 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_527 __void_param))
                             (28 : int)))
                         = (101 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_527 __void_param))
                           (29 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_527 __void_param))
                             (30 : int)))
                         = (116 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_527 __void_param))
                            (31 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_529
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_529 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_529__def_axiom:
    forall __void_param : unit [temp___String_Literal_529 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_529 __void_param))
               (1 : int)))
           = (73 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_529 __void_param))
                 (2 : int)))
             = (110 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_529 __void_param))
                    (3 : int)))
                = (118 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_529 __void_param))
                      (4 : int)))
                  = (97 : int))) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_529 __void_param))
                     (5 : int)))
                 = (108 : int))) /\
             (((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_529 __void_param))
                     (6 : int)))
                 = (105 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_529 __void_param))
                       (7 : int)))
                   = (100 : int)))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_529 __void_param))
                      (8 : int)))
                  = (32 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_529 __void_param))
                        (9 : int)))
                    = (80 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_529 __void_param))
                       (10 : int)))
                   = (73 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_529 __void_param))
                       (11 : int)))
                   = (78 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_529 __void_param))
                         (12 : int)))
                     = (46 : int))))))
end

module Temp___String_Literal_532
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_532 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_532__def_axiom:
    forall __void_param : unit [temp___String_Literal_532 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_532 __void_param))
               (1 : int)))
           = (76 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_532 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_532 __void_param))
                     (3 : int)))
                 = (99 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_532 __void_param))
                       (4 : int)))
                   = (107 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_532 __void_param))
                      (5 : int)))
                  = (101 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_532 __void_param))
                      (6 : int)))
                  = (100 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_532 __void_param))
                        (7 : int)))
                    = (32 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_532 __void_param))
                      (8 : int)))
                  = (119 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_532 __void_param))
                        (9 : int)))
                    = (105 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_532 __void_param))
                        (10 : int)))
                    = (116 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_532 __void_param))
                          (11 : int)))
                      = (104 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_532 __void_param))
                       (12 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_532 __void_param))
                         (13 : int)))
                     = (110 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_532 __void_param))
                        (14 : int)))
                    = (101 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_532 __void_param))
                        (15 : int)))
                    = (119 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_532 __void_param))
                          (16 : int)))
                      = (32 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_532 __void_param))
                        (17 : int)))
                    = (80 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_532 __void_param))
                          (18 : int)))
                      = (73 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_532 __void_param))
                          (19 : int)))
                      = (78 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_532 __void_param))
                            (20 : int)))
                        = (46 : int)))))))
end

module Temp___String_Literal_538
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_538 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_538__def_axiom:
    forall __void_param : unit [temp___String_Literal_538 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_538 __void_param))
               (1 : int)))
           = (108 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_538 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_538 __void_param))
                 (3 : int)))
             = (99 : int)) /\
            ((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_538 __void_param))
                   (4 : int)))
               = (107 : int))))
end

module Temp___String_Literal_543
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_543 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_543__def_axiom:
    forall __void_param : unit [temp___String_Literal_543 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_543 __void_param))
               (1 : int)))
           = (76 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_543 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_543 __void_param))
                   (3 : int)))
               = (99 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_543 __void_param))
                     (4 : int)))
                 = (107 : int))) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_543 __void_param))
                    (5 : int)))
                = (101 : int))) /\
            (((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_543 __void_param))
                    (6 : int)))
                = (100 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_543 __void_param))
                      (7 : int)))
                  = (33 : int)))))
end

module Temp___String_Literal_545
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_545 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_545__def_axiom:
    forall __void_param : unit [temp___String_Literal_545 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_545 __void_param))
               (1 : int)))
           = (108 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_545 __void_param))
                 (2 : int)))
             = (105 : int))) /\
         (((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_545 __void_param))
                 (3 : int)))
             = (115 : int)) /\
            ((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_545 __void_param))
                   (4 : int)))
               = (116 : int))))
end

module Temp___String_Literal_550
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_550 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_550__def_axiom:
    forall __void_param : unit [temp___String_Literal_550 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_550 __void_param))
               (1 : int)))
           = (76 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_550 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_550 __void_param))
                   (3 : int)))
               = (99 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_550 __void_param))
                     (4 : int)))
                 = (107 : int))) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_550 __void_param))
                    (5 : int)))
                = (101 : int))) /\
            (((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_550 __void_param))
                    (6 : int)))
                = (100 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_550 __void_param))
                      (7 : int)))
                  = (33 : int)))))
end

module Temp___String_Literal_552
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_552 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_552__def_axiom:
    forall __void_param : unit [temp___String_Literal_552 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_552 __void_param))
               (1 : int)))
           = (67 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_552 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_552 __void_param))
                     (3 : int)))
                 = (117 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_552 __void_param))
                       (4 : int)))
                   = (110 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_552 __void_param))
                       (5 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_552 __void_param))
                         (6 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_552 __void_param))
                       (7 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_552 __void_param))
                         (8 : int)))
                     = (102 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_552 __void_param))
                         (9 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_552 __void_param))
                           (10 : int)))
                       = (116 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_552 __void_param))
                       (11 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_552 __void_param))
                         (12 : int)))
                     = (107 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_552 __void_param))
                         (13 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_552 __void_param))
                           (14 : int)))
                       = (110 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_552 __void_param))
                         (15 : int)))
                     = (115 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_552 __void_param))
                           (16 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_552 __void_param))
                          (17 : int)))
                      = (105 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_552 __void_param))
                       (18 : int)))
                   = (115 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_552 __void_param))
                         (19 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_552 __void_param))
                         (20 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_552 __void_param))
                           (21 : int)))
                       = (111 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_552 __void_param))
                         (22 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_552 __void_param))
                           (23 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_552 __void_param))
                          (24 : int)))
                      = (99 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_552 __void_param))
                         (25 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_552 __void_param))
                           (26 : int)))
                       = (114 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_552 __void_param))
                           (27 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_552 __void_param))
                             (28 : int)))
                         = (101 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_552 __void_param))
                           (29 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_552 __void_param))
                             (30 : int)))
                         = (116 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_552 __void_param))
                            (31 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_554
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_554 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_554__def_axiom:
    forall __void_param : unit [temp___String_Literal_554 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_554 __void_param))
               (1 : int)))
           = (73 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_554 __void_param))
                 (2 : int)))
             = (110 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_554 __void_param))
                     (3 : int)))
                 = (118 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_554 __void_param))
                       (4 : int)))
                   = (97 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_554 __void_param))
                      (5 : int)))
                  = (108 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_554 __void_param))
                       (6 : int)))
                   = (105 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_554 __void_param))
                         (7 : int)))
                     = (100 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_554 __void_param))
                        (8 : int)))
                    = (32 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_554 __void_param))
                       (9 : int)))
                   = (109 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_554 __void_param))
                         (10 : int)))
                     = (101 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_554 __void_param))
                        (11 : int)))
                    = (109 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_554 __void_param))
                        (12 : int)))
                    = (111 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_554 __void_param))
                          (13 : int)))
                      = (114 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_554 __void_param))
                       (14 : int)))
                   = (121 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_554 __void_param))
                         (15 : int)))
                     = (32 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_554 __void_param))
                        (16 : int)))
                    = (108 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_554 __void_param))
                         (17 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_554 __void_param))
                           (18 : int)))
                       = (99 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_554 __void_param))
                          (19 : int)))
                      = (97 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_554 __void_param))
                         (20 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_554 __void_param))
                           (21 : int)))
                       = (105 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_554 __void_param))
                          (22 : int)))
                      = (111 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_554 __void_param))
                          (23 : int)))
                      = (110 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_554 __void_param))
                            (24 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_557
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_557 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_557__def_axiom:
    forall __void_param : unit [temp___String_Literal_557 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_557 __void_param))
               (1 : int)))
           = (82 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_557 __void_param))
                 (2 : int)))
             = (101 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_557 __void_param))
                   (3 : int)))
               = (109 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_557 __void_param))
                     (4 : int)))
                 = (111 : int))) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_557 __void_param))
                    (5 : int)))
                = (118 : int))) /\
            ((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_557 __void_param))
                     (6 : int)))
                 = (101 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_557 __void_param))
                       (7 : int)))
                   = (100 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_557 __void_param))
                      (8 : int)))
                  = (46 : int)))))
end

module Temp___String_Literal_559
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_559 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_559__def_axiom:
    forall __void_param : unit [temp___String_Literal_559 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_559 __void_param))
               (1 : int)))
           = (114 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_559 __void_param))
                 (2 : int)))
             = (101 : int))) /\
         ((((Standard__character__rep.to_rep
               ((Array__Int__Standard__character.get
                   (temp___String_Literal_559 __void_param))
                  (3 : int)))
              = (109 : int)) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_559 __void_param))
                    (4 : int)))
                = (111 : int))) /\
            (((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_559 __void_param))
                    (5 : int)))
                = (118 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_559 __void_param))
                      (6 : int)))
                  = (101 : int)))))
end

module Temp___String_Literal_564
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_564 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_564__def_axiom:
    forall __void_param : unit [temp___String_Literal_564 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_564 __void_param))
               (1 : int)))
           = (76 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_564 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_564 __void_param))
                   (3 : int)))
               = (99 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_564 __void_param))
                     (4 : int)))
                 = (107 : int))) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_564 __void_param))
                    (5 : int)))
                = (101 : int))) /\
            (((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_564 __void_param))
                    (6 : int)))
                = (100 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_564 __void_param))
                      (7 : int)))
                  = (33 : int)))))
end

module Temp___String_Literal_566
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_566 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_566__def_axiom:
    forall __void_param : unit [temp___String_Literal_566 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_566 __void_param))
               (1 : int)))
           = (67 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_566 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_566 __void_param))
                     (3 : int)))
                 = (117 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_566 __void_param))
                       (4 : int)))
                   = (110 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_566 __void_param))
                       (5 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_566 __void_param))
                         (6 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_566 __void_param))
                       (7 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_566 __void_param))
                         (8 : int)))
                     = (102 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_566 __void_param))
                         (9 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_566 __void_param))
                           (10 : int)))
                       = (116 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_566 __void_param))
                       (11 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_566 __void_param))
                         (12 : int)))
                     = (107 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_566 __void_param))
                         (13 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_566 __void_param))
                           (14 : int)))
                       = (110 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_566 __void_param))
                         (15 : int)))
                     = (115 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_566 __void_param))
                           (16 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_566 __void_param))
                          (17 : int)))
                      = (105 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_566 __void_param))
                       (18 : int)))
                   = (115 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_566 __void_param))
                         (19 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_566 __void_param))
                         (20 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_566 __void_param))
                           (21 : int)))
                       = (111 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_566 __void_param))
                         (22 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_566 __void_param))
                           (23 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_566 __void_param))
                          (24 : int)))
                      = (99 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_566 __void_param))
                         (25 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_566 __void_param))
                           (26 : int)))
                       = (114 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_566 __void_param))
                           (27 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_566 __void_param))
                             (28 : int)))
                         = (101 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_566 __void_param))
                           (29 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_566 __void_param))
                             (30 : int)))
                         = (116 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_566 __void_param))
                            (31 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_568
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_568 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_568__def_axiom:
    forall __void_param : unit [temp___String_Literal_568 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_568 __void_param))
               (1 : int)))
           = (73 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_568 __void_param))
                 (2 : int)))
             = (110 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_568 __void_param))
                     (3 : int)))
                 = (118 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_568 __void_param))
                       (4 : int)))
                   = (97 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_568 __void_param))
                      (5 : int)))
                  = (108 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_568 __void_param))
                       (6 : int)))
                   = (105 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_568 __void_param))
                         (7 : int)))
                     = (100 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_568 __void_param))
                        (8 : int)))
                    = (32 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_568 __void_param))
                       (9 : int)))
                   = (109 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_568 __void_param))
                         (10 : int)))
                     = (101 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_568 __void_param))
                        (11 : int)))
                    = (109 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_568 __void_param))
                        (12 : int)))
                    = (111 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_568 __void_param))
                          (13 : int)))
                      = (114 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_568 __void_param))
                       (14 : int)))
                   = (121 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_568 __void_param))
                         (15 : int)))
                     = (32 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_568 __void_param))
                        (16 : int)))
                    = (108 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_568 __void_param))
                         (17 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_568 __void_param))
                           (18 : int)))
                       = (99 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_568 __void_param))
                          (19 : int)))
                      = (97 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_568 __void_param))
                         (20 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_568 __void_param))
                           (21 : int)))
                       = (105 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_568 __void_param))
                          (22 : int)))
                      = (111 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_568 __void_param))
                          (23 : int)))
                      = (110 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_568 __void_param))
                            (24 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_573
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_573 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_573__def_axiom:
    forall __void_param : unit [temp___String_Literal_573 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_573 __void_param))
               (1 : int)))
           = (76 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_573 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_573 __void_param))
                   (3 : int)))
               = (97 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_573 __void_param))
                     (4 : int)))
                 = (100 : int))) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_573 __void_param))
                    (5 : int)))
                = (101 : int))) /\
            ((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_573 __void_param))
                     (6 : int)))
                 = (100 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_573 __void_param))
                       (7 : int)))
                   = (58 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_573 __void_param))
                      (8 : int)))
                  = (32 : int)))))
end

module Temp___String_Literal_576
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_576 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_576__def_axiom:
    forall __void_param : unit [temp___String_Literal_576 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_576 __void_param))
               (1 : int)))
           = (70 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_576 __void_param))
                 (2 : int)))
             = (117 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_576 __void_param))
                    (3 : int)))
                = (108 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_576 __void_param))
                      (4 : int)))
                  = (108 : int))) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_576 __void_param))
                     (5 : int)))
                 = (32 : int))) /\
             (((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_576 __void_param))
                     (6 : int)))
                 = (115 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_576 __void_param))
                       (7 : int)))
                   = (116 : int)))) /\
            ((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_576 __void_param))
                     (8 : int)))
                 = (97 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_576 __void_param))
                       (9 : int)))
                   = (99 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_576 __void_param))
                       (10 : int)))
                   = (107 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_576 __void_param))
                         (11 : int)))
                     = (33 : int))))))
end

module Temp___String_Literal_578
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_578 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_578__def_axiom:
    forall __void_param : unit [temp___String_Literal_578 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_578 __void_param))
               (1 : int)))
           = (108 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_578 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_578 __void_param))
                   (3 : int)))
               = (97 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_578 __void_param))
                     (4 : int)))
                 = (100 : int))) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_578 __void_param))
                    (5 : int)))
                = (70 : int))) /\
            ((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_578 __void_param))
                     (6 : int)))
                 = (114 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_578 __void_param))
                       (7 : int)))
                   = (111 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_578 __void_param))
                      (8 : int)))
                  = (109 : int)))))
end

module Temp___String_Literal_583
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_583 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_583__def_axiom:
    forall __void_param : unit [temp___String_Literal_583 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_583 __void_param))
               (1 : int)))
           = (76 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_583 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_583 __void_param))
                   (3 : int)))
               = (99 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_583 __void_param))
                     (4 : int)))
                 = (107 : int))) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_583 __void_param))
                    (5 : int)))
                = (101 : int))) /\
            (((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_583 __void_param))
                    (6 : int)))
                = (100 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_583 __void_param))
                      (7 : int)))
                  = (33 : int)))))
end

module Temp___String_Literal_585
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_585 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_585__def_axiom:
    forall __void_param : unit [temp___String_Literal_585 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_585 __void_param))
               (1 : int)))
           = (67 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_585 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_585 __void_param))
                     (3 : int)))
                 = (117 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_585 __void_param))
                       (4 : int)))
                   = (110 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_585 __void_param))
                       (5 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_585 __void_param))
                         (6 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_585 __void_param))
                       (7 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_585 __void_param))
                         (8 : int)))
                     = (102 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_585 __void_param))
                         (9 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_585 __void_param))
                           (10 : int)))
                       = (116 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_585 __void_param))
                       (11 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_585 __void_param))
                         (12 : int)))
                     = (107 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_585 __void_param))
                         (13 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_585 __void_param))
                           (14 : int)))
                       = (110 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_585 __void_param))
                         (15 : int)))
                     = (115 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_585 __void_param))
                           (16 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_585 __void_param))
                          (17 : int)))
                      = (105 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_585 __void_param))
                       (18 : int)))
                   = (115 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_585 __void_param))
                         (19 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_585 __void_param))
                         (20 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_585 __void_param))
                           (21 : int)))
                       = (111 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_585 __void_param))
                         (22 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_585 __void_param))
                           (23 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_585 __void_param))
                          (24 : int)))
                      = (99 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_585 __void_param))
                         (25 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_585 __void_param))
                           (26 : int)))
                       = (114 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_585 __void_param))
                           (27 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_585 __void_param))
                             (28 : int)))
                         = (101 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_585 __void_param))
                           (29 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_585 __void_param))
                             (30 : int)))
                         = (116 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_585 __void_param))
                            (31 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_587
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_587 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_587__def_axiom:
    forall __void_param : unit [temp___String_Literal_587 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_587 __void_param))
               (1 : int)))
           = (73 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_587 __void_param))
                 (2 : int)))
             = (110 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_587 __void_param))
                     (3 : int)))
                 = (118 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_587 __void_param))
                       (4 : int)))
                   = (97 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_587 __void_param))
                      (5 : int)))
                  = (108 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_587 __void_param))
                       (6 : int)))
                   = (105 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_587 __void_param))
                         (7 : int)))
                     = (100 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_587 __void_param))
                        (8 : int)))
                    = (32 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_587 __void_param))
                       (9 : int)))
                   = (109 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_587 __void_param))
                         (10 : int)))
                     = (101 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_587 __void_param))
                        (11 : int)))
                    = (109 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_587 __void_param))
                        (12 : int)))
                    = (111 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_587 __void_param))
                          (13 : int)))
                      = (114 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_587 __void_param))
                       (14 : int)))
                   = (121 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_587 __void_param))
                         (15 : int)))
                     = (32 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_587 __void_param))
                        (16 : int)))
                    = (108 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_587 __void_param))
                         (17 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_587 __void_param))
                           (18 : int)))
                       = (99 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_587 __void_param))
                          (19 : int)))
                      = (97 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_587 __void_param))
                         (20 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_587 __void_param))
                           (21 : int)))
                       = (105 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_587 __void_param))
                          (22 : int)))
                      = (111 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_587 __void_param))
                          (23 : int)))
                      = (110 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_587 __void_param))
                            (24 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_592
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_592 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_592__def_axiom:
    forall __void_param : unit [temp___String_Literal_592 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_592 __void_param))
               (1 : int)))
           = (78 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_592 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_592 __void_param))
                     (3 : int)))
                 = (32 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_592 __void_param))
                       (4 : int)))
                   = (101 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_592 __void_param))
                      (5 : int)))
                  = (108 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_592 __void_param))
                      (6 : int)))
                  = (101 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_592 __void_param))
                        (7 : int)))
                    = (109 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_592 __void_param))
                       (8 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_592 __void_param))
                         (9 : int)))
                     = (110 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_592 __void_param))
                        (10 : int)))
                    = (116 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_592 __void_param))
                        (11 : int)))
                    = (115 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_592 __void_param))
                          (12 : int)))
                      = (32 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_592 __void_param))
                       (13 : int)))
                   = (105 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_592 __void_param))
                         (14 : int)))
                     = (110 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_592 __void_param))
                        (15 : int)))
                    = (32 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_592 __void_param))
                        (16 : int)))
                    = (115 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_592 __void_param))
                          (17 : int)))
                      = (116 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_592 __void_param))
                        (18 : int)))
                    = (97 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_592 __void_param))
                          (19 : int)))
                      = (99 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_592 __void_param))
                          (20 : int)))
                      = (107 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_592 __void_param))
                            (21 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_595
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_595 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_595__def_axiom:
    forall __void_param : unit [temp___String_Literal_595 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_595 __void_param))
               (1 : int)))
           = (83 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_595 __void_param))
                 (2 : int)))
             = (116 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_595 __void_param))
                     (3 : int)))
                 = (111 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_595 __void_param))
                       (4 : int)))
                   = (114 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_595 __void_param))
                      (5 : int)))
                  = (101 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_595 __void_param))
                      (6 : int)))
                  = (100 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_595 __void_param))
                        (7 : int)))
                    = (32 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_595 __void_param))
                      (8 : int)))
                  = (115 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_595 __void_param))
                        (9 : int)))
                    = (117 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_595 __void_param))
                        (10 : int)))
                    = (99 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_595 __void_param))
                          (11 : int)))
                      = (99 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_595 __void_param))
                       (12 : int)))
                   = (101 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_595 __void_param))
                         (13 : int)))
                     = (115 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_595 __void_param))
                        (14 : int)))
                    = (115 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_595 __void_param))
                        (15 : int)))
                    = (102 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_595 __void_param))
                          (16 : int)))
                      = (117 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_595 __void_param))
                        (17 : int)))
                    = (108 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_595 __void_param))
                          (18 : int)))
                      = (108 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_595 __void_param))
                          (19 : int)))
                      = (121 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_595 __void_param))
                            (20 : int)))
                        = (46 : int)))))))
end

module Temp___String_Literal_597
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_597 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_597__def_axiom:
    forall __void_param : unit [temp___String_Literal_597 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_597 __void_param))
               (1 : int)))
           = (115 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_597 __void_param))
                 (2 : int)))
             = (116 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_597 __void_param))
                   (3 : int)))
               = (111 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_597 __void_param))
                     (4 : int)))
                 = (114 : int))) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_597 __void_param))
                    (5 : int)))
                = (101 : int))) /\
            (((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_597 __void_param))
                    (6 : int)))
                = (84 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_597 __void_param))
                      (7 : int)))
                  = (111 : int)))))
end

module Temp___String_Literal_602
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_602 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_602__def_axiom:
    forall __void_param : unit [temp___String_Literal_602 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_602 __void_param))
               (1 : int)))
           = (76 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_602 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_602 __void_param))
                   (3 : int)))
               = (99 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_602 __void_param))
                     (4 : int)))
                 = (107 : int))) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_602 __void_param))
                    (5 : int)))
                = (101 : int))) /\
            (((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_602 __void_param))
                    (6 : int)))
                = (100 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_602 __void_param))
                      (7 : int)))
                  = (33 : int)))))
end

module Temp___String_Literal_604
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_604 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_604__def_axiom:
    forall __void_param : unit [temp___String_Literal_604 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_604 __void_param))
               (1 : int)))
           = (67 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_604 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_604 __void_param))
                     (3 : int)))
                 = (117 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_604 __void_param))
                       (4 : int)))
                   = (110 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_604 __void_param))
                       (5 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_604 __void_param))
                         (6 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_604 __void_param))
                       (7 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_604 __void_param))
                         (8 : int)))
                     = (102 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_604 __void_param))
                         (9 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_604 __void_param))
                           (10 : int)))
                       = (116 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_604 __void_param))
                       (11 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_604 __void_param))
                         (12 : int)))
                     = (107 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_604 __void_param))
                         (13 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_604 __void_param))
                           (14 : int)))
                       = (110 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_604 __void_param))
                         (15 : int)))
                     = (115 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_604 __void_param))
                           (16 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_604 __void_param))
                          (17 : int)))
                      = (105 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_604 __void_param))
                       (18 : int)))
                   = (115 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_604 __void_param))
                         (19 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_604 __void_param))
                         (20 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_604 __void_param))
                           (21 : int)))
                       = (111 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_604 __void_param))
                         (22 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_604 __void_param))
                           (23 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_604 __void_param))
                          (24 : int)))
                      = (99 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_604 __void_param))
                         (25 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_604 __void_param))
                           (26 : int)))
                       = (114 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_604 __void_param))
                           (27 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_604 __void_param))
                             (28 : int)))
                         = (101 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_604 __void_param))
                           (29 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_604 __void_param))
                             (30 : int)))
                         = (116 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_604 __void_param))
                            (31 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_609
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_609 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_609__def_axiom:
    forall __void_param : unit [temp___String_Literal_609 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_609 __void_param))
               (1 : int)))
           = (80 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_609 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         ((((Standard__character__rep.to_rep
               ((Array__Int__Standard__character.get
                   (temp___String_Literal_609 __void_param))
                  (3 : int)))
              = (112 : int)) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_609 __void_param))
                    (4 : int)))
                = (58 : int))) /\
            ((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_609 __void_param))
                   (5 : int)))
               = (32 : int))))
end

module Temp___String_Literal_612
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_612 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_612__def_axiom:
    forall __void_param : unit [temp___String_Literal_612 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_612 __void_param))
               (1 : int)))
           = (69 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_612 __void_param))
                 (2 : int)))
             = (109 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_612 __void_param))
                    (3 : int)))
                = (112 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_612 __void_param))
                      (4 : int)))
                  = (116 : int))) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_612 __void_param))
                     (5 : int)))
                 = (121 : int))) /\
             (((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_612 __void_param))
                     (6 : int)))
                 = (32 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_612 __void_param))
                       (7 : int)))
                   = (115 : int)))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_612 __void_param))
                      (8 : int)))
                  = (116 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_612 __void_param))
                        (9 : int)))
                    = (97 : int))) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_612 __void_param))
                       (10 : int)))
                   = (99 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_612 __void_param))
                       (11 : int)))
                   = (107 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_612 __void_param))
                         (12 : int)))
                     = (33 : int))))))
end

module Temp___String_Literal_614
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_614 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_614__def_axiom:
    forall __void_param : unit [temp___String_Literal_614 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_614 __void_param))
               (1 : int)))
           = (112 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_614 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         ((Standard__character__rep.to_rep
             ((Array__Int__Standard__character.get
                 (temp___String_Literal_614 __void_param))
                (3 : int)))
            = (112 : int)))
end

module Temp___String_Literal_619
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_619 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_619__def_axiom:
    forall __void_param : unit [temp___String_Literal_619 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_619 __void_param))
               (1 : int)))
           = (76 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_619 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_619 __void_param))
                   (3 : int)))
               = (99 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_619 __void_param))
                     (4 : int)))
                 = (107 : int))) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_619 __void_param))
                    (5 : int)))
                = (101 : int))) /\
            (((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_619 __void_param))
                    (6 : int)))
                = (100 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_619 __void_param))
                      (7 : int)))
                  = (33 : int)))))
end

module Temp___String_Literal_621
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_621 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_621__def_axiom:
    forall __void_param : unit [temp___String_Literal_621 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_621 __void_param))
               (1 : int)))
           = (67 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_621 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_621 __void_param))
                     (3 : int)))
                 = (117 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_621 __void_param))
                       (4 : int)))
                   = (110 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_621 __void_param))
                       (5 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_621 __void_param))
                         (6 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_621 __void_param))
                       (7 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_621 __void_param))
                         (8 : int)))
                     = (102 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_621 __void_param))
                         (9 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_621 __void_param))
                           (10 : int)))
                       = (116 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_621 __void_param))
                       (11 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_621 __void_param))
                         (12 : int)))
                     = (107 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_621 __void_param))
                         (13 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_621 __void_param))
                           (14 : int)))
                       = (110 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_621 __void_param))
                         (15 : int)))
                     = (115 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_621 __void_param))
                           (16 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_621 __void_param))
                          (17 : int)))
                      = (105 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_621 __void_param))
                       (18 : int)))
                   = (115 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_621 __void_param))
                         (19 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_621 __void_param))
                         (20 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_621 __void_param))
                           (21 : int)))
                       = (111 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_621 __void_param))
                         (22 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_621 __void_param))
                           (23 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_621 __void_param))
                          (24 : int)))
                      = (99 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_621 __void_param))
                         (25 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_621 __void_param))
                           (26 : int)))
                       = (114 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_621 __void_param))
                           (27 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_621 __void_param))
                             (28 : int)))
                         = (101 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_621 __void_param))
                           (29 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_621 __void_param))
                             (30 : int)))
                         = (116 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_621 __void_param))
                            (31 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_625
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_625 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_625__def_axiom:
    forall __void_param : unit [temp___String_Literal_625 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_625 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_625 __void_param))
                 (2 : int)))
             = (97 : int))) /\
         ((((Standard__character__rep.to_rep
               ((Array__Int__Standard__character.get
                   (temp___String_Literal_625 __void_param))
                  (3 : int)))
              = (110 : int)) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_625 __void_param))
                    (4 : int)))
                = (100 : int))) /\
            ((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_625 __void_param))
                   (5 : int)))
               = (32 : int))))
end

module Temp___String_Literal_626
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_626 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_626__def_axiom:
    forall __void_param : unit [temp___String_Literal_626 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_626 __void_param))
               (1 : int)))
           = (80 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_626 __void_param))
                 (2 : int)))
             = (117 : int))) /\
         ((((Standard__character__rep.to_rep
               ((Array__Int__Standard__character.get
                   (temp___String_Literal_626 __void_param))
                  (3 : int)))
              = (115 : int)) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_626 __void_param))
                    (4 : int)))
                = (104 : int))) /\
            (((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_626 __void_param))
                    (5 : int)))
                = (58 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_626 __void_param))
                      (6 : int)))
                  = (32 : int)))))
end

module Temp___String_Literal_633
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_633 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_633__def_axiom:
    forall __void_param : unit [temp___String_Literal_633 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_633 __void_param))
               (1 : int)))
           = (70 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_633 __void_param))
                 (2 : int)))
             = (117 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_633 __void_param))
                    (3 : int)))
                = (108 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_633 __void_param))
                      (4 : int)))
                  = (108 : int))) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_633 __void_param))
                     (5 : int)))
                 = (32 : int))) /\
             (((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_633 __void_param))
                     (6 : int)))
                 = (115 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_633 __void_param))
                       (7 : int)))
                   = (116 : int)))) /\
            ((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_633 __void_param))
                     (8 : int)))
                 = (97 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_633 __void_param))
                       (9 : int)))
                   = (99 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_633 __void_param))
                       (10 : int)))
                   = (107 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_633 __void_param))
                         (11 : int)))
                     = (33 : int))))))
end

module Temp___String_Literal_635
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_635 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_635__def_axiom:
    forall __void_param : unit [temp___String_Literal_635 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_635 __void_param))
               (1 : int)))
           = (112 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_635 __void_param))
                 (2 : int)))
             = (117 : int))) /\
         ((((Standard__character__rep.to_rep
               ((Array__Int__Standard__character.get
                   (temp___String_Literal_635 __void_param))
                  (3 : int)))
              = (115 : int)) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_635 __void_param))
                    (4 : int)))
                = (104 : int))) /\
            ((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_635 __void_param))
                   (5 : int)))
               = (50 : int))))
end

module Temp___String_Literal_640
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_640 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_640__def_axiom:
    forall __void_param : unit [temp___String_Literal_640 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_640 __void_param))
               (1 : int)))
           = (76 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_640 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_640 __void_param))
                   (3 : int)))
               = (99 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_640 __void_param))
                     (4 : int)))
                 = (107 : int))) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_640 __void_param))
                    (5 : int)))
                = (101 : int))) /\
            (((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_640 __void_param))
                    (6 : int)))
                = (100 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_640 __void_param))
                      (7 : int)))
                  = (33 : int)))))
end

module Temp___String_Literal_642
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_642 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_642__def_axiom:
    forall __void_param : unit [temp___String_Literal_642 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_642 __void_param))
               (1 : int)))
           = (67 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_642 __void_param))
                 (2 : int)))
             = (111 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_642 __void_param))
                     (3 : int)))
                 = (117 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_642 __void_param))
                       (4 : int)))
                   = (110 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_642 __void_param))
                       (5 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_642 __void_param))
                         (6 : int)))
                     = (32 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_642 __void_param))
                       (7 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_642 __void_param))
                         (8 : int)))
                     = (102 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_642 __void_param))
                         (9 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_642 __void_param))
                           (10 : int)))
                       = (116 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_642 __void_param))
                       (11 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_642 __void_param))
                         (12 : int)))
                     = (107 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_642 __void_param))
                         (13 : int)))
                     = (101 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_642 __void_param))
                           (14 : int)))
                       = (110 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_642 __void_param))
                         (15 : int)))
                     = (115 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_642 __void_param))
                           (16 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_642 __void_param))
                          (17 : int)))
                      = (105 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_642 __void_param))
                       (18 : int)))
                   = (115 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_642 __void_param))
                         (19 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_642 __void_param))
                         (20 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_642 __void_param))
                           (21 : int)))
                       = (111 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_642 __void_param))
                         (22 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_642 __void_param))
                           (23 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_642 __void_param))
                          (24 : int)))
                      = (99 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_642 __void_param))
                         (25 : int)))
                     = (111 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_642 __void_param))
                           (26 : int)))
                       = (114 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_642 __void_param))
                           (27 : int)))
                       = (114 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_642 __void_param))
                             (28 : int)))
                         = (101 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_642 __void_param))
                           (29 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_642 __void_param))
                             (30 : int)))
                         = (116 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_642 __void_param))
                            (31 : int)))
                        = (33 : int)))))))
end

module Temp___String_Literal_646
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_646 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_646__def_axiom:
    forall __void_param : unit [temp___String_Literal_646 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_646 __void_param))
               (1 : int)))
           = (80 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_646 __void_param))
                 (2 : int)))
             = (117 : int))) /\
         ((((Standard__character__rep.to_rep
               ((Array__Int__Standard__character.get
                   (temp___String_Literal_646 __void_param))
                  (3 : int)))
              = (115 : int)) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_646 __void_param))
                    (4 : int)))
                = (104 : int))) /\
            (((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_646 __void_param))
                    (5 : int)))
                = (58 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_646 __void_param))
                      (6 : int)))
                  = (32 : int)))))
end

module Temp___String_Literal_649
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_649 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_649__def_axiom:
    forall __void_param : unit [temp___String_Literal_649 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_649 __void_param))
               (1 : int)))
           = (70 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_649 __void_param))
                 (2 : int)))
             = (117 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_649 __void_param))
                    (3 : int)))
                = (108 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_649 __void_param))
                      (4 : int)))
                  = (108 : int))) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_649 __void_param))
                     (5 : int)))
                 = (32 : int))) /\
             (((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_649 __void_param))
                     (6 : int)))
                 = (115 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_649 __void_param))
                       (7 : int)))
                   = (116 : int)))) /\
            ((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_649 __void_param))
                     (8 : int)))
                 = (97 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_649 __void_param))
                       (9 : int)))
                   = (99 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_649 __void_param))
                       (10 : int)))
                   = (107 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_649 __void_param))
                         (11 : int)))
                     = (33 : int))))))
end

module Temp___String_Literal_651
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_651 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_651__def_axiom:
    forall __void_param : unit [temp___String_Literal_651 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_651 __void_param))
               (1 : int)))
           = (112 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_651 __void_param))
                 (2 : int)))
             = (117 : int))) /\
         ((((Standard__character__rep.to_rep
               ((Array__Int__Standard__character.get
                   (temp___String_Literal_651 __void_param))
                  (3 : int)))
              = (115 : int)) /\
             ((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_651 __void_param))
                    (4 : int)))
                = (104 : int))) /\
            ((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_651 __void_param))
                   (5 : int)))
               = (49 : int))))
end

module Temp___String_Literal_656
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_656 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_656__def_axiom:
    forall __void_param : unit [temp___String_Literal_656 __void_param].
      ((Standard__character__rep.to_rep
          ((Array__Int__Standard__character.get
              (temp___String_Literal_656 __void_param))
             (1 : int)))
         = (43 : int))
end

module Temp___String_Literal_661
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_661 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_661__def_axiom:
    forall __void_param : unit [temp___String_Literal_661 __void_param].
      ((Standard__character__rep.to_rep
          ((Array__Int__Standard__character.get
              (temp___String_Literal_661 __void_param))
             (1 : int)))
         = (45 : int))
end

module Temp___String_Literal_666
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_666 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_666__def_axiom:
    forall __void_param : unit [temp___String_Literal_666 __void_param].
      ((Standard__character__rep.to_rep
          ((Array__Int__Standard__character.get
              (temp___String_Literal_666 __void_param))
             (1 : int)))
         = (42 : int))
end

module Temp___String_Literal_671
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_671 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_671__def_axiom:
    forall __void_param : unit [temp___String_Literal_671 __void_param].
      ((Standard__character__rep.to_rep
          ((Array__Int__Standard__character.get
              (temp___String_Literal_671 __void_param))
             (1 : int)))
         = (47 : int))
end

module Standard__positive___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__positive as Standard__positive
  
  predicate dynamic_invariant (temp___expr_53: int) (temp___is_init_49: bool) (temp___skip_constant_50: bool) (temp___do_toplevel_51: bool) (temp___do_typ_inv_52: bool) =
    if ((temp___is_init_49 = True) \/
          (Standard__positive.first <= Standard__positive.last)) then
      (((Standard__positive.dynamic_property Standard__positive.first)
          Standard__positive.last)
         temp___expr_53)
    else true
  
  val dynamic_invariant (temp___expr_53: int) (temp___is_init_49: bool) (temp___skip_constant_50: bool) (temp___do_toplevel_51: bool) (temp___do_typ_inv_52: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_53 : int))
                      (temp___is_init_49 : bool))
                     (temp___skip_constant_50 : bool))
                    (temp___do_toplevel_51 : bool))
                   (temp___do_typ_inv_52 : bool)) }
  
  predicate default_initial_assumption (temp___expr_54: int) (temp___skip_top_level_55: bool) =
    true
  
  val default_initial_assumption (temp___expr_54: int) (temp___skip_top_level_55: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_54 : int))
                   (temp___skip_top_level_55 : bool)) }
end

module Standard__character___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  
  predicate dynamic_invariant (temp___expr_81: int) (temp___is_init_77: bool) (temp___skip_constant_78: bool) (temp___do_toplevel_79: bool) (temp___do_typ_inv_80: bool) =
    if ((temp___is_init_77 = True) \/
          (Standard__character.first <= Standard__character.last)) then
      (((Standard__character.dynamic_property Standard__character.first)
          Standard__character.last)
         temp___expr_81)
    else true
  
  val dynamic_invariant (temp___expr_81: int) (temp___is_init_77: bool) (temp___skip_constant_78: bool) (temp___do_toplevel_79: bool) (temp___do_typ_inv_80: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_81 : int))
                      (temp___is_init_77 : bool))
                     (temp___skip_constant_78 : bool))
                    (temp___do_toplevel_79 : bool))
                   (temp___do_typ_inv_80 : bool)) }
  
  predicate default_initial_assumption (temp___expr_82: int) (temp___skip_top_level_83: bool) =
    true
  
  val default_initial_assumption (temp___expr_82: int) (temp___skip_top_level_83: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_82 : int))
                   (temp___skip_top_level_83 : bool)) }
end

module Commandhandler__execute__t___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Mystringtokeniser__tokenextent___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Mystringtokeniser__tokenextent as Mystringtokeniser__tokenextent
  
  predicate dynamic_invariant (temp___expr_315: Mystringtokeniser__tokenextent.tokenextent) (temp___is_init_311: bool) (temp___skip_constant_312: bool) (temp___do_toplevel_313: bool) (temp___do_typ_inv_314: bool) =
    true
  
  val dynamic_invariant (temp___expr_315: Mystringtokeniser__tokenextent.tokenextent) (temp___is_init_311: bool) (temp___skip_constant_312: bool) (temp___do_toplevel_313: bool) (temp___do_typ_inv_314: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_315 :
                          Mystringtokeniser__tokenextent.tokenextent))
                      (temp___is_init_311 : bool))
                     (temp___skip_constant_312 : bool))
                    (temp___do_toplevel_313 : bool))
                   (temp___do_typ_inv_314 : bool)) }
  
  predicate default_initial_assumption (temp___expr_316: Mystringtokeniser__tokenextent.tokenextent) (temp___skip_top_level_317: bool) =
    true
  
  val default_initial_assumption (temp___expr_316: Mystringtokeniser__tokenextent.tokenextent) (temp___skip_top_level_317: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_316 :
                       Mystringtokeniser__tokenextent.tokenextent))
                   (temp___skip_top_level_317 : bool)) }
end

module Commandhandler__execute__t__aggregate_def___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Mystringtokeniser__tokenextent as Mystringtokeniser__tokenextent
  use Mystringtokeniser__tokenextent___axiom as Mystringtokeniser__tokenextent___axiom
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Commandhandler__execute__t__aggregate_def as Commandhandler__execute__t__aggregate_def
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  
  axiom def_axiom:
    forall temp___406 : Mystringtokeniser__tokenextent.tokenextent.
      let temp___405 =
        Commandhandler__execute__t__aggregate_def.commandhandler__execute__t__aggregate_def
          temp___406 in
      forall temp___407 : int.
        if (((((Mystringtokeniser__tokenextent___axiom.dynamic_invariant
                  temp___406)
                 True)
                True)
               True)
              True) then
          (((Array__Int__Mystringtokeniser__tokenextent.get temp___405)
              temp___407)
             = temp___406)
        else true
end

module Commandhandler__execute__numtokens___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__token1___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_2__r___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_2__a___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_2__b___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_2__success___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_3__token2___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_3__success___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_4__token2___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_4__token3___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_4__success___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_5__a___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_5__success___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_6__token2___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_6__a___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_6__success___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_7__token2___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_7__a___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_7__success___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_8__token2___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_9__token2___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__B_1__B_10__token2___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__l___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__sk___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__d___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__s___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Stack__stack_array___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Stack__int32 as Array__Int__Stack__int32
  use Array__Int__Stack__int32 as Array__Int__Stack__int32
  
  predicate dynamic_invariant (temp___expr_218: Array__Int__Stack__int32.map) (temp___is_init_214: bool) (temp___skip_constant_215: bool) (temp___do_toplevel_216: bool) (temp___do_typ_inv_217: bool) =
    true
  
  val dynamic_invariant (temp___expr_218: Array__Int__Stack__int32.map) (temp___is_init_214: bool) (temp___skip_constant_215: bool) (temp___do_toplevel_216: bool) (temp___do_typ_inv_217: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_218 : Array__Int__Stack__int32.map))
                      (temp___is_init_214 : bool))
                     (temp___skip_constant_215 : bool))
                    (temp___do_toplevel_216 : bool))
                   (temp___do_typ_inv_217 : bool)) }
  
  predicate default_initial_assumption (temp___expr_220: Array__Int__Stack__int32.map) (temp___skip_top_level_221: bool) =
    true
  
  val default_initial_assumption (temp___expr_220: Array__Int__Stack__int32.map) (temp___skip_top_level_221: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_220 : Array__Int__Stack__int32.map))
                   (temp___skip_top_level_221 : bool)) }
end

module Ada___ada__text_io__count
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type count = <range 0 2147483647>
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = count,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type count__ref = { mutable count__content : count }
  
  function count__ref_count__content__projection (a: count__ref) : count =
    a.count__content
  
  meta "model_projection" function count__ref_count__content__projection
  
  meta "inline:no" function count__ref_count__content__projection
  
  val count__havoc (x: count__ref) : unit
    writes { x }
end

module Ada___ada__text_io__count___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Ada___ada__text_io__count as Ada___ada__text_io__count
  
  predicate dynamic_invariant (temp___expr_308: int) (temp___is_init_304: bool) (temp___skip_constant_305: bool) (temp___do_toplevel_306: bool) (temp___do_typ_inv_307: bool) =
    if ((temp___is_init_304 = True) \/
          (Ada___ada__text_io__count.first <= Ada___ada__text_io__count.last)) then
      (((Ada___ada__text_io__count.dynamic_property
           Ada___ada__text_io__count.first)
          Ada___ada__text_io__count.last)
         temp___expr_308)
    else true
  
  val dynamic_invariant (temp___expr_308: int) (temp___is_init_304: bool) (temp___skip_constant_305: bool) (temp___do_toplevel_306: bool) (temp___do_typ_inv_307: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_308 : int))
                      (temp___is_init_304 : bool))
                     (temp___skip_constant_305 : bool))
                    (temp___do_toplevel_306 : bool))
                   (temp___do_typ_inv_307 : bool)) }
  
  predicate default_initial_assumption (temp___expr_309: int) (temp___skip_top_level_310: bool) =
    true
  
  val default_initial_assumption (temp___expr_309: int) (temp___skip_top_level_310: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_309 : int))
                   (temp___skip_top_level_310 : bool)) }
end

module Ada___ada__text_io__line_length__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Ada___ada__text_io__line_length__2 as Ada___ada__text_io__line_length__2
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val line_length (__void_param: unit) : int
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes {  }
    ensures { (((result
                   = (((((((Ada___ada__text_io__line_length__2.line_length
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err))) /\
                  true) /\
                 (((((Ada___ada__text_io__count___axiom.dynamic_invariant
                        result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom line_length__post_axiom:
    forall Ada___ada__text_io__file_system___file_system___ : Main.__private, Ada___ada__text_io__standard_in___standard_in___ : 
          Main.__private, Ada___ada__text_io__standard_out___standard_out___ : 
          Main.__private, Ada___ada__text_io__standard_err___standard_err___ : 
          Main.__private, Ada___ada__text_io__current_in___current_in___ : 
          Main.__private, Ada___ada__text_io__current_out___current_out___ : 
          Main.__private, Ada___ada__text_io__current_err___current_err___ : 
          Main.__private
          [((((((Ada___ada__text_io__line_length__2.line_length
                   Ada___ada__text_io__file_system___file_system___)
                  Ada___ada__text_io__standard_in___standard_in___)
                 Ada___ada__text_io__standard_out___standard_out___)
                Ada___ada__text_io__standard_err___standard_err___)
               Ada___ada__text_io__current_in___current_in___)
              Ada___ada__text_io__current_out___current_out___)
             Ada___ada__text_io__current_err___current_err___].
      let result =
        ((((((Ada___ada__text_io__line_length__2.line_length
                Ada___ada__text_io__file_system___file_system___)
               Ada___ada__text_io__standard_in___standard_in___)
              Ada___ada__text_io__standard_out___standard_out___)
             Ada___ada__text_io__standard_err___standard_err___)
            Ada___ada__text_io__current_in___current_in___)
           Ada___ada__text_io__current_out___current_out___)
          Ada___ada__text_io__current_err___current_err___ in
      ((true /\
          (((((Ada___ada__text_io__count___axiom.dynamic_invariant result)
                True)
               False)
              True)
             True)) /\
         true)
end

module Ada___ada__text_io__page_length__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Ada___ada__text_io__page_length__2 as Ada___ada__text_io__page_length__2
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val page_length (__void_param: unit) : int
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes {  }
    ensures { (((result
                   = (((((((Ada___ada__text_io__page_length__2.page_length
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err))) /\
                  true) /\
                 (((((Ada___ada__text_io__count___axiom.dynamic_invariant
                        result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom page_length__post_axiom:
    forall Ada___ada__text_io__file_system___file_system___ : Main.__private, Ada___ada__text_io__standard_in___standard_in___ : 
          Main.__private, Ada___ada__text_io__standard_out___standard_out___ : 
          Main.__private, Ada___ada__text_io__standard_err___standard_err___ : 
          Main.__private, Ada___ada__text_io__current_in___current_in___ : 
          Main.__private, Ada___ada__text_io__current_out___current_out___ : 
          Main.__private, Ada___ada__text_io__current_err___current_err___ : 
          Main.__private
          [((((((Ada___ada__text_io__page_length__2.page_length
                   Ada___ada__text_io__file_system___file_system___)
                  Ada___ada__text_io__standard_in___standard_in___)
                 Ada___ada__text_io__standard_out___standard_out___)
                Ada___ada__text_io__standard_err___standard_err___)
               Ada___ada__text_io__current_in___current_in___)
              Ada___ada__text_io__current_out___current_out___)
             Ada___ada__text_io__current_err___current_err___].
      let result =
        ((((((Ada___ada__text_io__page_length__2.page_length
                Ada___ada__text_io__file_system___file_system___)
               Ada___ada__text_io__standard_in___standard_in___)
              Ada___ada__text_io__standard_out___standard_out___)
             Ada___ada__text_io__standard_err___standard_err___)
            Ada___ada__text_io__current_in___current_in___)
           Ada___ada__text_io__current_out___current_out___)
          Ada___ada__text_io__current_err___current_err___ in
      ((true /\
          (((((Ada___ada__text_io__count___axiom.dynamic_invariant result)
                True)
               False)
              True)
             True)) /\
         true)
end

module Memorystore__location_index___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Memorystore__location_index as Memorystore__location_index
  
  predicate dynamic_invariant (temp___expr_239: int) (temp___is_init_235: bool) (temp___skip_constant_236: bool) (temp___do_toplevel_237: bool) (temp___do_typ_inv_238: bool) =
    if ((temp___is_init_235 = True) \/
          (Memorystore__location_index.first
             <= Memorystore__location_index.last)) then
      (((Memorystore__location_index.dynamic_property
           Memorystore__location_index.first)
          Memorystore__location_index.last)
         temp___expr_239)
    else true
  
  val dynamic_invariant (temp___expr_239: int) (temp___is_init_235: bool) (temp___skip_constant_236: bool) (temp___do_toplevel_237: bool) (temp___do_typ_inv_238: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_239 : int))
                      (temp___is_init_235 : bool))
                     (temp___skip_constant_236 : bool))
                    (temp___do_toplevel_237 : bool))
                   (temp___do_typ_inv_238 : bool)) }
  
  predicate default_initial_assumption (temp___expr_240: int) (temp___skip_top_level_241: bool) =
    true
  
  val default_initial_assumption (temp___expr_240: int) (temp___skip_top_level_241: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_240 : int))
                   (temp___skip_top_level_241 : bool)) }
end

module Memorystore__cell_opt___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Boolean as Boolean
  use Memorystore__int32 as Memorystore__int32
  use Memorystore__int32__rep as Memorystore__int32__rep
  use Memorystore__cell_opt as Memorystore__cell_opt
  
  predicate dynamic_invariant (temp___expr_253: Memorystore__cell_opt.cell_opt) (temp___is_init_249: bool) (temp___skip_constant_250: bool) (temp___do_toplevel_251: bool) (temp___do_typ_inv_252: bool) =
    true
  
  val dynamic_invariant (temp___expr_253: Memorystore__cell_opt.cell_opt) (temp___is_init_249: bool) (temp___skip_constant_250: bool) (temp___do_toplevel_251: bool) (temp___do_typ_inv_252: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_253 : Memorystore__cell_opt.cell_opt))
                      (temp___is_init_249 : bool))
                     (temp___skip_constant_250 : bool))
                    (temp___do_toplevel_251 : bool))
                   (temp___do_typ_inv_252 : bool)) }
  
  predicate default_initial_assumption (temp___expr_254: Memorystore__cell_opt.cell_opt) (temp___skip_top_level_255: bool) =
    ((if (Memorystore__cell_opt.memorystore__cell_opt__valid__pred
            temp___expr_254) then
        (((Memorystore__cell_opt.__split_fields temp___expr_254).Memorystore__cell_opt.rec__memorystore__cell_opt__valid)
           = (Boolean.of_int (0 : int)))
      else true) /\
       (if (Memorystore__cell_opt.memorystore__cell_opt__val__pred
              temp___expr_254) then
          ((Memorystore__int32__rep.to_rep
              ((Memorystore__cell_opt.__split_fields temp___expr_254).
                 Memorystore__cell_opt.rec__memorystore__cell_opt__val))
             = (0 : int))
        else true))
  
  val default_initial_assumption (temp___expr_254: Memorystore__cell_opt.cell_opt) (temp___skip_top_level_255: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_254 : Memorystore__cell_opt.cell_opt))
                   (temp___skip_top_level_255 : bool)) }
end

module Memorystore__mem_array___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Boolean as Boolean
  use Memorystore__location_index as Memorystore__location_index
  use Memorystore__int32 as Memorystore__int32
  use Memorystore__int32__rep as Memorystore__int32__rep
  use Memorystore__cell_opt as Memorystore__cell_opt
  use Array__Int__Memorystore__cell_opt as Array__Int__Memorystore__cell_opt
  use Array__Int__Memorystore__cell_opt as Array__Int__Memorystore__cell_opt
  use Array__Int__Memorystore__cell_opt as Array__Int__Memorystore__cell_opt
  
  predicate dynamic_invariant (temp___expr_260: Array__Int__Memorystore__cell_opt.map) (temp___is_init_256: bool) (temp___skip_constant_257: bool) (temp___do_toplevel_258: bool) (temp___do_typ_inv_259: bool) =
    true
  
  val dynamic_invariant (temp___expr_260: Array__Int__Memorystore__cell_opt.map) (temp___is_init_256: bool) (temp___skip_constant_257: bool) (temp___do_toplevel_258: bool) (temp___do_typ_inv_259: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_260 :
                          Array__Int__Memorystore__cell_opt.map))
                      (temp___is_init_256 : bool))
                     (temp___skip_constant_257 : bool))
                    (temp___do_toplevel_258 : bool))
                   (temp___do_typ_inv_259 : bool)) }
  
  predicate default_initial_assumption (temp___expr_262: Array__Int__Memorystore__cell_opt.map) (temp___skip_top_level_263: bool) =
    forall temp___264 : int.
      if ((Memorystore__location_index.first <= temp___264) /\
            (temp___264 <= Memorystore__location_index.last)) then
        (let temp___265 =
           (Array__Int__Memorystore__cell_opt.get temp___expr_262) temp___264 in
         ((if (Memorystore__cell_opt.memorystore__cell_opt__valid__pred
                 ((Array__Int__Memorystore__cell_opt.get temp___expr_262)
                    temp___264)) then
             (((Memorystore__cell_opt.__split_fields
                   ((Array__Int__Memorystore__cell_opt.get temp___expr_262)
                      temp___264)).Memorystore__cell_opt.rec__memorystore__cell_opt__valid)
                = (Boolean.of_int (0 : int)))
           else true) /\
            (if (Memorystore__cell_opt.memorystore__cell_opt__val__pred
                   ((Array__Int__Memorystore__cell_opt.get temp___expr_262)
                      temp___264)) then
               ((Memorystore__int32__rep.to_rep
                   ((Memorystore__cell_opt.__split_fields
                        ((Array__Int__Memorystore__cell_opt.get
                            temp___expr_262)
                           temp___264)).Memorystore__cell_opt.rec__memorystore__cell_opt__val))
                  = (0 : int))
             else true)))
      else true
  
  val default_initial_assumption (temp___expr_262: Array__Int__Memorystore__cell_opt.map) (temp___skip_top_level_263: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_262 : Array__Int__Memorystore__cell_opt.map))
                   (temp___skip_top_level_263 : bool)) }
end

module Mystring_instance__lines__mystringstr___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  predicate dynamic_invariant (temp___expr_281: Array__Int__Standard__character.map) (temp___is_init_277: bool) (temp___skip_constant_278: bool) (temp___do_toplevel_279: bool) (temp___do_typ_inv_280: bool) =
    true
  
  val dynamic_invariant (temp___expr_281: Array__Int__Standard__character.map) (temp___is_init_277: bool) (temp___skip_constant_278: bool) (temp___do_toplevel_279: bool) (temp___do_typ_inv_280: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_281 : Array__Int__Standard__character.map))
                      (temp___is_init_277 : bool))
                     (temp___skip_constant_278 : bool))
                    (temp___do_toplevel_279 : bool))
                   (temp___do_typ_inv_280 : bool)) }
  
  predicate default_initial_assumption (temp___expr_283: Array__Int__Standard__character.map) (temp___skip_top_level_284: bool) =
    true
  
  val default_initial_assumption (temp___expr_283: Array__Int__Standard__character.map) (temp___skip_top_level_284: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_283 : Array__Int__Standard__character.map))
                   (temp___skip_top_level_284 : bool)) }
end

module Mystring_instance__lines__length___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__natural___axiom as Standard__natural___axiom
  use Mystring_instance__lines__mystring as Mystring_instance__lines__mystring
  use Mystring_instance__lines__length as Mystring_instance__lines__length
  use Mystring_instance__lines__mystring__T13s as Mystring_instance__lines__mystring__T13s
  use Mystring_instance__lines__mystring__T13s__rep as Mystring_instance__lines__mystring__T13s__rep
  use Mystring_instance__lines__mystring___axiom as Mystring_instance__lines__mystring___axiom
  
  val length (m: Mystring_instance__lines__mystring.mystring) : int
    requires { true }
    ensures { (((result = (Mystring_instance__lines__length.length m)) /\
                  ((Mystring_instance__lines__length.length__function_guard
                      result)
                     m)) /\
                 ((((((Standard__natural___axiom.dynamic_invariant result)
                        True)
                       False)
                      True)
                     True) /\
                    ((result
                        = (Mystring_instance__lines__mystring__T13s__rep.to_rep
                             ((Mystring_instance__lines__mystring.__split_fields
                                  m).Mystring_instance__lines__mystring.rec__mystring_instance__lines__mystring__length))) /\
                       ([@GP_Pretty_Ada:17419] (result <= (2048 : int)))))) }
  
  axiom length__post_axiom:
    forall m : Mystring_instance__lines__mystring.mystring
          [Mystring_instance__lines__length.length m].
      ((((((Mystring_instance__lines__mystring___axiom.dynamic_invariant m)
             True)
            True)
           True)
          True) ->
         (let result = Mystring_instance__lines__length.length m in
          if ((Mystring_instance__lines__length.length__function_guard result)
                m) then
            ((([@GP_Pretty_Ada:17419] (result <= (2048 : int))) /\
                (((((Standard__natural___axiom.dynamic_invariant result) True)
                     False)
                    True)
                   True)) /\
               true)
          else true))
  
  axiom length__def_axiom:
    forall m : Mystring_instance__lines__mystring.mystring
          [Mystring_instance__lines__length.length m].
      ((((((Mystring_instance__lines__mystring___axiom.dynamic_invariant m)
             True)
            True)
           True)
          True) ->
         ((Mystring_instance__lines__length.length m)
            = (Mystring_instance__lines__mystring__T13s__rep.to_rep
                 ((Mystring_instance__lines__mystring.__split_fields m).
                    Mystring_instance__lines__mystring.rec__mystring_instance__lines__mystring__length))))
end

module Mystring_instance__lines__mystring__T13s___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__TTtSP1___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Commandhandler__execute__subprogram_def
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Main as Main
  use _gnatprove_standard.Integer as Integer
  use _gnatprove_standard.Boolean as Boolean
  use Standard_String__Img as Standard_String__Img
  use Standard__integer as Standard__integer
  use Standard__integer as Standard__integer
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__natural as Standard__natural
  use Standard__natural___axiom as Standard__natural___axiom
  use Standard__natural__rep as Standard__natural__rep
  use Standard__positive as Standard__positive
  use Standard__positive__rep as Standard__positive__rep
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character__Concat as Array__Int__Standard__character__Concat
  use Standard__string as Standard__string
  use Standard__integer__rep as Standard__integer__rep
  use Standard__string___axiom as Standard__string___axiom
  use Commandhandler__execute__l as Commandhandler__execute__l
  use Locker__locker as Locker__locker
  use Locker__locker___axiom as Locker__locker___axiom
  use Commandhandler__execute__sk as Commandhandler__execute__sk
  use Stack__stack_instance as Stack__stack_instance
  use Stack__stack_instance___axiom as Stack__stack_instance___axiom
  use Commandhandler__execute__d as Commandhandler__execute__d
  use Memorystore__database as Memorystore__database
  use Memorystore__database___axiom as Memorystore__database___axiom
  use Mystring_instance__lines__mystring as Mystring_instance__lines__mystring
  use Commandhandler__execute__s as Commandhandler__execute__s
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Commandhandler__execute__t as Commandhandler__execute__t
  use Commandhandler__execute__numtokens as Commandhandler__execute__numtokens
  use Mystring_instance__lines__to_string___axiom as Mystring_instance__lines__to_string___axiom
  use Mystringtokeniser__tokenise___axiom as Mystringtokeniser__tokenise___axiom
  use Ada___ada__text_io__put_line__2___axiom as Ada___ada__text_io__put_line__2___axiom
  use Mystring_instance__lines__substring___axiom as Mystring_instance__lines__substring___axiom
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Commandhandler__execute__B_1__token1 as Commandhandler__execute__B_1__token1
  use Locker__is_locked___axiom as Locker__is_locked___axiom
  use Commandhandler__execute__B_1__B_2__r as Commandhandler__execute__B_1__B_2__r
  use Commandhandler__execute__result as Commandhandler__execute__result
  use Commandhandler__execute__result___axiom as Commandhandler__execute__result___axiom
  use Calculator__result as Calculator__result
  use Commandhandler__execute__B_1__B_2__a as Commandhandler__execute__B_1__B_2__a
  use Commandhandler__execute__B_1__B_2__b as Commandhandler__execute__B_1__B_2__b
  use Commandhandler__execute__B_1__B_2__success as Commandhandler__execute__B_1__B_2__success
  use Stack__pop2___axiom as Stack__pop2___axiom
  use Calculator__add___axiom as Calculator__add___axiom
  use Calculator__sub___axiom as Calculator__sub___axiom
  use Calculator__mul___axiom as Calculator__mul___axiom
  use Calculator__div___axiom as Calculator__div___axiom
  use Stack__push___axiom as Stack__push___axiom
  use Stack__push2___axiom as Stack__push2___axiom
  use Stringtointeger__from_string___axiom as Stringtointeger__from_string___axiom
  use Commandhandler__execute__B_1__B_3__token2 as Commandhandler__execute__B_1__B_3__token2
  use Commandhandler__execute__B_1__B_3__success as Commandhandler__execute__B_1__B_3__success
  use Commandhandler__execute__B_1__B_4__token2 as Commandhandler__execute__B_1__B_4__token2
  use Commandhandler__execute__B_1__B_4__token3 as Commandhandler__execute__B_1__B_4__token3
  use Commandhandler__execute__B_1__B_4__success as Commandhandler__execute__B_1__B_4__success
  use Commandhandler__execute__B_1__B_5__a as Commandhandler__execute__B_1__B_5__a
  use Commandhandler__execute__B_1__B_5__success as Commandhandler__execute__B_1__B_5__success
  use Stack__pop___axiom as Stack__pop___axiom
  use Commandhandler__execute__B_1__B_6__token2 as Commandhandler__execute__B_1__B_6__token2
  use Commandhandler__execute__B_1__B_6__a as Commandhandler__execute__B_1__B_6__a
  use Commandhandler__execute__B_1__B_6__success as Commandhandler__execute__B_1__B_6__success
  use Lockmemory__put___axiom as Lockmemory__put___axiom
  use Commandhandler__execute__B_1__B_7__token2 as Commandhandler__execute__B_1__B_7__token2
  use Commandhandler__execute__B_1__B_7__a as Commandhandler__execute__B_1__B_7__a
  use Commandhandler__execute__B_1__B_7__success as Commandhandler__execute__B_1__B_7__success
  use Lockmemory__get___axiom as Lockmemory__get___axiom
  use Commandhandler__execute__B_1__B_8__token2 as Commandhandler__execute__B_1__B_8__token2
  use Lockmemory__remove___axiom as Lockmemory__remove___axiom
  use Lockmemory__print___axiom as Lockmemory__print___axiom
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Commandhandler__execute__B_1__B_9__token2 as Commandhandler__execute__B_1__B_9__token2
  use Pin__from_string___axiom as Pin__from_string___axiom
  use Locker__reset_pwd___axiom as Locker__reset_pwd___axiom
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Commandhandler__execute__B_1__B_10__token2 as Commandhandler__execute__B_1__B_10__token2
  use Locker__try_unlock___axiom as Locker__try_unlock___axiom
  use Memorystore__location_index as Memorystore__location_index
  use Mystring_instance__lines__mystring___axiom as Mystring_instance__lines__mystring___axiom
  use Mystringtokeniser__tokenextent as Mystringtokeniser__tokenextent
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Mystringtokeniser__tokenarray as Mystringtokeniser__tokenarray
  use Commandhandler__execute__TTtSP1 as Commandhandler__execute__TTtSP1
  use Commandhandler__execute__TtS___axiom as Commandhandler__execute__TtS___axiom
  use Calculator__int32 as Calculator__int32
  use Calculator__int32__rep as Calculator__int32__rep
  use Commandhandler__execute__int32 as Commandhandler__execute__int32
  use Commandhandler__execute__int32___axiom as Commandhandler__execute__int32___axiom
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Commandhandler__execute__t__aggregate_def as Commandhandler__execute__t__aggregate_def
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Array__Int__Mystringtokeniser__tokenextent as Array__Int__Mystringtokeniser__tokenextent
  use Temp___String_Literal_414 as Temp___String_Literal_414
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_416 as Temp___String_Literal_416
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_418 as Temp___String_Literal_418
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_424 as Temp___String_Literal_424
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_428 as Temp___String_Literal_428
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_429 as Temp___String_Literal_429
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_440 as Temp___String_Literal_440
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_441 as Temp___String_Literal_441
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_452 as Temp___String_Literal_452
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_453 as Temp___String_Literal_453
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_462 as Temp___String_Literal_462
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_469 as Temp___String_Literal_469
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_470 as Temp___String_Literal_470
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_479 as Temp___String_Literal_479
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_484 as Temp___String_Literal_484
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_491 as Temp___String_Literal_491
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_497 as Temp___String_Literal_497
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_500 as Temp___String_Literal_500
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_502 as Temp___String_Literal_502
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_507 as Temp___String_Literal_507
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_509 as Temp___String_Literal_509
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_511 as Temp___String_Literal_511
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_514 as Temp___String_Literal_514
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_520 as Temp___String_Literal_520
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_525 as Temp___String_Literal_525
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_527 as Temp___String_Literal_527
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_529 as Temp___String_Literal_529
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_532 as Temp___String_Literal_532
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_538 as Temp___String_Literal_538
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_543 as Temp___String_Literal_543
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_545 as Temp___String_Literal_545
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_550 as Temp___String_Literal_550
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_552 as Temp___String_Literal_552
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_554 as Temp___String_Literal_554
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_557 as Temp___String_Literal_557
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_559 as Temp___String_Literal_559
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_564 as Temp___String_Literal_564
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_566 as Temp___String_Literal_566
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_568 as Temp___String_Literal_568
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_573 as Temp___String_Literal_573
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_576 as Temp___String_Literal_576
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_578 as Temp___String_Literal_578
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_583 as Temp___String_Literal_583
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_585 as Temp___String_Literal_585
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_587 as Temp___String_Literal_587
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_592 as Temp___String_Literal_592
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_595 as Temp___String_Literal_595
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_597 as Temp___String_Literal_597
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_602 as Temp___String_Literal_602
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_604 as Temp___String_Literal_604
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_609 as Temp___String_Literal_609
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_612 as Temp___String_Literal_612
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_614 as Temp___String_Literal_614
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_619 as Temp___String_Literal_619
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_621 as Temp___String_Literal_621
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_625 as Temp___String_Literal_625
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_626 as Temp___String_Literal_626
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_633 as Temp___String_Literal_633
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_635 as Temp___String_Literal_635
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_640 as Temp___String_Literal_640
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_642 as Temp___String_Literal_642
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_646 as Temp___String_Literal_646
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_649 as Temp___String_Literal_649
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_651 as Temp___String_Literal_651
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_656 as Temp___String_Literal_656
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_661 as Temp___String_Literal_661
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_666 as Temp___String_Literal_666
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_671 as Temp___String_Literal_671
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__natural___axiom as Standard__natural___axiom
  use Standard__positive___axiom as Standard__positive___axiom
  use Standard__character___axiom as Standard__character___axiom
  use Standard__string___axiom as Standard__string___axiom
  use Standard__integer___axiom as Standard__integer___axiom
  use Commandhandler__execute__t___axiom as Commandhandler__execute__t___axiom
  use Commandhandler__execute__t__aggregate_def___axiom as Commandhandler__execute__t__aggregate_def___axiom
  use Commandhandler__execute__numtokens___axiom as Commandhandler__execute__numtokens___axiom
  use Commandhandler__execute__int32___axiom as Commandhandler__execute__int32___axiom
  use Commandhandler__execute__result___axiom as Commandhandler__execute__result___axiom
  use Commandhandler__execute__B_1__token1___axiom as Commandhandler__execute__B_1__token1___axiom
  use Commandhandler__execute__B_1__B_2__r___axiom as Commandhandler__execute__B_1__B_2__r___axiom
  use Commandhandler__execute__B_1__B_2__a___axiom as Commandhandler__execute__B_1__B_2__a___axiom
  use Commandhandler__execute__B_1__B_2__b___axiom as Commandhandler__execute__B_1__B_2__b___axiom
  use Commandhandler__execute__B_1__B_2__success___axiom as Commandhandler__execute__B_1__B_2__success___axiom
  use Commandhandler__execute__B_1__B_3__token2___axiom as Commandhandler__execute__B_1__B_3__token2___axiom
  use Commandhandler__execute__B_1__B_3__success___axiom as Commandhandler__execute__B_1__B_3__success___axiom
  use Commandhandler__execute__B_1__B_4__token2___axiom as Commandhandler__execute__B_1__B_4__token2___axiom
  use Commandhandler__execute__B_1__B_4__token3___axiom as Commandhandler__execute__B_1__B_4__token3___axiom
  use Commandhandler__execute__B_1__B_4__success___axiom as Commandhandler__execute__B_1__B_4__success___axiom
  use Commandhandler__execute__B_1__B_5__a___axiom as Commandhandler__execute__B_1__B_5__a___axiom
  use Commandhandler__execute__B_1__B_5__success___axiom as Commandhandler__execute__B_1__B_5__success___axiom
  use Commandhandler__execute__B_1__B_6__token2___axiom as Commandhandler__execute__B_1__B_6__token2___axiom
  use Commandhandler__execute__B_1__B_6__a___axiom as Commandhandler__execute__B_1__B_6__a___axiom
  use Commandhandler__execute__B_1__B_6__success___axiom as Commandhandler__execute__B_1__B_6__success___axiom
  use Commandhandler__execute__B_1__B_7__token2___axiom as Commandhandler__execute__B_1__B_7__token2___axiom
  use Commandhandler__execute__B_1__B_7__a___axiom as Commandhandler__execute__B_1__B_7__a___axiom
  use Commandhandler__execute__B_1__B_7__success___axiom as Commandhandler__execute__B_1__B_7__success___axiom
  use Commandhandler__execute__B_1__B_8__token2___axiom as Commandhandler__execute__B_1__B_8__token2___axiom
  use Commandhandler__execute__B_1__B_9__token2___axiom as Commandhandler__execute__B_1__B_9__token2___axiom
  use Commandhandler__execute__B_1__B_10__token2___axiom as Commandhandler__execute__B_1__B_10__token2___axiom
  use Commandhandler__execute__l___axiom as Commandhandler__execute__l___axiom
  use Commandhandler__execute__sk___axiom as Commandhandler__execute__sk___axiom
  use Commandhandler__execute__d___axiom as Commandhandler__execute__d___axiom
  use Commandhandler__execute__s___axiom as Commandhandler__execute__s___axiom
  use Locker__try_unlock___axiom as Locker__try_unlock___axiom
  use Locker__reset_pwd___axiom as Locker__reset_pwd___axiom
  use Locker__is_locked___axiom as Locker__is_locked___axiom
  use Locker__locker___axiom as Locker__locker___axiom
  use Pin__from_string___axiom as Pin__from_string___axiom
  use Pin__pin___axiom as Pin__pin___axiom
  use Stack__int32___axiom as Stack__int32___axiom
  use Stack__stack_array___axiom as Stack__stack_array___axiom
  use Stack__push___axiom as Stack__push___axiom
  use Stack__push2___axiom as Stack__push2___axiom
  use Stack__pop___axiom as Stack__pop___axiom
  use Stack__pop2___axiom as Stack__pop2___axiom
  use Stack__stack_instance___axiom as Stack__stack_instance___axiom
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__line_length__2___axiom as Ada___ada__text_io__line_length__2___axiom
  use Ada___ada__text_io__page_length__2___axiom as Ada___ada__text_io__page_length__2___axiom
  use Ada___ada__text_io__put_line__2___axiom as Ada___ada__text_io__put_line__2___axiom
  use Calculator__int32___axiom as Calculator__int32___axiom
  use Calculator__result___axiom as Calculator__result___axiom
  use Calculator__add___axiom as Calculator__add___axiom
  use Calculator__sub___axiom as Calculator__sub___axiom
  use Calculator__mul___axiom as Calculator__mul___axiom
  use Calculator__div___axiom as Calculator__div___axiom
  use Lockmemory__get___axiom as Lockmemory__get___axiom
  use Lockmemory__put___axiom as Lockmemory__put___axiom
  use Lockmemory__remove___axiom as Lockmemory__remove___axiom
  use Lockmemory__print___axiom as Lockmemory__print___axiom
  use Memorystore__location_index___axiom as Memorystore__location_index___axiom
  use Memorystore__int32___axiom as Memorystore__int32___axiom
  use Memorystore__cell_opt___axiom as Memorystore__cell_opt___axiom
  use Memorystore__mem_array___axiom as Memorystore__mem_array___axiom
  use Memorystore__database___axiom as Memorystore__database___axiom
  use Mystringtokeniser__tokenextent___axiom as Mystringtokeniser__tokenextent___axiom
  use Mystringtokeniser__tokenarray___axiom as Mystringtokeniser__tokenarray___axiom
  use Mystringtokeniser__tokenise___axiom as Mystringtokeniser__tokenise___axiom
  use Stringtointeger__from_string___axiom as Stringtointeger__from_string___axiom
  use Mystring_instance__lines__mystringstr___axiom as Mystring_instance__lines__mystringstr___axiom
  use Mystring_instance__lines__mystring___axiom as Mystring_instance__lines__mystring___axiom
  use Mystring_instance__lines__to_string___axiom as Mystring_instance__lines__to_string___axiom
  use Mystring_instance__lines__length___axiom as Mystring_instance__lines__length___axiom
  use Mystring_instance__lines__substring___axiom as Mystring_instance__lines__substring___axiom
  use Mystring_instance__lines__mystring__T13s___axiom as Mystring_instance__lines__mystring__T13s___axiom
  use Commandhandler__execute__TtS___axiom as Commandhandler__execute__TtS___axiom
  use Commandhandler__execute__TTtSP1___axiom as Commandhandler__execute__TTtSP1___axiom
  
  let def (__void_param : unit)
    requires { [#"commandhandler.ads" 9 0 0] true }
  = [@vc:divergent]
    (([@GNAT-comment:Assume dynamic invariants of inputs of the subprogram commandhandler.ads:9]
      ());
     ([#"commandhandler.ads" 9 0 0]
      assume {
        [#"commandhandler.ads" 9 0 0]
        (((((Locker__locker___axiom.dynamic_invariant
               { Locker__locker.__split_fields =
                   (Locker__locker.__split_fields__content
                       Commandhandler__execute__l.l__split_fields) })
              True)
             False)
            True)
           True) });
     ([#"commandhandler.ads" 9 0 0]
      assume {
        [#"commandhandler.ads" 9 0 0]
        (((((Stack__stack_instance___axiom.dynamic_invariant
               { Stack__stack_instance.__split_fields =
                   (Stack__stack_instance.__split_fields__content
                       Commandhandler__execute__sk.sk__split_fields) })
              True)
             False)
            True)
           True) });
     ([#"commandhandler.ads" 9 0 0]
      assume {
        [#"commandhandler.ads" 9 0 0]
        (((((Memorystore__database___axiom.dynamic_invariant
               { Memorystore__database.__split_fields =
                   (Memorystore__database.__split_fields__content
                       Commandhandler__execute__d.d__split_fields) })
              True)
             False)
            True)
           True) });
     ([#"commandhandler.ads" 9 0 0]
      assume {
        [#"commandhandler.ads" 9 0 0]
        (((((Mystring_instance__lines__mystring___axiom.dynamic_invariant
               Commandhandler__execute__s.s)
              True)
             False)
            True)
           True) });
     ([@GNAT-comment:Assume moved pointers in outputs of the subprogram commandhandler.ads:9]
      ());
     ([@GNAT-comment:Check for RTE in the Pre of the subprogram commandhandler.ads:9]
      ());
     ([#"commandhandler.ads" 9 0 0] ());
     ([@GNAT-comment:Assume Pre of the subprogram commandhandler.ads:9] ());
     ([#"commandhandler.ads" 9 0 0]
      (try
         ([#"commandhandler.adb" 17 0 0] ());
         ([#"commandhandler.adb" 17 0 0]
          (([#"commandhandler.adb" 17 0 0]
            (Commandhandler__execute__t.t.Array__Int__Mystringtokeniser__tokenextent.map__content <-
               (let temp___408 =
                  Commandhandler__execute__t__aggregate_def.commandhandler__execute__t__aggregate_def
                    { Mystringtokeniser__tokenextent.__split_fields =
                        { Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start =
                            (1 : Standard__positive.positive) ;
                          Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length =
                            (0 : Standard__natural.natural) } } in
                temp___408)));
           ([#"commandhandler.adb" 17 0 0]
            assume {
              [#"commandhandler.adb" 17 0 0]
              (((((Commandhandler__execute__TtS___axiom.dynamic_invariant
                     (Commandhandler__execute__t.t.Array__Int__Mystringtokeniser__tokenextent.map__content))
                    True)
                   False)
                  True)
                 True) })));
         ([#"commandhandler.adb" 18 0 0]
          (([#"commandhandler.adb" 18 0 0]
            assume {
              [#"commandhandler.adb" 18 0 0]
              ((Standard__natural___axiom.default_initial_assumption
                  (Commandhandler__execute__numtokens.numtokens.int__content))
                 False) });
           ([#"commandhandler.adb" 18 0 0]
            assume {
              [#"commandhandler.adb" 18 0 0]
              (((((Standard__natural___axiom.dynamic_invariant
                     (Commandhandler__execute__numtokens.numtokens.int__content))
                    False)
                   False)
                  True)
                 True) })));
         ([#"commandhandler.adb" 19 0 0] ());
         ([#"commandhandler.adb" 20 0 0] ());
         ([#"commandhandler.adb" 29 0 0] ());
         ([@GP_Sloc:commandhandler.adb:22:39]
          [#"commandhandler.adb" 22 0 0] ());
         ([@GP_Sloc:commandhandler.adb:22:54]
          [#"commandhandler.adb" 22 0 0] ());
         ([@GP_Sloc:commandhandler.adb:22:57]
          [#"commandhandler.adb" 22 0 0] ());
         ([@GP_Sloc:commandhandler.adb:22:24]
          [#"commandhandler.adb" 22 0 0] ());
         ([@GP_Sloc:commandhandler.adb:22:24]
          [#"commandhandler.adb" 22 0 0]
          (let temp___compl_410 =
             let temp___409 =
               Commandhandler__execute__t.t.Array__Int__Mystringtokeniser__tokenextent.map__content in
             ((Mystringtokeniser__tokenarray.of_array temp___409)
                Commandhandler__execute__TTtSP1.first)
               Commandhandler__execute__TTtSP1.last in
           [#"commandhandler.adb" 22 0 0]
           (let tokens =
              { Array__Int__Mystringtokeniser__tokenextent.map__content =
                  (Mystringtokeniser__tokenarray.to_array temp___compl_410) } in
            let temp___compl_413 =
              Commandhandler__execute__numtokens.numtokens.int__content in
            ([#"commandhandler.adb" 22 0 0] (val _f : unit in
                                             _f));
            ([#"commandhandler.adb" 22 0 0]
             [@comment:      MyStringTokeniser.Tokenise(Lines.To_String(S), T, NumTokens);                        ^ commandhandler.adb:22:24:VC_PRECONDITION]
             [@GP_Reason:VC_PRECONDITION]
             [@vc:annotation]
             [@GP_Id:0]
             [@GP_Shape:call_tokenise]
             [@GP_Sloc:commandhandler.adb:22:24]
             (((((Mystringtokeniser__tokenise___axiom.tokenise
                    (Mystring_instance__lines__to_string___axiom.to_string
                       Commandhandler__execute__s.s))
                   tokens)
                  (Standard__integer__rep.of_rep
                     (Mystringtokeniser__tokenarray.first temp___compl_410)))
                 (Standard__integer__rep.of_rep
                    (Mystringtokeniser__tokenarray.last temp___compl_410)))
                Commandhandler__execute__numtokens.numtokens));
            (Commandhandler__execute__t.t.Array__Int__Mystringtokeniser__tokenextent.map__content <-
               (let temp___411 =
                  ((Mystringtokeniser__tokenarray.of_array
                      (tokens.Array__Int__Mystringtokeniser__tokenextent.map__content))
                     (Mystringtokeniser__tokenarray.first temp___compl_410))
                    (Mystringtokeniser__tokenarray.last temp___compl_410) in
                let temp___412 =
                  ((Array__Int__Mystringtokeniser__tokenextent.slide
                      (Mystringtokeniser__tokenarray.to_array temp___411))
                     (Mystringtokeniser__tokenarray.first temp___411))
                    Commandhandler__execute__TTtSP1.first in
                temp___412)))));
         ([@GP_Sloc:commandhandler.adb:24:10]
          [#"commandhandler.adb" 24 0 0] ());
         ([@GP_Sloc:commandhandler.adb:24:27]
          [#"commandhandler.adb" 24 0 0] ());
         ([@GP_Sloc:commandhandler.adb:24:7]
          [#"commandhandler.adb" 24 0 0]
          (if (([#"commandhandler.adb" 24 0 0]
                [#"commandhandler.adb" 24 0 0]
                (([@branch_id=917] Main.spark__branch).bool__content <-
                   ((Boolean.orb
                       ((Commandhandler__execute__numtokens.numtokens.int__content)
                          > (3 : int)))
                      ((Commandhandler__execute__numtokens.numtokens.int__content)
                         < (1 : int)))));
               (([@branch_id=917] Main.spark__branch).bool__content)) then
             (([@GP_Sloc:commandhandler.adb:25:10]
               [#"commandhandler.adb" 25 0 0] ());
              ([@GP_Sloc:commandhandler.adb:25:10]
               [#"commandhandler.adb" 25 0 0]
               (([#"commandhandler.adb" 25 0 0] (val _f : unit in
                                                 _f));
                (Ada___ada__text_io__put_line__2___axiom.put_line
                   (let temp___415 =
                      Temp___String_Literal_414.temp___String_Literal_414 () in
                    ((Standard__string.of_array temp___415) (1 : int))
                      (28 : int)))));
              ([@GP_Sloc:commandhandler.adb:26:10]
               [#"commandhandler.adb" 26 0 0]
               [#"commandhandler.adb" 26 0 0] ((raise Return__exc) : unit)))
           else ()));
         ([@GP_Sloc:commandhandler.adb:29:7]
          [#"commandhandler.adb" 29 0 0]
          (([#"commandhandler.adb" 30 0 0] ());
           ([#"commandhandler.adb" 30 0 0] ());
           ([#"commandhandler.adb" 30 0 0]
            ((let commandhandler__execute__B_1__token1__assume =
                Mystring_instance__lines__to_string___axiom.to_string
                  ([#"commandhandler.adb" 30 0 0]
                   [@GP_Id:57]
                   [@GP_Reason:VC_PRECONDITION]
                   [@vc:annotation]
                   [@GP_Sloc:commandhandler.adb:30:50]
                   [@comment:         Token1 : String := Lines.To_String(Lines.Substring(S, T(1).Start, T(1).Start + T(1).Length - 1));                                                  ^ commandhandler.adb:30:50:VC_PRECONDITION]
                   [@GP_Shape:B_1_declblk__token1_decl__call_to_string__call_substring]
                   (((Mystring_instance__lines__substring___axiom.substring
                        Commandhandler__execute__s.s)
                       (Standard__positive__rep.to_rep
                          ((Mystringtokeniser__tokenextent.__split_fields
                               ((Array__Int__Mystringtokeniser__tokenextent.get
                                   (Commandhandler__execute__t.t.Array__Int__Mystringtokeniser__tokenextent.map__content))
                                  (1 : int))).Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)))
                      ([#"commandhandler.adb" 30 0 0]
                       [@GP_Shape:B_1_declblk__token1_decl__call_to_string__call_substring__sub]
                       [@GP_Id:56]
                       [@comment:         Token1 : String := Lines.To_String(Lines.Substring(S, T(1).Start, T(1).Start + T(1).Length - 1));                                                                                                     ^ commandhandler.adb:30:101:VC_RANGE_CHECK]
                       [@vc:annotation]
                       [@GP_Reason:VC_RANGE_CHECK]
                       [@GP_Sloc:commandhandler.adb:30:101]
                       (Standard__positive.range_check_
                          (([#"commandhandler.adb" 30 0 0]
                            [@comment:         Token1 : String := Lines.To_String(Lines.Substring(S, T(1).Start, T(1).Start + T(1).Length - 1));                                                                                       ^ commandhandler.adb:30:87:VC_OVERFLOW_CHECK]
                            [@vc:annotation]
                            [@GP_Reason:VC_OVERFLOW_CHECK]
                            [@GP_Shape:B_1_declblk__token1_decl__call_to_string__call_substring__sub__add]
                            [@GP_Sloc:commandhandler.adb:30:87]
                            [@GP_Id:55]
                            (Standard__integer.range_check_
                               ((Standard__positive__rep.to_rep
                                   ((Mystringtokeniser__tokenextent.__split_fields
                                        ((Array__Int__Mystringtokeniser__tokenextent.get
                                            (Commandhandler__execute__t.t.
                                               Array__Int__Mystringtokeniser__tokenextent.map__content))
                                           (1 : int))).Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                  + (Standard__natural__rep.to_rep
                                       ((Mystringtokeniser__tokenextent.__split_fields
                                            ((Array__Int__Mystringtokeniser__tokenextent.get
                                                (Commandhandler__execute__t.t.
                                                   Array__Int__Mystringtokeniser__tokenextent.map__content))
                                               (1 : int))).Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                             - (1 : int)))))) in
              (Commandhandler__execute__B_1__token1.token1.Array__Int__Standard__character.map__content <-
                 (Standard__string.to_array
                    commandhandler__execute__B_1__token1__assume));
              assume {
                ((Standard__integer__rep.to_rep
                    Commandhandler__execute__B_1__token1.token1__first)
                   = (Standard__string.first
                        commandhandler__execute__B_1__token1__assume)) };
              assume {
                ((Standard__integer__rep.to_rep
                    Commandhandler__execute__B_1__token1.token1__last)
                   = (Standard__string.last
                        commandhandler__execute__B_1__token1__assume)) });
             assume {
               ((((Standard__string___axiom.dynamic_invariant
                     (((Standard__string.of_array
                          (Commandhandler__execute__B_1__token1.token1.
                             Array__Int__Standard__character.map__content))
                         (Standard__integer__rep.to_rep
                            Commandhandler__execute__B_1__token1.token1__first))
                        (Standard__integer__rep.to_rep
                           Commandhandler__execute__B_1__token1.token1__last)))
                    True)
                   False)
                  True)
                 True }));
           ([#"commandhandler.adb" 43 0 0] ());
           ([#"commandhandler.adb" 86 0 0] ());
           ([#"commandhandler.adb" 110 0 0] ());
           ([#"commandhandler.adb" 136 0 0] ());
           ([#"commandhandler.adb" 159 0 0] ());
           ([#"commandhandler.adb" 189 0 0] ());
           ([#"commandhandler.adb" 219 0 0] ());
           ([#"commandhandler.adb" 250 0 0] ());
           ([#"commandhandler.adb" 272 0 0] ());
           ([@GP_Sloc:commandhandler.adb:32:13]
            [#"commandhandler.adb" 32 0 0] ());
           ([@GP_Sloc:commandhandler.adb:32:10]
            [#"commandhandler.adb" 32 0 0]
            (if (([#"commandhandler.adb" 32 0 0]
                  [#"commandhandler.adb" 32 0 0]
                  (([@branch_id=962] Main.spark__branch).bool__content <-
                     ((((let temp___660 =
                           Temp___String_Literal_656.temp___String_Literal_656
                             () in
                         let temp___658 =
                           ((Standard__string.of_array
                               (Commandhandler__execute__B_1__token1.token1.
                                  Array__Int__Standard__character.map__content))
                              (Standard__integer__rep.to_rep
                                 Commandhandler__execute__B_1__token1.token1__first))
                             (Standard__integer__rep.to_rep
                                Commandhandler__execute__B_1__token1.token1__last) in
                         (((((Array__Int__Standard__character.bool_eq
                                (Standard__string.to_array temp___658))
                               (Standard__string.first temp___658))
                              (Standard__string.last temp___658))
                             temp___660)
                            (1 : int))
                           (1 : int))
                         ||
                          (let temp___665 =
                             Temp___String_Literal_661.temp___String_Literal_661
                               () in
                           let temp___663 =
                             ((Standard__string.of_array
                                 (Commandhandler__execute__B_1__token1.token1.
                                    Array__Int__Standard__character.map__content))
                                (Standard__integer__rep.to_rep
                                   Commandhandler__execute__B_1__token1.token1__first))
                               (Standard__integer__rep.to_rep
                                  Commandhandler__execute__B_1__token1.token1__last) in
                           (((((Array__Int__Standard__character.bool_eq
                                  (Standard__string.to_array temp___663))
                                 (Standard__string.first temp___663))
                                (Standard__string.last temp___663))
                               temp___665)
                              (1 : int))
                             (1 : int)))
                        ||
                         (let temp___670 =
                            Temp___String_Literal_666.temp___String_Literal_666
                              () in
                          let temp___668 =
                            ((Standard__string.of_array
                                (Commandhandler__execute__B_1__token1.token1.
                                   Array__Int__Standard__character.map__content))
                               (Standard__integer__rep.to_rep
                                  Commandhandler__execute__B_1__token1.token1__first))
                              (Standard__integer__rep.to_rep
                                 Commandhandler__execute__B_1__token1.token1__last) in
                          (((((Array__Int__Standard__character.bool_eq
                                 (Standard__string.to_array temp___668))
                                (Standard__string.first temp___668))
                               (Standard__string.last temp___668))
                              temp___670)
                             (1 : int))
                            (1 : int)))
                       ||
                        (let temp___675 =
                           Temp___String_Literal_671.temp___String_Literal_671
                             () in
                         let temp___673 =
                           ((Standard__string.of_array
                               (Commandhandler__execute__B_1__token1.token1.
                                  Array__Int__Standard__character.map__content))
                              (Standard__integer__rep.to_rep
                                 Commandhandler__execute__B_1__token1.token1__first))
                             (Standard__integer__rep.to_rep
                                Commandhandler__execute__B_1__token1.token1__last) in
                         (((((Array__Int__Standard__character.bool_eq
                                (Standard__string.to_array temp___673))
                               (Standard__string.first temp___673))
                              (Standard__string.last temp___673))
                             temp___675)
                            (1 : int))
                           (1 : int)))));
                 (([@branch_id=962] Main.spark__branch).bool__content)) then
               (([@GP_Sloc:commandhandler.adb:33:22]
                 [#"commandhandler.adb" 33 0 0] ());
                ([@GP_Sloc:commandhandler.adb:33:13]
                 [#"commandhandler.adb" 33 0 0]
                 (if (([#"commandhandler.adb" 33 0 0]
                       [#"commandhandler.adb" 33 0 0]
                       (([@branch_id=978] Main.spark__branch).bool__content <-
                          (Locker__is_locked___axiom.is_locked
                             { Locker__locker.__split_fields =
                                 (Locker__locker.__split_fields__content
                                     Commandhandler__execute__l.l__split_fields) })));
                      (([@branch_id=978] Main.spark__branch).bool__content)) then
                    (([@GP_Sloc:commandhandler.adb:34:16]
                      [#"commandhandler.adb" 34 0 0] ());
                     ([@GP_Sloc:commandhandler.adb:34:16]
                      [#"commandhandler.adb" 34 0 0]
                      (([#"commandhandler.adb" 34 0 0] (val _f : unit in
                                                        _f));
                       (Ada___ada__text_io__put_line__2___axiom.put_line
                          (let temp___417 =
                             Temp___String_Literal_416.temp___String_Literal_416
                               () in
                           ((Standard__string.of_array temp___417) (1 : int))
                             (7 : int)))));
                     ([@GP_Sloc:commandhandler.adb:35:16]
                      [#"commandhandler.adb" 35 0 0]
                      [#"commandhandler.adb" 35 0 0]
                      ((raise Return__exc) : unit)))
                  else ()));
                ([@GP_Sloc:commandhandler.adb:38:16]
                 [#"commandhandler.adb" 38 0 0] ());
                ([@GP_Sloc:commandhandler.adb:38:13]
                 [#"commandhandler.adb" 38 0 0]
                 (if (([#"commandhandler.adb" 38 0 0]
                       [#"commandhandler.adb" 38 0 0]
                       (([@branch_id=988] Main.spark__branch).bool__content <-
                          ((Commandhandler__execute__numtokens.numtokens.int__content)
                             <> (1 : int))));
                      (([@branch_id=988] Main.spark__branch).bool__content)) then
                    (([@GP_Sloc:commandhandler.adb:39:16]
                      [#"commandhandler.adb" 39 0 0] ());
                     ([@GP_Sloc:commandhandler.adb:39:16]
                      [#"commandhandler.adb" 39 0 0]
                      (([#"commandhandler.adb" 39 0 0] (val _f : unit in
                                                        _f));
                       (Ada___ada__text_io__put_line__2___axiom.put_line
                          (let temp___419 =
                             Temp___String_Literal_418.temp___String_Literal_418
                               () in
                           ((Standard__string.of_array temp___419) (1 : int))
                             (31 : int)))));
                     ([@GP_Sloc:commandhandler.adb:40:16]
                      [#"commandhandler.adb" 40 0 0]
                      [#"commandhandler.adb" 40 0 0]
                      ((raise Return__exc) : unit)))
                  else ()));
                ([@GP_Sloc:commandhandler.adb:43:13]
                 [#"commandhandler.adb" 43 0 0]
                 (([#"commandhandler.adb" 44 0 0]
                   (([#"commandhandler.adb" 44 0 0] ());
                    ([#"commandhandler.adb" 44 0 0]
                     assume {
                       [#"commandhandler.adb" 44 0 0]
                       ((Commandhandler__execute__result___axiom.default_initial_assumption
                           { Commandhandler__execute__result.__split_fields =
                               (Commandhandler__execute__result.__split_fields__content
                                   Commandhandler__execute__B_1__B_2__r.r__split_fields) })
                          False) });
                    ([#"commandhandler.adb" 44 0 0]
                     assume {
                       [#"commandhandler.adb" 44 0 0]
                       (((((Commandhandler__execute__result___axiom.dynamic_invariant
                              { Commandhandler__execute__result.__split_fields =
                                  (Commandhandler__execute__result.__split_fields__content
                                      Commandhandler__execute__B_1__B_2__r.r__split_fields) })
                             False)
                            False)
                           True)
                          True) })));
                  ([#"commandhandler.adb" 45 0 0]
                   (([#"commandhandler.adb" 45 0 0]
                     (Commandhandler__execute__B_1__B_2__a.a.int__content <-
                        (0 : int)));
                    ([#"commandhandler.adb" 45 0 0]
                     assume {
                       [#"commandhandler.adb" 45 0 0]
                       (((((Commandhandler__execute__int32___axiom.dynamic_invariant
                              (Commandhandler__execute__B_1__B_2__a.a.int__content))
                             True)
                            False)
                           True)
                          True) })));
                  ([#"commandhandler.adb" 45 0 0]
                   (([#"commandhandler.adb" 45 0 0]
                     (Commandhandler__execute__B_1__B_2__b.b.int__content <-
                        (0 : int)));
                    ([#"commandhandler.adb" 45 0 0]
                     assume {
                       [#"commandhandler.adb" 45 0 0]
                       (((((Commandhandler__execute__int32___axiom.dynamic_invariant
                              (Commandhandler__execute__B_1__B_2__b.b.int__content))
                             True)
                            False)
                           True)
                          True) })));
                  ([#"commandhandler.adb" 46 0 0]
                   [#"commandhandler.adb" 46 0 0]
                   (Commandhandler__execute__B_1__B_2__success.success.bool__content <-
                      (Boolean.of_int (0 : int))));
                  ([@GP_Sloc:commandhandler.adb:48:34]
                   [#"commandhandler.adb" 48 0 0] ());
                  ([@GP_Sloc:commandhandler.adb:48:37]
                   [#"commandhandler.adb" 48 0 0] ());
                  ([@GP_Sloc:commandhandler.adb:48:40]
                   [#"commandhandler.adb" 48 0 0] ());
                  ([@GP_Sloc:commandhandler.adb:48:21]
                   [#"commandhandler.adb" 48 0 0] ());
                  ([@GP_Sloc:commandhandler.adb:48:21]
                   [#"commandhandler.adb" 48 0 0]
                   (let temp___compl_420 =
                      { Stack__stack_instance.__split_fields =
                          (Stack__stack_instance.__split_fields__content
                              Commandhandler__execute__sk.sk__split_fields) } in
                    let temp___compl_421 =
                      Commandhandler__execute__B_1__B_2__a.a.int__content in
                    [#"commandhandler.adb" 48 0 0]
                    (let a = { int__content = temp___compl_421 } in
                     let temp___compl_422 =
                       Commandhandler__execute__B_1__B_2__b.b.int__content in
                     [#"commandhandler.adb" 48 0 0]
                     (let b = { int__content = temp___compl_422 } in
                      let temp___compl_423 =
                        Commandhandler__execute__B_1__B_2__success.success.bool__content in
                      ([#"commandhandler.adb" 48 0 0] (val _f : unit in
                                                       _f));
                      (((((Stack__pop2___axiom.pop2
                             { Locker__locker.__split_fields =
                                 (Locker__locker.__split_fields__content
                                     Commandhandler__execute__l.l__split_fields) })
                            Commandhandler__execute__sk.sk__split_fields)
                           a)
                          b)
                         Commandhandler__execute__B_1__B_2__success.success);
                      ([#"commandhandler.adb" 48 0 0]
                       (Commandhandler__execute__B_1__B_2__a.a.int__content <-
                          (a.int__content)));
                      ([#"commandhandler.adb" 48 0 0]
                       (Commandhandler__execute__B_1__B_2__b.b.int__content <-
                          (b.int__content)))))));
                  ([@GP_Sloc:commandhandler.adb:49:23]
                   [#"commandhandler.adb" 49 0 0] ());
                  ([@GP_Sloc:commandhandler.adb:49:16]
                   [#"commandhandler.adb" 49 0 0]
                   (if (([#"commandhandler.adb" 49 0 0]
                         [#"commandhandler.adb" 49 0 0]
                         (([@branch_id=1024] Main.spark__branch).bool__content <-
                            (not (Commandhandler__execute__B_1__B_2__success.success.bool__content))));
                        (([@branch_id=1024] Main.spark__branch).bool__content)) then
                      (([@GP_Sloc:commandhandler.adb:50:19]
                        [#"commandhandler.adb" 50 0 0] ());
                       ([@GP_Sloc:commandhandler.adb:50:19]
                        [#"commandhandler.adb" 50 0 0]
                        (([#"commandhandler.adb" 50 0 0]
                          (val _f : unit in
                           _f));
                         (Ada___ada__text_io__put_line__2___axiom.put_line
                            (let temp___425 =
                               Temp___String_Literal_424.temp___String_Literal_424
                                 () in
                             ((Standard__string.of_array temp___425)
                                (1 : int))
                               (24 : int))))))
                    else
                      (([@GP_Sloc:commandhandler.adb:52:22]
                        [#"commandhandler.adb" 52 0 0] ());
                       ([@GP_Sloc:commandhandler.adb:52:19]
                        [#"commandhandler.adb" 52 0 0]
                        (if (([#"commandhandler.adb" 52 0 0]
                              [#"commandhandler.adb" 52 0 0]
                              (([@branch_id=1030] Main.spark__branch).bool__content <-
                                 (let temp___488 =
                                    Temp___String_Literal_484.temp___String_Literal_484
                                      () in
                                  let temp___486 =
                                    ((Standard__string.of_array
                                        (Commandhandler__execute__B_1__token1.token1.
                                           Array__Int__Standard__character.map__content))
                                       (Standard__integer__rep.to_rep
                                          Commandhandler__execute__B_1__token1.token1__first))
                                      (Standard__integer__rep.to_rep
                                         Commandhandler__execute__B_1__token1.token1__last) in
                                  (((((Array__Int__Standard__character.bool_eq
                                         (Standard__string.to_array
                                            temp___486))
                                        (Standard__string.first temp___486))
                                       (Standard__string.last temp___486))
                                      temp___488)
                                     (1 : int))
                                    (1 : int))));
                             (([@branch_id=1030] Main.spark__branch).bool__content)) then
                           (([@GP_Sloc:commandhandler.adb:53:22]
                             [#"commandhandler.adb" 53 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:53:45]
                             [#"commandhandler.adb" 53 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:53:48]
                             [#"commandhandler.adb" 53 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:53:37]
                             [#"commandhandler.adb" 53 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:53:24]
                             [#"commandhandler.adb" 53 0 0]
                             (let temp___427 =
                                ((Calculator__add___axiom.add
                                    { Locker__locker.__split_fields =
                                        (Locker__locker.__split_fields__content
                                            Commandhandler__execute__l.l__split_fields) })
                                   (Commandhandler__execute__B_1__B_2__a.a.int__content))
                                  (Commandhandler__execute__B_1__B_2__b.b.int__content) in
                              [#"commandhandler.adb" 53 0 0]
                              (Commandhandler__execute__B_1__B_2__r.r__split_fields.
                                 Commandhandler__execute__result.__split_fields__content <-
                                 (Commandhandler__execute__result.__split_fields
                                     temp___427))));
                            ([@GP_Sloc:commandhandler.adb:54:22]
                             [#"commandhandler.adb" 54 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:54:22]
                             [#"commandhandler.adb" 54 0 0]
                             (([#"commandhandler.adb" 54 0 0]
                               (val _f : unit in
                                _f));
                              (Ada___ada__text_io__put_line__2___axiom.put_line
                                 (let temp___437 =
                                    (Standard_String__Img.to_string
                                       (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                          (Calculator__int32__rep.to_rep
                                             ((Commandhandler__execute__result.__split_fields
                                                  { Commandhandler__execute__result.__split_fields =
                                                      (Commandhandler__execute__result.__split_fields__content
                                                          Commandhandler__execute__B_1__B_2__r.r__split_fields) }).
                                                Commandhandler__execute__result.rec__calculator__result__value))))
                                      (12 : int) in
                                  let temp___436 =
                                    let temp___435 =
                                      Temp___String_Literal_428.temp___String_Literal_428
                                        () in
                                    let temp___434 =
                                      let temp___433 =
                                        (Standard_String__Img.to_string
                                           (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                              (Commandhandler__execute__B_1__B_2__b.b.int__content)))
                                          (12 : int) in
                                      let temp___432 =
                                        let temp___431 =
                                          Temp___String_Literal_429.temp___String_Literal_429
                                            () in
                                        let temp___430 =
                                          (Standard_String__Img.to_string
                                             (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                (Commandhandler__execute__B_1__B_2__a.a.int__content)))
                                            (12 : int) in
                                        if ((Standard__string.length
                                               temp___430)
                                              = (0 : int)) then
                                          (((Standard__string.of_array
                                               temp___431)
                                              (1 : int))
                                             (3 : int))
                                        else
                                          (((Standard__string.of_array
                                               ((((((Array__Int__Standard__character__Concat.concat
                                                       (Standard__string.to_array
                                                          temp___430))
                                                      (Standard__string.first
                                                         temp___430))
                                                     (Standard__string.last
                                                        temp___430))
                                                    temp___431)
                                                   (1 : int))
                                                  (3 : int)))
                                              (Standard__string.first
                                                 temp___430))
                                             ([#"commandhandler.adb" 54 0 0]
                                              [@vc:annotation]
                                              [@GP_Sloc:commandhandler.adb:54:46]
                                              [@GP_Reason:VC_RANGE_CHECK]
                                              [@comment:                     Put_Line(Int32'Image(A) & " + " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                              ^ commandhandler.adb:54:46:VC_RANGE_CHECK]
                                              [@GP_Id:1]
                                              [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat__concat]
                                              (Standard__positive.range_check_
                                                 (((Standard__string.first
                                                      temp___430)
                                                     + (((Integer.length
                                                            (Standard__string.first
                                                               temp___430))
                                                           (Standard__string.last
                                                              temp___430))
                                                          + ((Integer.length
                                                                (1 : int))
                                                               (3 : int))))
                                                    - (1 : int))))) in
                                      if ((Standard__string.length temp___432)
                                            = (0 : int)) then
                                        (((Standard__string.of_array
                                             (Standard__string.to_array
                                                temp___433))
                                            (Standard__string.first
                                               temp___433))
                                           (Standard__string.last temp___433))
                                      else
                                        (((Standard__string.of_array
                                             ((((((Array__Int__Standard__character__Concat.concat
                                                     (Standard__string.to_array
                                                        temp___432))
                                                    (Standard__string.first
                                                       temp___432))
                                                   (Standard__string.last
                                                      temp___432))
                                                  (Standard__string.to_array
                                                     temp___433))
                                                 (Standard__string.first
                                                    temp___433))
                                                (Standard__string.last
                                                   temp___433)))
                                            (Standard__string.first
                                               temp___432))
                                           ([#"commandhandler.adb" 54 0 0]
                                            [@GP_Sloc:commandhandler.adb:54:54]
                                            [@comment:                     Put_Line(Int32'Image(A) & " + " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                      ^ commandhandler.adb:54:54:VC_RANGE_CHECK]
                                            [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat]
                                            [@vc:annotation]
                                            [@GP_Reason:VC_RANGE_CHECK]
                                            [@GP_Id:2]
                                            (Standard__positive.range_check_
                                               (((Standard__string.first
                                                    temp___432)
                                                   + (((Integer.length
                                                          (Standard__string.first
                                                             temp___432))
                                                         (Standard__string.last
                                                            temp___432))
                                                        + ((Integer.length
                                                              (Standard__string.first
                                                                 temp___433))
                                                             (Standard__string.last
                                                                temp___433))))
                                                  - (1 : int))))) in
                                    if ((Standard__string.length temp___434)
                                          = (0 : int)) then
                                      (((Standard__string.of_array temp___435)
                                          (1 : int))
                                         (3 : int))
                                    else
                                      (((Standard__string.of_array
                                           ((((((Array__Int__Standard__character__Concat.concat
                                                   (Standard__string.to_array
                                                      temp___434))
                                                  (Standard__string.first
                                                     temp___434))
                                                 (Standard__string.last
                                                    temp___434))
                                                temp___435)
                                               (1 : int))
                                              (3 : int)))
                                          (Standard__string.first temp___434))
                                         ([#"commandhandler.adb" 54 0 0]
                                          [@comment:                     Put_Line(Int32'Image(A) & " + " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                       ^ commandhandler.adb:54:71:VC_RANGE_CHECK]
                                          [@vc:annotation]
                                          [@GP_Sloc:commandhandler.adb:54:71]
                                          [@GP_Reason:VC_RANGE_CHECK]
                                          [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat]
                                          [@GP_Id:3]
                                          (Standard__positive.range_check_
                                             (((Standard__string.first
                                                  temp___434)
                                                 + (((Integer.length
                                                        (Standard__string.first
                                                           temp___434))
                                                       (Standard__string.last
                                                          temp___434))
                                                      + ((Integer.length
                                                            (1 : int))
                                                           (3 : int))))
                                                - (1 : int))))) in
                                  if ((Standard__string.length temp___436)
                                        = (0 : int)) then
                                    (((Standard__string.of_array
                                         (Standard__string.to_array
                                            temp___437))
                                        (Standard__string.first temp___437))
                                       (Standard__string.last temp___437))
                                  else
                                    (((Standard__string.of_array
                                         ((((((Array__Int__Standard__character__Concat.concat
                                                 (Standard__string.to_array
                                                    temp___436))
                                                (Standard__string.first
                                                   temp___436))
                                               (Standard__string.last
                                                  temp___436))
                                              (Standard__string.to_array
                                                 temp___437))
                                             (Standard__string.first
                                                temp___437))
                                            (Standard__string.last temp___437)))
                                        (Standard__string.first temp___436))
                                       ([#"commandhandler.adb" 54 0 0]
                                        [@comment:                     Put_Line(Int32'Image(A) & " + " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                               ^ commandhandler.adb:54:79:VC_RANGE_CHECK]
                                        [@vc:annotation]
                                        [@GP_Sloc:commandhandler.adb:54:79]
                                        [@GP_Reason:VC_RANGE_CHECK]
                                        [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat]
                                        [@GP_Id:4]
                                        (Standard__positive.range_check_
                                           (((Standard__string.first
                                                temp___436)
                                               + (((Integer.length
                                                      (Standard__string.first
                                                         temp___436))
                                                     (Standard__string.last
                                                        temp___436))
                                                    + ((Integer.length
                                                          (Standard__string.first
                                                             temp___437))
                                                         (Standard__string.last
                                                            temp___437))))
                                              - (1 : int))))))))))
                         else
                           ([@GP_Sloc:commandhandler.adb:55:19]
                            (if (([#"commandhandler.adb" 55 0 0]
                                  [#"commandhandler.adb" 55 0 0]
                                  (([@branch_id=1066] Main.spark__branch).bool__content <-
                                     (let temp___483 =
                                        Temp___String_Literal_479.temp___String_Literal_479
                                          () in
                                      let temp___481 =
                                        ((Standard__string.of_array
                                            (Commandhandler__execute__B_1__token1.token1.
                                               Array__Int__Standard__character.map__content))
                                           (Standard__integer__rep.to_rep
                                              Commandhandler__execute__B_1__token1.token1__first))
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__last) in
                                      (((((Array__Int__Standard__character.bool_eq
                                             (Standard__string.to_array
                                                temp___481))
                                            (Standard__string.first
                                               temp___481))
                                           (Standard__string.last temp___481))
                                          temp___483)
                                         (1 : int))
                                        (1 : int))));
                                 (([@branch_id=1066] Main.spark__branch).bool__content)) then
                               (([@GP_Sloc:commandhandler.adb:56:22]
                                 [#"commandhandler.adb" 56 0 0] ());
                                ([@GP_Sloc:commandhandler.adb:56:45]
                                 [#"commandhandler.adb" 56 0 0] ());
                                ([@GP_Sloc:commandhandler.adb:56:48]
                                 [#"commandhandler.adb" 56 0 0] ());
                                ([@GP_Sloc:commandhandler.adb:56:37]
                                 [#"commandhandler.adb" 56 0 0] ());
                                ([@GP_Sloc:commandhandler.adb:56:24]
                                 [#"commandhandler.adb" 56 0 0]
                                 (let temp___468 =
                                    ((Calculator__sub___axiom.sub
                                        { Locker__locker.__split_fields =
                                            (Locker__locker.__split_fields__content
                                                Commandhandler__execute__l.l__split_fields) })
                                       (Commandhandler__execute__B_1__B_2__a.a.int__content))
                                      (Commandhandler__execute__B_1__B_2__b.b.int__content) in
                                  [#"commandhandler.adb" 56 0 0]
                                  (Commandhandler__execute__B_1__B_2__r.r__split_fields.
                                     Commandhandler__execute__result.__split_fields__content <-
                                     (Commandhandler__execute__result.__split_fields
                                         temp___468))));
                                ([@GP_Sloc:commandhandler.adb:57:22]
                                 [#"commandhandler.adb" 57 0 0] ());
                                ([@GP_Sloc:commandhandler.adb:57:22]
                                 [#"commandhandler.adb" 57 0 0]
                                 (([#"commandhandler.adb" 57 0 0]
                                   (val _f : unit in
                                    _f));
                                  (Ada___ada__text_io__put_line__2___axiom.put_line
                                     (let temp___478 =
                                        (Standard_String__Img.to_string
                                           (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                              (Calculator__int32__rep.to_rep
                                                 ((Commandhandler__execute__result.__split_fields
                                                      { Commandhandler__execute__result.__split_fields =
                                                          (Commandhandler__execute__result.__split_fields__content
                                                              Commandhandler__execute__B_1__B_2__r.r__split_fields) }).
                                                    Commandhandler__execute__result.rec__calculator__result__value))))
                                          (12 : int) in
                                      let temp___477 =
                                        let temp___476 =
                                          Temp___String_Literal_469.temp___String_Literal_469
                                            () in
                                        let temp___475 =
                                          let temp___474 =
                                            (Standard_String__Img.to_string
                                               (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                  (Commandhandler__execute__B_1__B_2__b.b.int__content)))
                                              (12 : int) in
                                          let temp___473 =
                                            let temp___472 =
                                              Temp___String_Literal_470.temp___String_Literal_470
                                                () in
                                            let temp___471 =
                                              (Standard_String__Img.to_string
                                                 (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                    (Commandhandler__execute__B_1__B_2__a.a.int__content)))
                                                (12 : int) in
                                            if ((Standard__string.length
                                                   temp___471)
                                                  = (0 : int)) then
                                              (((Standard__string.of_array
                                                   temp___472)
                                                  (1 : int))
                                                 (3 : int))
                                            else
                                              (((Standard__string.of_array
                                                   ((((((Array__Int__Standard__character__Concat.concat
                                                           (Standard__string.to_array
                                                              temp___471))
                                                          (Standard__string.first
                                                             temp___471))
                                                         (Standard__string.last
                                                            temp___471))
                                                        temp___472)
                                                       (1 : int))
                                                      (3 : int)))
                                                  (Standard__string.first
                                                     temp___471))
                                                 ([#"commandhandler.adb" 57 0 0]
                                                  [@GP_Id:13]
                                                  [@vc:annotation]
                                                  [@GP_Reason:VC_RANGE_CHECK]
                                                  [@comment:                     Put_Line(Int32'Image(A) & " - " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                              ^ commandhandler.adb:57:46:VC_RANGE_CHECK]
                                                  [@GP_Sloc:commandhandler.adb:57:46]
                                                  [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat__concat]
                                                  (Standard__positive.range_check_
                                                     (((Standard__string.first
                                                          temp___471)
                                                         + (((Integer.length
                                                                (Standard__string.first
                                                                   temp___471))
                                                               (Standard__string.last
                                                                  temp___471))
                                                              + ((Integer.length
                                                                    (1 : int))
                                                                   (3 : int))))
                                                        - (1 : int))))) in
                                          if ((Standard__string.length
                                                 temp___473)
                                                = (0 : int)) then
                                            (((Standard__string.of_array
                                                 (Standard__string.to_array
                                                    temp___474))
                                                (Standard__string.first
                                                   temp___474))
                                               (Standard__string.last
                                                  temp___474))
                                          else
                                            (((Standard__string.of_array
                                                 ((((((Array__Int__Standard__character__Concat.concat
                                                         (Standard__string.to_array
                                                            temp___473))
                                                        (Standard__string.first
                                                           temp___473))
                                                       (Standard__string.last
                                                          temp___473))
                                                      (Standard__string.to_array
                                                         temp___474))
                                                     (Standard__string.first
                                                        temp___474))
                                                    (Standard__string.last
                                                       temp___474)))
                                                (Standard__string.first
                                                   temp___473))
                                               ([#"commandhandler.adb" 57 0 0]
                                                [@GP_Id:14]
                                                [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat]
                                                [@vc:annotation]
                                                [@GP_Sloc:commandhandler.adb:57:54]
                                                [@GP_Reason:VC_RANGE_CHECK]
                                                [@comment:                     Put_Line(Int32'Image(A) & " - " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                      ^ commandhandler.adb:57:54:VC_RANGE_CHECK]
                                                (Standard__positive.range_check_
                                                   (((Standard__string.first
                                                        temp___473)
                                                       + (((Integer.length
                                                              (Standard__string.first
                                                                 temp___473))
                                                             (Standard__string.last
                                                                temp___473))
                                                            + ((Integer.length
                                                                  (Standard__string.first
                                                                    temp___474))
                                                                 (Standard__string.last
                                                                    temp___474))))
                                                      - (1 : int))))) in
                                        if ((Standard__string.length
                                               temp___475)
                                              = (0 : int)) then
                                          (((Standard__string.of_array
                                               temp___476)
                                              (1 : int))
                                             (3 : int))
                                        else
                                          (((Standard__string.of_array
                                               ((((((Array__Int__Standard__character__Concat.concat
                                                       (Standard__string.to_array
                                                          temp___475))
                                                      (Standard__string.first
                                                         temp___475))
                                                     (Standard__string.last
                                                        temp___475))
                                                    temp___476)
                                                   (1 : int))
                                                  (3 : int)))
                                              (Standard__string.first
                                                 temp___475))
                                             ([#"commandhandler.adb" 57 0 0]
                                              [@GP_Id:15]
                                              [@vc:annotation]
                                              [@comment:                     Put_Line(Int32'Image(A) & " - " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                       ^ commandhandler.adb:57:71:VC_RANGE_CHECK]
                                              [@GP_Reason:VC_RANGE_CHECK]
                                              [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat]
                                              [@GP_Sloc:commandhandler.adb:57:71]
                                              (Standard__positive.range_check_
                                                 (((Standard__string.first
                                                      temp___475)
                                                     + (((Integer.length
                                                            (Standard__string.first
                                                               temp___475))
                                                           (Standard__string.last
                                                              temp___475))
                                                          + ((Integer.length
                                                                (1 : int))
                                                               (3 : int))))
                                                    - (1 : int))))) in
                                      if ((Standard__string.length temp___477)
                                            = (0 : int)) then
                                        (((Standard__string.of_array
                                             (Standard__string.to_array
                                                temp___478))
                                            (Standard__string.first
                                               temp___478))
                                           (Standard__string.last temp___478))
                                      else
                                        (((Standard__string.of_array
                                             ((((((Array__Int__Standard__character__Concat.concat
                                                     (Standard__string.to_array
                                                        temp___477))
                                                    (Standard__string.first
                                                       temp___477))
                                                   (Standard__string.last
                                                      temp___477))
                                                  (Standard__string.to_array
                                                     temp___478))
                                                 (Standard__string.first
                                                    temp___478))
                                                (Standard__string.last
                                                   temp___478)))
                                            (Standard__string.first
                                               temp___477))
                                           ([#"commandhandler.adb" 57 0 0]
                                            [@GP_Id:16]
                                            [@comment:                     Put_Line(Int32'Image(A) & " - " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                               ^ commandhandler.adb:57:79:VC_RANGE_CHECK]
                                            [@vc:annotation]
                                            [@GP_Reason:VC_RANGE_CHECK]
                                            [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat]
                                            [@GP_Sloc:commandhandler.adb:57:79]
                                            (Standard__positive.range_check_
                                               (((Standard__string.first
                                                    temp___477)
                                                   + (((Integer.length
                                                          (Standard__string.first
                                                             temp___477))
                                                         (Standard__string.last
                                                            temp___477))
                                                        + ((Integer.length
                                                              (Standard__string.first
                                                                 temp___478))
                                                             (Standard__string.last
                                                                temp___478))))
                                                  - (1 : int))))))))))
                             else
                               ([@GP_Sloc:commandhandler.adb:58:19]
                                (if (([#"commandhandler.adb" 58 0 0]
                                      [#"commandhandler.adb" 58 0 0]
                                      (([@branch_id=1101] Main.spark__branch).bool__content <-
                                         (let temp___466 =
                                            Temp___String_Literal_462.temp___String_Literal_462
                                              () in
                                          let temp___464 =
                                            ((Standard__string.of_array
                                                (Commandhandler__execute__B_1__token1.token1.
                                                   Array__Int__Standard__character.map__content))
                                               (Standard__integer__rep.to_rep
                                                  Commandhandler__execute__B_1__token1.token1__first))
                                              (Standard__integer__rep.to_rep
                                                 Commandhandler__execute__B_1__token1.token1__last) in
                                          (((((Array__Int__Standard__character.bool_eq
                                                 (Standard__string.to_array
                                                    temp___464))
                                                (Standard__string.first
                                                   temp___464))
                                               (Standard__string.last
                                                  temp___464))
                                              temp___466)
                                             (1 : int))
                                            (1 : int))));
                                     (([@branch_id=1101] Main.spark__branch).bool__content)) then
                                   (([@GP_Sloc:commandhandler.adb:59:22]
                                     [#"commandhandler.adb" 59 0 0] ());
                                    ([@GP_Sloc:commandhandler.adb:59:45]
                                     [#"commandhandler.adb" 59 0 0] ());
                                    ([@GP_Sloc:commandhandler.adb:59:48]
                                     [#"commandhandler.adb" 59 0 0] ());
                                    ([@GP_Sloc:commandhandler.adb:59:37]
                                     [#"commandhandler.adb" 59 0 0] ());
                                    ([@GP_Sloc:commandhandler.adb:59:24]
                                     [#"commandhandler.adb" 59 0 0]
                                     (let temp___451 =
                                        ((Calculator__mul___axiom.mul
                                            { Locker__locker.__split_fields =
                                                (Locker__locker.__split_fields__content
                                                    Commandhandler__execute__l.l__split_fields) })
                                           (Commandhandler__execute__B_1__B_2__a.a.int__content))
                                          (Commandhandler__execute__B_1__B_2__b.b.int__content) in
                                      [#"commandhandler.adb" 59 0 0]
                                      (Commandhandler__execute__B_1__B_2__r.r__split_fields.
                                         Commandhandler__execute__result.__split_fields__content <-
                                         (Commandhandler__execute__result.__split_fields
                                             temp___451))));
                                    ([@GP_Sloc:commandhandler.adb:60:22]
                                     [#"commandhandler.adb" 60 0 0] ());
                                    ([@GP_Sloc:commandhandler.adb:60:22]
                                     [#"commandhandler.adb" 60 0 0]
                                     (([#"commandhandler.adb" 60 0 0]
                                       (val _f : unit in
                                        _f));
                                      (Ada___ada__text_io__put_line__2___axiom.put_line
                                         (let temp___461 =
                                            (Standard_String__Img.to_string
                                               (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                  (Calculator__int32__rep.to_rep
                                                     ((Commandhandler__execute__result.__split_fields
                                                          { Commandhandler__execute__result.__split_fields =
                                                              (Commandhandler__execute__result.__split_fields__content
                                                                  Commandhandler__execute__B_1__B_2__r.r__split_fields) }).
                                                        Commandhandler__execute__result.rec__calculator__result__value))))
                                              (12 : int) in
                                          let temp___460 =
                                            let temp___459 =
                                              Temp___String_Literal_452.temp___String_Literal_452
                                                () in
                                            let temp___458 =
                                              let temp___457 =
                                                (Standard_String__Img.to_string
                                                   (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                      (Commandhandler__execute__B_1__B_2__b.b.int__content)))
                                                  (12 : int) in
                                              let temp___456 =
                                                let temp___455 =
                                                  Temp___String_Literal_453.temp___String_Literal_453
                                                    () in
                                                let temp___454 =
                                                  (Standard_String__Img.to_string
                                                     (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                        (Commandhandler__execute__B_1__B_2__a.a.int__content)))
                                                    (12 : int) in
                                                if ((Standard__string.length
                                                       temp___454)
                                                      = (0 : int)) then
                                                  (((Standard__string.of_array
                                                       temp___455)
                                                      (1 : int))
                                                     (3 : int))
                                                else
                                                  (((Standard__string.of_array
                                                       ((((((Array__Int__Standard__character__Concat.concat
                                                               (Standard__string.to_array
                                                                  temp___454))
                                                              (Standard__string.first
                                                                 temp___454))
                                                             (Standard__string.last
                                                                temp___454))
                                                            temp___455)
                                                           (1 : int))
                                                          (3 : int)))
                                                      (Standard__string.first
                                                         temp___454))
                                                     ([#"commandhandler.adb" 60 0 0]
                                                      [@vc:annotation]
                                                      [@GP_Reason:VC_RANGE_CHECK]
                                                      [@comment:                     Put_Line(Int32'Image(A) & " * " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                              ^ commandhandler.adb:60:46:VC_RANGE_CHECK]
                                                      [@GP_Sloc:commandhandler.adb:60:46]
                                                      [@GP_Id:9]
                                                      [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat__concat]
                                                      (Standard__positive.range_check_
                                                         (((Standard__string.first
                                                              temp___454)
                                                             + (((Integer.length
                                                                    (Standard__string.first
                                                                    temp___454))
                                                                   (Standard__string.last
                                                                    temp___454))
                                                                  + ((Integer.length
                                                                    (1 : int))
                                                                    (3 : int))))
                                                            - (1 : int))))) in
                                              if ((Standard__string.length
                                                     temp___456)
                                                    = (0 : int)) then
                                                (((Standard__string.of_array
                                                     (Standard__string.to_array
                                                        temp___457))
                                                    (Standard__string.first
                                                       temp___457))
                                                   (Standard__string.last
                                                      temp___457))
                                              else
                                                (((Standard__string.of_array
                                                     ((((((Array__Int__Standard__character__Concat.concat
                                                             (Standard__string.to_array
                                                                temp___456))
                                                            (Standard__string.first
                                                               temp___456))
                                                           (Standard__string.last
                                                              temp___456))
                                                          (Standard__string.to_array
                                                             temp___457))
                                                         (Standard__string.first
                                                            temp___457))
                                                        (Standard__string.last
                                                           temp___457)))
                                                    (Standard__string.first
                                                       temp___456))
                                                   ([#"commandhandler.adb" 60 0 0]
                                                    [@GP_Id:10]
                                                    [@comment:                     Put_Line(Int32'Image(A) & " * " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                      ^ commandhandler.adb:60:54:VC_RANGE_CHECK]
                                                    [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat]
                                                    [@vc:annotation]
                                                    [@GP_Reason:VC_RANGE_CHECK]
                                                    [@GP_Sloc:commandhandler.adb:60:54]
                                                    (Standard__positive.range_check_
                                                       (((Standard__string.first
                                                            temp___456)
                                                           + (((Integer.length
                                                                  (Standard__string.first
                                                                    temp___456))
                                                                 (Standard__string.last
                                                                    temp___456))
                                                                + ((Integer.length
                                                                    (Standard__string.first
                                                                    temp___457))
                                                                    (Standard__string.last
                                                                    temp___457))))
                                                          - (1 : int))))) in
                                            if ((Standard__string.length
                                                   temp___458)
                                                  = (0 : int)) then
                                              (((Standard__string.of_array
                                                   temp___459)
                                                  (1 : int))
                                                 (3 : int))
                                            else
                                              (((Standard__string.of_array
                                                   ((((((Array__Int__Standard__character__Concat.concat
                                                           (Standard__string.to_array
                                                              temp___458))
                                                          (Standard__string.first
                                                             temp___458))
                                                         (Standard__string.last
                                                            temp___458))
                                                        temp___459)
                                                       (1 : int))
                                                      (3 : int)))
                                                  (Standard__string.first
                                                     temp___458))
                                                 ([#"commandhandler.adb" 60 0 0]
                                                  [@GP_Sloc:commandhandler.adb:60:71]
                                                  [@GP_Id:11]
                                                  [@comment:                     Put_Line(Int32'Image(A) & " * " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                       ^ commandhandler.adb:60:71:VC_RANGE_CHECK]
                                                  [@vc:annotation]
                                                  [@GP_Reason:VC_RANGE_CHECK]
                                                  [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat]
                                                  (Standard__positive.range_check_
                                                     (((Standard__string.first
                                                          temp___458)
                                                         + (((Integer.length
                                                                (Standard__string.first
                                                                   temp___458))
                                                               (Standard__string.last
                                                                  temp___458))
                                                              + ((Integer.length
                                                                    (1 : int))
                                                                   (3 : int))))
                                                        - (1 : int))))) in
                                          if ((Standard__string.length
                                                 temp___460)
                                                = (0 : int)) then
                                            (((Standard__string.of_array
                                                 (Standard__string.to_array
                                                    temp___461))
                                                (Standard__string.first
                                                   temp___461))
                                               (Standard__string.last
                                                  temp___461))
                                          else
                                            (((Standard__string.of_array
                                                 ((((((Array__Int__Standard__character__Concat.concat
                                                         (Standard__string.to_array
                                                            temp___460))
                                                        (Standard__string.first
                                                           temp___460))
                                                       (Standard__string.last
                                                          temp___460))
                                                      (Standard__string.to_array
                                                         temp___461))
                                                     (Standard__string.first
                                                        temp___461))
                                                    (Standard__string.last
                                                       temp___461)))
                                                (Standard__string.first
                                                   temp___460))
                                               ([#"commandhandler.adb" 60 0 0]
                                                [@GP_Id:12]
                                                [@GP_Sloc:commandhandler.adb:60:79]
                                                [@vc:annotation]
                                                [@comment:                     Put_Line(Int32'Image(A) & " * " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                               ^ commandhandler.adb:60:79:VC_RANGE_CHECK]
                                                [@GP_Reason:VC_RANGE_CHECK]
                                                [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat]
                                                (Standard__positive.range_check_
                                                   (((Standard__string.first
                                                        temp___460)
                                                       + (((Integer.length
                                                              (Standard__string.first
                                                                 temp___460))
                                                             (Standard__string.last
                                                                temp___460))
                                                            + ((Integer.length
                                                                  (Standard__string.first
                                                                    temp___461))
                                                                 (Standard__string.last
                                                                    temp___461))))
                                                      - (1 : int))))))))))
                                 else
                                   (([@GP_Sloc:commandhandler.adb:62:22]
                                     [#"commandhandler.adb" 62 0 0] ());
                                    ([@GP_Sloc:commandhandler.adb:62:45]
                                     [#"commandhandler.adb" 62 0 0] ());
                                    ([@GP_Sloc:commandhandler.adb:62:48]
                                     [#"commandhandler.adb" 62 0 0] ());
                                    ([@GP_Sloc:commandhandler.adb:62:37]
                                     [#"commandhandler.adb" 62 0 0] ());
                                    ([@GP_Sloc:commandhandler.adb:62:24]
                                     [#"commandhandler.adb" 62 0 0]
                                     (let temp___439 =
                                        ((Calculator__div___axiom.div
                                            { Locker__locker.__split_fields =
                                                (Locker__locker.__split_fields__content
                                                    Commandhandler__execute__l.l__split_fields) })
                                           (Commandhandler__execute__B_1__B_2__a.a.int__content))
                                          (Commandhandler__execute__B_1__B_2__b.b.int__content) in
                                      [#"commandhandler.adb" 62 0 0]
                                      (Commandhandler__execute__B_1__B_2__r.r__split_fields.
                                         Commandhandler__execute__result.__split_fields__content <-
                                         (Commandhandler__execute__result.__split_fields
                                             temp___439))));
                                    ([@GP_Sloc:commandhandler.adb:63:22]
                                     [#"commandhandler.adb" 63 0 0] ());
                                    ([@GP_Sloc:commandhandler.adb:63:22]
                                     [#"commandhandler.adb" 63 0 0]
                                     (([#"commandhandler.adb" 63 0 0]
                                       (val _f : unit in
                                        _f));
                                      (Ada___ada__text_io__put_line__2___axiom.put_line
                                         (let temp___449 =
                                            (Standard_String__Img.to_string
                                               (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                  (Calculator__int32__rep.to_rep
                                                     ((Commandhandler__execute__result.__split_fields
                                                          { Commandhandler__execute__result.__split_fields =
                                                              (Commandhandler__execute__result.__split_fields__content
                                                                  Commandhandler__execute__B_1__B_2__r.r__split_fields) }).
                                                        Commandhandler__execute__result.rec__calculator__result__value))))
                                              (12 : int) in
                                          let temp___448 =
                                            let temp___447 =
                                              Temp___String_Literal_440.temp___String_Literal_440
                                                () in
                                            let temp___446 =
                                              let temp___445 =
                                                (Standard_String__Img.to_string
                                                   (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                      (Commandhandler__execute__B_1__B_2__b.b.int__content)))
                                                  (12 : int) in
                                              let temp___444 =
                                                let temp___443 =
                                                  Temp___String_Literal_441.temp___String_Literal_441
                                                    () in
                                                let temp___442 =
                                                  (Standard_String__Img.to_string
                                                     (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                        (Commandhandler__execute__B_1__B_2__a.a.int__content)))
                                                    (12 : int) in
                                                if ((Standard__string.length
                                                       temp___442)
                                                      = (0 : int)) then
                                                  (((Standard__string.of_array
                                                       temp___443)
                                                      (1 : int))
                                                     (3 : int))
                                                else
                                                  (((Standard__string.of_array
                                                       ((((((Array__Int__Standard__character__Concat.concat
                                                               (Standard__string.to_array
                                                                  temp___442))
                                                              (Standard__string.first
                                                                 temp___442))
                                                             (Standard__string.last
                                                                temp___442))
                                                            temp___443)
                                                           (1 : int))
                                                          (3 : int)))
                                                      (Standard__string.first
                                                         temp___442))
                                                     ([#"commandhandler.adb" 63 0 0]
                                                      [@comment:                     Put_Line(Int32'Image(A) & " / " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                              ^ commandhandler.adb:63:46:VC_RANGE_CHECK]
                                                      [@GP_Sloc:commandhandler.adb:63:46]
                                                      [@vc:annotation]
                                                      [@GP_Reason:VC_RANGE_CHECK]
                                                      [@GP_Id:5]
                                                      [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat__concat]
                                                      (Standard__positive.range_check_
                                                         (((Standard__string.first
                                                              temp___442)
                                                             + (((Integer.length
                                                                    (Standard__string.first
                                                                    temp___442))
                                                                   (Standard__string.last
                                                                    temp___442))
                                                                  + ((Integer.length
                                                                    (1 : int))
                                                                    (3 : int))))
                                                            - (1 : int))))) in
                                              if ((Standard__string.length
                                                     temp___444)
                                                    = (0 : int)) then
                                                (((Standard__string.of_array
                                                     (Standard__string.to_array
                                                        temp___445))
                                                    (Standard__string.first
                                                       temp___445))
                                                   (Standard__string.last
                                                      temp___445))
                                              else
                                                (((Standard__string.of_array
                                                     ((((((Array__Int__Standard__character__Concat.concat
                                                             (Standard__string.to_array
                                                                temp___444))
                                                            (Standard__string.first
                                                               temp___444))
                                                           (Standard__string.last
                                                              temp___444))
                                                          (Standard__string.to_array
                                                             temp___445))
                                                         (Standard__string.first
                                                            temp___445))
                                                        (Standard__string.last
                                                           temp___445)))
                                                    (Standard__string.first
                                                       temp___444))
                                                   ([#"commandhandler.adb" 63 0 0]
                                                    [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat]
                                                    [@vc:annotation]
                                                    [@GP_Reason:VC_RANGE_CHECK]
                                                    [@comment:                     Put_Line(Int32'Image(A) & " / " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                      ^ commandhandler.adb:63:54:VC_RANGE_CHECK]
                                                    [@GP_Id:6]
                                                    [@GP_Sloc:commandhandler.adb:63:54]
                                                    (Standard__positive.range_check_
                                                       (((Standard__string.first
                                                            temp___444)
                                                           + (((Integer.length
                                                                  (Standard__string.first
                                                                    temp___444))
                                                                 (Standard__string.last
                                                                    temp___444))
                                                                + ((Integer.length
                                                                    (Standard__string.first
                                                                    temp___445))
                                                                    (Standard__string.last
                                                                    temp___445))))
                                                          - (1 : int))))) in
                                            if ((Standard__string.length
                                                   temp___446)
                                                  = (0 : int)) then
                                              (((Standard__string.of_array
                                                   temp___447)
                                                  (1 : int))
                                                 (3 : int))
                                            else
                                              (((Standard__string.of_array
                                                   ((((((Array__Int__Standard__character__Concat.concat
                                                           (Standard__string.to_array
                                                              temp___446))
                                                          (Standard__string.first
                                                             temp___446))
                                                         (Standard__string.last
                                                            temp___446))
                                                        temp___447)
                                                       (1 : int))
                                                      (3 : int)))
                                                  (Standard__string.first
                                                     temp___446))
                                                 ([#"commandhandler.adb" 63 0 0]
                                                  [@GP_Sloc:commandhandler.adb:63:71]
                                                  [@vc:annotation]
                                                  [@GP_Reason:VC_RANGE_CHECK]
                                                  [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat]
                                                  [@comment:                     Put_Line(Int32'Image(A) & " / " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                       ^ commandhandler.adb:63:71:VC_RANGE_CHECK]
                                                  [@GP_Id:7]
                                                  (Standard__positive.range_check_
                                                     (((Standard__string.first
                                                          temp___446)
                                                         + (((Integer.length
                                                                (Standard__string.first
                                                                   temp___446))
                                                               (Standard__string.last
                                                                  temp___446))
                                                              + ((Integer.length
                                                                    (1 : int))
                                                                   (3 : int))))
                                                        - (1 : int))))) in
                                          if ((Standard__string.length
                                                 temp___448)
                                                = (0 : int)) then
                                            (((Standard__string.of_array
                                                 (Standard__string.to_array
                                                    temp___449))
                                                (Standard__string.first
                                                   temp___449))
                                               (Standard__string.last
                                                  temp___449))
                                          else
                                            (((Standard__string.of_array
                                                 ((((((Array__Int__Standard__character__Concat.concat
                                                         (Standard__string.to_array
                                                            temp___448))
                                                        (Standard__string.first
                                                           temp___448))
                                                       (Standard__string.last
                                                          temp___448))
                                                      (Standard__string.to_array
                                                         temp___449))
                                                     (Standard__string.first
                                                        temp___449))
                                                    (Standard__string.last
                                                       temp___449)))
                                                (Standard__string.first
                                                   temp___448))
                                               ([#"commandhandler.adb" 63 0 0]
                                                [@comment:                     Put_Line(Int32'Image(A) & " / " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                               ^ commandhandler.adb:63:79:VC_RANGE_CHECK]
                                                [@vc:annotation]
                                                [@GP_Sloc:commandhandler.adb:63:79]
                                                [@GP_Reason:VC_RANGE_CHECK]
                                                [@GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat]
                                                [@GP_Id:8]
                                                (Standard__positive.range_check_
                                                   (((Standard__string.first
                                                        temp___448)
                                                       + (((Integer.length
                                                              (Standard__string.first
                                                                 temp___448))
                                                             (Standard__string.last
                                                                temp___448))
                                                            + ((Integer.length
                                                                  (Standard__string.first
                                                                    temp___449))
                                                                 (Standard__string.last
                                                                    temp___449))))
                                                      - (1 : int))))))))))))))));
                       ([@GP_Sloc:commandhandler.adb:66:22]
                        [#"commandhandler.adb" 66 0 0] ());
                       ([@GP_Sloc:commandhandler.adb:66:19]
                        [#"commandhandler.adb" 66 0 0]
                        (if (([#"commandhandler.adb" 66 0 0]
                              [#"commandhandler.adb" 66 0 0]
                              (([@branch_id=1166] Main.spark__branch).bool__content <-
                                 ((Commandhandler__execute__result.__split_fields
                                      { Commandhandler__execute__result.__split_fields =
                                          (Commandhandler__execute__result.__split_fields__content
                                              Commandhandler__execute__B_1__B_2__r.r__split_fields) }).
                                    Commandhandler__execute__result.rec__calculator__result__success)));
                             (([@branch_id=1166] Main.spark__branch).bool__content)) then
                           (([@GP_Sloc:commandhandler.adb:67:49]
                             [#"commandhandler.adb" 67 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:67:27]
                             [#"commandhandler.adb" 67 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:67:27]
                             [#"commandhandler.adb" 67 0 0]
                             (let temp___compl_489 =
                                { Stack__stack_instance.__split_fields =
                                    (Stack__stack_instance.__split_fields__content
                                        Commandhandler__execute__sk.sk__split_fields) } in
                              let temp___compl_490 =
                                Commandhandler__execute__B_1__B_2__success.success.bool__content in
                              ([#"commandhandler.adb" 67 0 0]
                               (val _f : unit in
                                _f));
                              ((((Stack__push___axiom.push
                                    { Locker__locker.__split_fields =
                                        (Locker__locker.__split_fields__content
                                            Commandhandler__execute__l.l__split_fields) })
                                   Commandhandler__execute__sk.sk__split_fields)
                                  (Calculator__int32__rep.to_rep
                                     ((Commandhandler__execute__result.__split_fields
                                          { Commandhandler__execute__result.__split_fields =
                                              (Commandhandler__execute__result.__split_fields__content
                                                  Commandhandler__execute__B_1__B_2__r.r__split_fields) }).
                                        Commandhandler__execute__result.rec__calculator__result__value)))
                                 Commandhandler__execute__B_1__B_2__success.success))))
                         else
                           (([@GP_Sloc:commandhandler.adb:69:22]
                             [#"commandhandler.adb" 69 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:69:22]
                             [#"commandhandler.adb" 69 0 0]
                             (([#"commandhandler.adb" 69 0 0]
                               (val _f : unit in
                                _f));
                              (Ada___ada__text_io__put_line__2___axiom.put_line
                                 (let temp___492 =
                                    Temp___String_Literal_491.temp___String_Literal_491
                                      () in
                                  ((Standard__string.of_array temp___492)
                                     (1 : int))
                                    (45 : int)))));
                            ([@GP_Sloc:commandhandler.adb:70:41]
                             [#"commandhandler.adb" 70 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:70:44]
                             [#"commandhandler.adb" 70 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:70:47]
                             [#"commandhandler.adb" 70 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:70:27]
                             [#"commandhandler.adb" 70 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:70:27]
                             [#"commandhandler.adb" 70 0 0]
                             (let temp___compl_493 =
                                { Stack__stack_instance.__split_fields =
                                    (Stack__stack_instance.__split_fields__content
                                        Commandhandler__execute__sk.sk__split_fields) } in
                              let temp___compl_494 =
                                Commandhandler__execute__B_1__B_2__success.success.bool__content in
                              ([#"commandhandler.adb" 70 0 0]
                               (val _f : unit in
                                _f));
                              (((((Stack__push2___axiom.push2
                                     { Locker__locker.__split_fields =
                                         (Locker__locker.__split_fields__content
                                             Commandhandler__execute__l.l__split_fields) })
                                    Commandhandler__execute__sk.sk__split_fields)
                                   (Commandhandler__execute__B_1__B_2__a.a.int__content))
                                  (Commandhandler__execute__B_1__B_2__b.b.int__content))
                                 Commandhandler__execute__B_1__B_2__success.success))))))))))))
             else
               ([@GP_Sloc:commandhandler.adb:75:10]
                (if (([#"commandhandler.adb" 75 0 0]
                      [#"commandhandler.adb" 75 0 0]
                      (([@branch_id=1194] Main.spark__branch).bool__content <-
                         (let temp___655 =
                            Temp___String_Literal_651.temp___String_Literal_651
                              () in
                          let temp___653 =
                            ((Standard__string.of_array
                                (Commandhandler__execute__B_1__token1.token1.
                                   Array__Int__Standard__character.map__content))
                               (Standard__integer__rep.to_rep
                                  Commandhandler__execute__B_1__token1.token1__first))
                              (Standard__integer__rep.to_rep
                                 Commandhandler__execute__B_1__token1.token1__last) in
                          (((((Array__Int__Standard__character.bool_eq
                                 (Standard__string.to_array temp___653))
                                (Standard__string.first temp___653))
                               (Standard__string.last temp___653))
                              temp___655)
                             (1 : int))
                            (5 : int))));
                     (([@branch_id=1194] Main.spark__branch).bool__content)) then
                   (([@GP_Sloc:commandhandler.adb:76:22]
                     [#"commandhandler.adb" 76 0 0] ());
                    ([@GP_Sloc:commandhandler.adb:76:13]
                     [#"commandhandler.adb" 76 0 0]
                     (if (([#"commandhandler.adb" 76 0 0]
                           [#"commandhandler.adb" 76 0 0]
                           (([@branch_id=1197] Main.spark__branch).bool__content <-
                              (Locker__is_locked___axiom.is_locked
                                 { Locker__locker.__split_fields =
                                     (Locker__locker.__split_fields__content
                                         Commandhandler__execute__l.l__split_fields) })));
                          (([@branch_id=1197] Main.spark__branch).bool__content)) then
                        (([@GP_Sloc:commandhandler.adb:77:16]
                          [#"commandhandler.adb" 77 0 0] ());
                         ([@GP_Sloc:commandhandler.adb:77:16]
                          [#"commandhandler.adb" 77 0 0]
                          (([#"commandhandler.adb" 77 0 0]
                            (val _f : unit in
                             _f));
                           (Ada___ada__text_io__put_line__2___axiom.put_line
                              (let temp___641 =
                                 Temp___String_Literal_640.temp___String_Literal_640
                                   () in
                               ((Standard__string.of_array temp___641)
                                  (1 : int))
                                 (7 : int)))));
                         ([@GP_Sloc:commandhandler.adb:78:16]
                          [#"commandhandler.adb" 78 0 0]
                          [#"commandhandler.adb" 78 0 0]
                          ((raise Return__exc) : unit)))
                      else ()));
                    ([@GP_Sloc:commandhandler.adb:81:16]
                     [#"commandhandler.adb" 81 0 0] ());
                    ([@GP_Sloc:commandhandler.adb:81:13]
                     [#"commandhandler.adb" 81 0 0]
                     (if (([#"commandhandler.adb" 81 0 0]
                           [#"commandhandler.adb" 81 0 0]
                           (([@branch_id=1207] Main.spark__branch).bool__content <-
                              ((Commandhandler__execute__numtokens.numtokens.int__content)
                                 <> (2 : int))));
                          (([@branch_id=1207] Main.spark__branch).bool__content)) then
                        (([@GP_Sloc:commandhandler.adb:82:16]
                          [#"commandhandler.adb" 82 0 0] ());
                         ([@GP_Sloc:commandhandler.adb:82:16]
                          [#"commandhandler.adb" 82 0 0]
                          (([#"commandhandler.adb" 82 0 0]
                            (val _f : unit in
                             _f));
                           (Ada___ada__text_io__put_line__2___axiom.put_line
                              (let temp___643 =
                                 Temp___String_Literal_642.temp___String_Literal_642
                                   () in
                               ((Standard__string.of_array temp___643)
                                  (1 : int))
                                 (31 : int)))));
                         ([@GP_Sloc:commandhandler.adb:83:16]
                          [#"commandhandler.adb" 83 0 0]
                          [#"commandhandler.adb" 83 0 0]
                          ((raise Return__exc) : unit)))
                      else ()));
                    ([@GP_Sloc:commandhandler.adb:86:13]
                     [#"commandhandler.adb" 86 0 0]
                     (([#"commandhandler.adb" 88 0 0] ());
                      ([#"commandhandler.adb" 88 0 0] ());
                      ([#"commandhandler.adb" 87 0 0] ());
                      ([#"commandhandler.adb" 87 0 0]
                       (([#"commandhandler.adb" 87 0 0]
                         (Commandhandler__execute__B_1__B_3__token2.token2.int__content <-
                            (Stringtointeger__from_string___axiom.from_string
                               (Mystring_instance__lines__to_string___axiom.to_string
                                  ([#"commandhandler.adb" 88 0 0]
                                   [@GP_Reason:VC_PRECONDITION]
                                   [@vc:annotation]
                                   [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                       ^ commandhandler.adb:88:39:VC_PRECONDITION]
                                   [@GP_Sloc:commandhandler.adb:88:39]
                                   [@GP_Shape:B_1_declblk__if__B_3_declblk__token2_decl__call_from_string__call_to_string__call_substring]
                                   [@GP_Id:54]
                                   (((Mystring_instance__lines__substring___axiom.substring
                                        Commandhandler__execute__s.s)
                                       (Standard__positive__rep.to_rep
                                          ((Mystringtokeniser__tokenextent.__split_fields
                                               ((Array__Int__Mystringtokeniser__tokenextent.get
                                                   (Commandhandler__execute__t.t.
                                                      Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                  (2 : int))).Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)))
                                      ([#"commandhandler.adb" 88 0 0]
                                       [@vc:annotation]
                                       [@GP_Reason:VC_RANGE_CHECK]
                                       [@GP_Sloc:commandhandler.adb:88:90]
                                       [@GP_Shape:B_1_declblk__if__B_3_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub]
                                       [@GP_Id:53]
                                       [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                                          ^ commandhandler.adb:88:90:VC_RANGE_CHECK]
                                       (Standard__positive.range_check_
                                          (([#"commandhandler.adb" 88 0 0]
                                            [@GP_Shape:B_1_declblk__if__B_3_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub__add]
                                            [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                            ^ commandhandler.adb:88:76:VC_OVERFLOW_CHECK]
                                            [@vc:annotation]
                                            [@GP_Sloc:commandhandler.adb:88:76]
                                            [@GP_Reason:VC_OVERFLOW_CHECK]
                                            [@GP_Id:52]
                                            (Standard__integer.range_check_
                                               ((Standard__positive__rep.to_rep
                                                   ((Mystringtokeniser__tokenextent.__split_fields
                                                        ((Array__Int__Mystringtokeniser__tokenextent.get
                                                            (Commandhandler__execute__t.t.
                                                               Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                           (2 : int))).
                                                      Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                  + (Standard__natural__rep.to_rep
                                                       ((Mystringtokeniser__tokenextent.__split_fields
                                                            ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                (Commandhandler__execute__t.t.
                                                                   Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                               (2 : int))).
                                                          Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                             - (1 : int))))))))));
                        assume {
                          ((((Standard__integer___axiom.dynamic_invariant
                                (Commandhandler__execute__B_1__B_3__token2.token2.int__content))
                               True)
                              False)
                             True)
                            True }));
                      ([#"commandhandler.adb" 89 0 0]
                       [#"commandhandler.adb" 89 0 0]
                       (Commandhandler__execute__B_1__B_3__success.success.bool__content <-
                          (Boolean.of_int (0 : int))));
                      ([@GP_Sloc:commandhandler.adb:91:49]
                       [#"commandhandler.adb" 91 0 0] ());
                      ([@GP_Sloc:commandhandler.adb:91:21]
                       [#"commandhandler.adb" 91 0 0] ());
                      ([@GP_Sloc:commandhandler.adb:91:21]
                       [#"commandhandler.adb" 91 0 0]
                       (let temp___compl_644 =
                          { Stack__stack_instance.__split_fields =
                              (Stack__stack_instance.__split_fields__content
                                  Commandhandler__execute__sk.sk__split_fields) } in
                        let temp___compl_645 =
                          Commandhandler__execute__B_1__B_3__success.success.bool__content in
                        ([#"commandhandler.adb" 91 0 0] (val _f : unit in
                                                         _f));
                        ((((Stack__push___axiom.push
                              { Locker__locker.__split_fields =
                                  (Locker__locker.__split_fields__content
                                      Commandhandler__execute__l.l__split_fields) })
                             Commandhandler__execute__sk.sk__split_fields)
                            (Commandhandler__execute__B_1__B_3__token2.token2.int__content))
                           Commandhandler__execute__B_1__B_3__success.success)));
                      ([@GP_Sloc:commandhandler.adb:92:19]
                       [#"commandhandler.adb" 92 0 0] ());
                      ([@GP_Sloc:commandhandler.adb:92:16]
                       [#"commandhandler.adb" 92 0 0]
                       (if (([#"commandhandler.adb" 92 0 0]
                             [#"commandhandler.adb" 92 0 0]
                             (([@branch_id=1266] Main.spark__branch).bool__content <-
                                (Commandhandler__execute__B_1__B_3__success.success.bool__content)));
                            (([@branch_id=1266] Main.spark__branch).bool__content)) then
                          (([@GP_Sloc:commandhandler.adb:93:19]
                            [#"commandhandler.adb" 93 0 0] ());
                           ([@GP_Sloc:commandhandler.adb:93:19]
                            [#"commandhandler.adb" 93 0 0]
                            (([#"commandhandler.adb" 93 0 0]
                              (val _f : unit in
                               _f));
                             (Ada___ada__text_io__put_line__2___axiom.put_line
                                (let temp___648 =
                                   (Standard_String__Img.to_string
                                      (Standard__integer.attr__ATTRIBUTE_IMAGE
                                         (Commandhandler__execute__B_1__B_3__token2.token2.int__content)))
                                     (12 : int) in
                                 let temp___647 =
                                   Temp___String_Literal_646.temp___String_Literal_646
                                     () in
                                 ((Standard__string.of_array
                                     ((((((Array__Int__Standard__character__Concat.concat
                                             temp___647)
                                            (1 : int))
                                           (6 : int))
                                          (Standard__string.to_array
                                             temp___648))
                                         (Standard__string.first temp___648))
                                        (Standard__string.last temp___648)))
                                    (1 : int))
                                   ([#"commandhandler.adb" 93 0 0]
                                    [@GP_Shape:B_1_declblk__if__B_3_declblk__if__call_put_line__concat]
                                    [@vc:annotation]
                                    [@GP_Sloc:commandhandler.adb:93:37]
                                    [@GP_Reason:VC_RANGE_CHECK]
                                    [@GP_Id:51]
                                    [@comment:                  Put_Line("Push: " & Integer'Image(Token2));                                     ^ commandhandler.adb:93:37:VC_RANGE_CHECK]
                                    (Standard__positive.range_check_
                                       (((1 : int)
                                           + (((Integer.length (1 : int))
                                                 (6 : int))
                                                + ((Integer.length
                                                      (Standard__string.first
                                                         temp___648))
                                                     (Standard__string.last
                                                        temp___648))))
                                          - (1 : int)))))))))
                        else
                          (([@GP_Sloc:commandhandler.adb:95:19]
                            [#"commandhandler.adb" 95 0 0] ());
                           ([@GP_Sloc:commandhandler.adb:95:19]
                            [#"commandhandler.adb" 95 0 0]
                            (([#"commandhandler.adb" 95 0 0]
                              (val _f : unit in
                               _f));
                             (Ada___ada__text_io__put_line__2___axiom.put_line
                                (let temp___650 =
                                   Temp___String_Literal_649.temp___String_Literal_649
                                     () in
                                 ((Standard__string.of_array temp___650)
                                    (1 : int))
                                   (11 : int)))))))))))
                 else
                   ([@GP_Sloc:commandhandler.adb:99:10]
                    (if (([#"commandhandler.adb" 99 0 0]
                          [#"commandhandler.adb" 99 0 0]
                          (([@branch_id=1281] Main.spark__branch).bool__content <-
                             (let temp___639 =
                                Temp___String_Literal_635.temp___String_Literal_635
                                  () in
                              let temp___637 =
                                ((Standard__string.of_array
                                    (Commandhandler__execute__B_1__token1.token1.
                                       Array__Int__Standard__character.map__content))
                                   (Standard__integer__rep.to_rep
                                      Commandhandler__execute__B_1__token1.token1__first))
                                  (Standard__integer__rep.to_rep
                                     Commandhandler__execute__B_1__token1.token1__last) in
                              (((((Array__Int__Standard__character.bool_eq
                                     (Standard__string.to_array temp___637))
                                    (Standard__string.first temp___637))
                                   (Standard__string.last temp___637))
                                  temp___639)
                                 (1 : int))
                                (5 : int))));
                         (([@branch_id=1281] Main.spark__branch).bool__content)) then
                       (([@GP_Sloc:commandhandler.adb:100:22]
                         [#"commandhandler.adb" 100 0 0] ());
                        ([@GP_Sloc:commandhandler.adb:100:13]
                         [#"commandhandler.adb" 100 0 0]
                         (if (([#"commandhandler.adb" 100 0 0]
                               [#"commandhandler.adb" 100 0 0]
                               (([@branch_id=1284] Main.spark__branch).bool__content <-
                                  (Locker__is_locked___axiom.is_locked
                                     { Locker__locker.__split_fields =
                                         (Locker__locker.__split_fields__content
                                             Commandhandler__execute__l.l__split_fields) })));
                              (([@branch_id=1284] Main.spark__branch).bool__content)) then
                            (([@GP_Sloc:commandhandler.adb:101:16]
                              [#"commandhandler.adb" 101 0 0] ());
                             ([@GP_Sloc:commandhandler.adb:101:16]
                              [#"commandhandler.adb" 101 0 0]
                              (([#"commandhandler.adb" 101 0 0]
                                (val _f : unit in
                                 _f));
                               (Ada___ada__text_io__put_line__2___axiom.put_line
                                  (let temp___620 =
                                     Temp___String_Literal_619.temp___String_Literal_619
                                       () in
                                   ((Standard__string.of_array temp___620)
                                      (1 : int))
                                     (7 : int)))));
                             ([@GP_Sloc:commandhandler.adb:102:16]
                              [#"commandhandler.adb" 102 0 0]
                              [#"commandhandler.adb" 102 0 0]
                              ((raise Return__exc) : unit)))
                          else ()));
                        ([@GP_Sloc:commandhandler.adb:105:16]
                         [#"commandhandler.adb" 105 0 0] ());
                        ([@GP_Sloc:commandhandler.adb:105:13]
                         [#"commandhandler.adb" 105 0 0]
                         (if (([#"commandhandler.adb" 105 0 0]
                               [#"commandhandler.adb" 105 0 0]
                               (([@branch_id=1294] Main.spark__branch).bool__content <-
                                  ((Commandhandler__execute__numtokens.numtokens.int__content)
                                     <> (3 : int))));
                              (([@branch_id=1294] Main.spark__branch).bool__content)) then
                            (([@GP_Sloc:commandhandler.adb:106:16]
                              [#"commandhandler.adb" 106 0 0] ());
                             ([@GP_Sloc:commandhandler.adb:106:16]
                              [#"commandhandler.adb" 106 0 0]
                              (([#"commandhandler.adb" 106 0 0]
                                (val _f : unit in
                                 _f));
                               (Ada___ada__text_io__put_line__2___axiom.put_line
                                  (let temp___622 =
                                     Temp___String_Literal_621.temp___String_Literal_621
                                       () in
                                   ((Standard__string.of_array temp___622)
                                      (1 : int))
                                     (31 : int)))));
                             ([@GP_Sloc:commandhandler.adb:107:16]
                              [#"commandhandler.adb" 107 0 0]
                              [#"commandhandler.adb" 107 0 0]
                              ((raise Return__exc) : unit)))
                          else ()));
                        ([@GP_Sloc:commandhandler.adb:110:13]
                         [#"commandhandler.adb" 110 0 0]
                         (([#"commandhandler.adb" 112 0 0] ());
                          ([#"commandhandler.adb" 112 0 0] ());
                          ([#"commandhandler.adb" 111 0 0] ());
                          ([#"commandhandler.adb" 111 0 0]
                           (([#"commandhandler.adb" 111 0 0]
                             (Commandhandler__execute__B_1__B_4__token2.token2.int__content <-
                                (Stringtointeger__from_string___axiom.from_string
                                   (Mystring_instance__lines__to_string___axiom.to_string
                                      ([#"commandhandler.adb" 112 0 0]
                                       [@GP_Reason:VC_PRECONDITION]
                                       [@GP_Sloc:commandhandler.adb:112:39]
                                       [@GP_Id:47]
                                       [@vc:annotation]
                                       [@GP_Shape:B_1_declblk__if__B_4_declblk__token2_decl__call_from_string__call_to_string__call_substring]
                                       [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                       ^ commandhandler.adb:112:39:VC_PRECONDITION]
                                       (((Mystring_instance__lines__substring___axiom.substring
                                            Commandhandler__execute__s.s)
                                           (Standard__positive__rep.to_rep
                                              ((Mystringtokeniser__tokenextent.__split_fields
                                                   ((Array__Int__Mystringtokeniser__tokenextent.get
                                                       (Commandhandler__execute__t.t.
                                                          Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                      (2 : int))).Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)))
                                          ([#"commandhandler.adb" 112 0 0]
                                           [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                                          ^ commandhandler.adb:112:90:VC_RANGE_CHECK]
                                           [@GP_Id:46]
                                           [@vc:annotation]
                                           [@GP_Sloc:commandhandler.adb:112:90]
                                           [@GP_Shape:B_1_declblk__if__B_4_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub]
                                           [@GP_Reason:VC_RANGE_CHECK]
                                           (Standard__positive.range_check_
                                              (([#"commandhandler.adb" 112 0 0]
                                                [@GP_Sloc:commandhandler.adb:112:76]
                                                [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                            ^ commandhandler.adb:112:76:VC_OVERFLOW_CHECK]
                                                [@GP_Id:45]
                                                [@vc:annotation]
                                                [@GP_Reason:VC_OVERFLOW_CHECK]
                                                [@GP_Shape:B_1_declblk__if__B_4_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub__add]
                                                (Standard__integer.range_check_
                                                   ((Standard__positive__rep.to_rep
                                                       ((Mystringtokeniser__tokenextent.__split_fields
                                                            ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                (Commandhandler__execute__t.t.
                                                                   Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                               (2 : int))).
                                                          Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                      + (Standard__natural__rep.to_rep
                                                           ((Mystringtokeniser__tokenextent.__split_fields
                                                                ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                   (2 : int))).
                                                              Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                 - (1 : int))))))))));
                            assume {
                              ((((Standard__integer___axiom.dynamic_invariant
                                    (Commandhandler__execute__B_1__B_4__token2.token2.int__content))
                                   True)
                                  False)
                                 True)
                                True }));
                          ([#"commandhandler.adb" 114 0 0] ());
                          ([#"commandhandler.adb" 114 0 0] ());
                          ([#"commandhandler.adb" 113 0 0] ());
                          ([#"commandhandler.adb" 113 0 0]
                           (([#"commandhandler.adb" 113 0 0]
                             (Commandhandler__execute__B_1__B_4__token3.token3.int__content <-
                                (Stringtointeger__from_string___axiom.from_string
                                   (Mystring_instance__lines__to_string___axiom.to_string
                                      ([#"commandhandler.adb" 114 0 0]
                                       [@GP_Reason:VC_PRECONDITION]
                                       [@comment:                 Lines.To_String(Lines.Substring(S, T(3).Start, T(3).Start + T(3).Length - 1)));                                       ^ commandhandler.adb:114:39:VC_PRECONDITION]
                                       [@vc:annotation]
                                       [@GP_Id:50]
                                       [@GP_Shape:B_1_declblk__if__B_4_declblk__token3_decl__call_from_string__call_to_string__call_substring]
                                       [@GP_Sloc:commandhandler.adb:114:39]
                                       (((Mystring_instance__lines__substring___axiom.substring
                                            Commandhandler__execute__s.s)
                                           (Standard__positive__rep.to_rep
                                              ((Mystringtokeniser__tokenextent.__split_fields
                                                   ((Array__Int__Mystringtokeniser__tokenextent.get
                                                       (Commandhandler__execute__t.t.
                                                          Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                      (3 : int))).Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)))
                                          ([#"commandhandler.adb" 114 0 0]
                                           [@GP_Sloc:commandhandler.adb:114:90]
                                           [@vc:annotation]
                                           [@GP_Id:49]
                                           [@GP_Reason:VC_RANGE_CHECK]
                                           [@comment:                 Lines.To_String(Lines.Substring(S, T(3).Start, T(3).Start + T(3).Length - 1)));                                                                                          ^ commandhandler.adb:114:90:VC_RANGE_CHECK]
                                           [@GP_Shape:B_1_declblk__if__B_4_declblk__token3_decl__call_from_string__call_to_string__call_substring__sub]
                                           (Standard__positive.range_check_
                                              (([#"commandhandler.adb" 114 0 0]
                                                [@GP_Id:48]
                                                [@vc:annotation]
                                                [@GP_Reason:VC_OVERFLOW_CHECK]
                                                [@GP_Shape:B_1_declblk__if__B_4_declblk__token3_decl__call_from_string__call_to_string__call_substring__sub__add]
                                                [@GP_Sloc:commandhandler.adb:114:76]
                                                [@comment:                 Lines.To_String(Lines.Substring(S, T(3).Start, T(3).Start + T(3).Length - 1)));                                                                            ^ commandhandler.adb:114:76:VC_OVERFLOW_CHECK]
                                                (Standard__integer.range_check_
                                                   ((Standard__positive__rep.to_rep
                                                       ((Mystringtokeniser__tokenextent.__split_fields
                                                            ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                (Commandhandler__execute__t.t.
                                                                   Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                               (3 : int))).
                                                          Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                      + (Standard__natural__rep.to_rep
                                                           ((Mystringtokeniser__tokenextent.__split_fields
                                                                ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                   (3 : int))).
                                                              Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                 - (1 : int))))))))));
                            assume {
                              ((((Standard__integer___axiom.dynamic_invariant
                                    (Commandhandler__execute__B_1__B_4__token3.token3.int__content))
                                   True)
                                  False)
                                 True)
                                True }));
                          ([#"commandhandler.adb" 115 0 0]
                           [#"commandhandler.adb" 115 0 0]
                           (Commandhandler__execute__B_1__B_4__success.success.bool__content <-
                              (Boolean.of_int (0 : int))));
                          ([@GP_Sloc:commandhandler.adb:117:65]
                           [#"commandhandler.adb" 117 0 0] ());
                          ([@GP_Sloc:commandhandler.adb:117:21]
                           [#"commandhandler.adb" 117 0 0] ());
                          ([@GP_Sloc:commandhandler.adb:117:21]
                           [#"commandhandler.adb" 117 0 0]
                           (let temp___compl_623 =
                              { Stack__stack_instance.__split_fields =
                                  (Stack__stack_instance.__split_fields__content
                                      Commandhandler__execute__sk.sk__split_fields) } in
                            let temp___compl_624 =
                              Commandhandler__execute__B_1__B_4__success.success.bool__content in
                            ([#"commandhandler.adb" 117 0 0]
                             (val _f : unit in
                              _f));
                            (((((Stack__push2___axiom.push2
                                   { Locker__locker.__split_fields =
                                       (Locker__locker.__split_fields__content
                                           Commandhandler__execute__l.l__split_fields) })
                                  Commandhandler__execute__sk.sk__split_fields)
                                 (Commandhandler__execute__B_1__B_4__token2.token2.int__content))
                                (Commandhandler__execute__B_1__B_4__token3.token3.int__content))
                               Commandhandler__execute__B_1__B_4__success.success)));
                          ([@GP_Sloc:commandhandler.adb:118:19]
                           [#"commandhandler.adb" 118 0 0] ());
                          ([@GP_Sloc:commandhandler.adb:118:16]
                           [#"commandhandler.adb" 118 0 0]
                           (if (([#"commandhandler.adb" 118 0 0]
                                 [#"commandhandler.adb" 118 0 0]
                                 (([@branch_id=1390] Main.spark__branch).bool__content <-
                                    (Commandhandler__execute__B_1__B_4__success.success.bool__content)));
                                (([@branch_id=1390] Main.spark__branch).bool__content)) then
                              (([@GP_Sloc:commandhandler.adb:119:19]
                                [#"commandhandler.adb" 119 0 0] ());
                               ([@GP_Sloc:commandhandler.adb:119:19]
                                [#"commandhandler.adb" 119 0 0]
                                (([#"commandhandler.adb" 119 0 0]
                                  (val _f : unit in
                                   _f));
                                 (Ada___ada__text_io__put_line__2___axiom.put_line
                                    (let temp___632 =
                                       (Standard_String__Img.to_string
                                          (Standard__integer.attr__ATTRIBUTE_IMAGE
                                             (Commandhandler__execute__B_1__B_4__token3.token3.int__content)))
                                         (12 : int) in
                                     let temp___631 =
                                       let temp___630 =
                                         Temp___String_Literal_625.temp___String_Literal_625
                                           () in
                                       let temp___629 =
                                         let temp___628 =
                                           (Standard_String__Img.to_string
                                              (Standard__integer.attr__ATTRIBUTE_IMAGE
                                                 (Commandhandler__execute__B_1__B_4__token2.token2.int__content)))
                                             (12 : int) in
                                         let temp___627 =
                                           Temp___String_Literal_626.temp___String_Literal_626
                                             () in
                                         ((Standard__string.of_array
                                             ((((((Array__Int__Standard__character__Concat.concat
                                                     temp___627)
                                                    (1 : int))
                                                   (6 : int))
                                                  (Standard__string.to_array
                                                     temp___628))
                                                 (Standard__string.first
                                                    temp___628))
                                                (Standard__string.last
                                                   temp___628)))
                                            (1 : int))
                                           ([#"commandhandler.adb" 119 0 0]
                                            [@GP_Id:42]
                                            [@vc:annotation]
                                            [@GP_Reason:VC_RANGE_CHECK]
                                            [@GP_Shape:B_1_declblk__if__B_4_declblk__if__call_put_line__concat__concat__concat]
                                            [@comment:                  Put_Line("Push: " & Integer'Image(Token2) & " and " & Integer'Image(Token3));                                     ^ commandhandler.adb:119:37:VC_RANGE_CHECK]
                                            [@GP_Sloc:commandhandler.adb:119:37]
                                            (Standard__positive.range_check_
                                               (((1 : int)
                                                   + (((Integer.length
                                                          (1 : int))
                                                         (6 : int))
                                                        + ((Integer.length
                                                              (Standard__string.first
                                                                 temp___628))
                                                             (Standard__string.last
                                                                temp___628))))
                                                  - (1 : int)))) in
                                       if ((Standard__string.length
                                              temp___629)
                                             = (0 : int)) then
                                         (((Standard__string.of_array
                                              temp___630)
                                             (1 : int))
                                            (5 : int))
                                       else
                                         (((Standard__string.of_array
                                              ((((((Array__Int__Standard__character__Concat.concat
                                                      (Standard__string.to_array
                                                         temp___629))
                                                     (Standard__string.first
                                                        temp___629))
                                                    (Standard__string.last
                                                       temp___629))
                                                   temp___630)
                                                  (1 : int))
                                                 (5 : int)))
                                             (Standard__string.first
                                                temp___629))
                                            ([#"commandhandler.adb" 119 0 0]
                                             [@comment:                  Put_Line("Push: " & Integer'Image(Token2) & " and " & Integer'Image(Token3));                                                             ^ commandhandler.adb:119:61:VC_RANGE_CHECK]
                                             [@GP_Id:43]
                                             [@vc:annotation]
                                             [@GP_Shape:B_1_declblk__if__B_4_declblk__if__call_put_line__concat__concat]
                                             [@GP_Reason:VC_RANGE_CHECK]
                                             [@GP_Sloc:commandhandler.adb:119:61]
                                             (Standard__positive.range_check_
                                                (((Standard__string.first
                                                     temp___629)
                                                    + (((Integer.length
                                                           (Standard__string.first
                                                              temp___629))
                                                          (Standard__string.last
                                                             temp___629))
                                                         + ((Integer.length
                                                               (1 : int))
                                                              (5 : int))))
                                                   - (1 : int))))) in
                                     if ((Standard__string.length temp___631)
                                           = (0 : int)) then
                                       (((Standard__string.of_array
                                            (Standard__string.to_array
                                               temp___632))
                                           (Standard__string.first temp___632))
                                          (Standard__string.last temp___632))
                                     else
                                       (((Standard__string.of_array
                                            ((((((Array__Int__Standard__character__Concat.concat
                                                    (Standard__string.to_array
                                                       temp___631))
                                                   (Standard__string.first
                                                      temp___631))
                                                  (Standard__string.last
                                                     temp___631))
                                                 (Standard__string.to_array
                                                    temp___632))
                                                (Standard__string.first
                                                   temp___632))
                                               (Standard__string.last
                                                  temp___632)))
                                           (Standard__string.first temp___631))
                                          ([#"commandhandler.adb" 119 0 0]
                                           [@GP_Shape:B_1_declblk__if__B_4_declblk__if__call_put_line__concat]
                                           [@comment:                  Put_Line("Push: " & Integer'Image(Token2) & " and " & Integer'Image(Token3));                                                                       ^ commandhandler.adb:119:71:VC_RANGE_CHECK]
                                           [@GP_Id:44]
                                           [@vc:annotation]
                                           [@GP_Reason:VC_RANGE_CHECK]
                                           [@GP_Sloc:commandhandler.adb:119:71]
                                           (Standard__positive.range_check_
                                              (((Standard__string.first
                                                   temp___631)
                                                  + (((Integer.length
                                                         (Standard__string.first
                                                            temp___631))
                                                        (Standard__string.last
                                                           temp___631))
                                                       + ((Integer.length
                                                             (Standard__string.first
                                                                temp___632))
                                                            (Standard__string.last
                                                               temp___632))))
                                                 - (1 : int))))))))))
                            else
                              (([@GP_Sloc:commandhandler.adb:121:19]
                                [#"commandhandler.adb" 121 0 0] ());
                               ([@GP_Sloc:commandhandler.adb:121:19]
                                [#"commandhandler.adb" 121 0 0]
                                (([#"commandhandler.adb" 121 0 0]
                                  (val _f : unit in
                                   _f));
                                 (Ada___ada__text_io__put_line__2___axiom.put_line
                                    (let temp___634 =
                                       Temp___String_Literal_633.temp___String_Literal_633
                                         () in
                                     ((Standard__string.of_array temp___634)
                                        (1 : int))
                                       (11 : int)))))))))))
                     else
                       ([@GP_Sloc:commandhandler.adb:125:10]
                        (if (([#"commandhandler.adb" 125 0 0]
                              [#"commandhandler.adb" 125 0 0]
                              (([@branch_id=1412] Main.spark__branch).bool__content <-
                                 (let temp___618 =
                                    Temp___String_Literal_614.temp___String_Literal_614
                                      () in
                                  let temp___616 =
                                    ((Standard__string.of_array
                                        (Commandhandler__execute__B_1__token1.token1.
                                           Array__Int__Standard__character.map__content))
                                       (Standard__integer__rep.to_rep
                                          Commandhandler__execute__B_1__token1.token1__first))
                                      (Standard__integer__rep.to_rep
                                         Commandhandler__execute__B_1__token1.token1__last) in
                                  (((((Array__Int__Standard__character.bool_eq
                                         (Standard__string.to_array
                                            temp___616))
                                        (Standard__string.first temp___616))
                                       (Standard__string.last temp___616))
                                      temp___618)
                                     (1 : int))
                                    (3 : int))));
                             (([@branch_id=1412] Main.spark__branch).bool__content)) then
                           (([@GP_Sloc:commandhandler.adb:126:22]
                             [#"commandhandler.adb" 126 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:126:13]
                             [#"commandhandler.adb" 126 0 0]
                             (if (([#"commandhandler.adb" 126 0 0]
                                   [#"commandhandler.adb" 126 0 0]
                                   (([@branch_id=1415] Main.spark__branch).bool__content <-
                                      (Locker__is_locked___axiom.is_locked
                                         { Locker__locker.__split_fields =
                                             (Locker__locker.__split_fields__content
                                                 Commandhandler__execute__l.l__split_fields) })));
                                  (([@branch_id=1415] Main.spark__branch).bool__content)) then
                                (([@GP_Sloc:commandhandler.adb:127:16]
                                  [#"commandhandler.adb" 127 0 0] ());
                                 ([@GP_Sloc:commandhandler.adb:127:16]
                                  [#"commandhandler.adb" 127 0 0]
                                  (([#"commandhandler.adb" 127 0 0]
                                    (val _f : unit in
                                     _f));
                                   (Ada___ada__text_io__put_line__2___axiom.put_line
                                      (let temp___603 =
                                         Temp___String_Literal_602.temp___String_Literal_602
                                           () in
                                       ((Standard__string.of_array temp___603)
                                          (1 : int))
                                         (7 : int)))));
                                 ([@GP_Sloc:commandhandler.adb:128:16]
                                  [#"commandhandler.adb" 128 0 0]
                                  [#"commandhandler.adb" 128 0 0]
                                  ((raise Return__exc) : unit)))
                              else ()));
                            ([@GP_Sloc:commandhandler.adb:131:16]
                             [#"commandhandler.adb" 131 0 0] ());
                            ([@GP_Sloc:commandhandler.adb:131:13]
                             [#"commandhandler.adb" 131 0 0]
                             (if (([#"commandhandler.adb" 131 0 0]
                                   [#"commandhandler.adb" 131 0 0]
                                   (([@branch_id=1425] Main.spark__branch).bool__content <-
                                      ((Commandhandler__execute__numtokens.numtokens.int__content)
                                         <> (1 : int))));
                                  (([@branch_id=1425] Main.spark__branch).bool__content)) then
                                (([@GP_Sloc:commandhandler.adb:132:16]
                                  [#"commandhandler.adb" 132 0 0] ());
                                 ([@GP_Sloc:commandhandler.adb:132:16]
                                  [#"commandhandler.adb" 132 0 0]
                                  (([#"commandhandler.adb" 132 0 0]
                                    (val _f : unit in
                                     _f));
                                   (Ada___ada__text_io__put_line__2___axiom.put_line
                                      (let temp___605 =
                                         Temp___String_Literal_604.temp___String_Literal_604
                                           () in
                                       ((Standard__string.of_array temp___605)
                                          (1 : int))
                                         (31 : int)))));
                                 ([@GP_Sloc:commandhandler.adb:133:16]
                                  [#"commandhandler.adb" 133 0 0]
                                  [#"commandhandler.adb" 133 0 0]
                                  ((raise Return__exc) : unit)))
                              else ()));
                            ([@GP_Sloc:commandhandler.adb:136:13]
                             [#"commandhandler.adb" 136 0 0]
                             (([#"commandhandler.adb" 137 0 0]
                               (([#"commandhandler.adb" 137 0 0]
                                 (Commandhandler__execute__B_1__B_5__a.a.int__content <-
                                    (0 : int)));
                                ([#"commandhandler.adb" 137 0 0]
                                 assume {
                                   [#"commandhandler.adb" 137 0 0]
                                   (((((Commandhandler__execute__int32___axiom.dynamic_invariant
                                          (Commandhandler__execute__B_1__B_5__a.a.int__content))
                                         True)
                                        False)
                                       True)
                                      True) })));
                              ([#"commandhandler.adb" 138 0 0]
                               [#"commandhandler.adb" 138 0 0]
                               (Commandhandler__execute__B_1__B_5__success.success.bool__content <-
                                  (Boolean.of_int (0 : int))));
                              ([@GP_Sloc:commandhandler.adb:140:33]
                               [#"commandhandler.adb" 140 0 0] ());
                              ([@GP_Sloc:commandhandler.adb:140:36]
                               [#"commandhandler.adb" 140 0 0] ());
                              ([@GP_Sloc:commandhandler.adb:140:21]
                               [#"commandhandler.adb" 140 0 0] ());
                              ([@GP_Sloc:commandhandler.adb:140:21]
                               [#"commandhandler.adb" 140 0 0]
                               (let temp___compl_606 =
                                  { Stack__stack_instance.__split_fields =
                                      (Stack__stack_instance.__split_fields__content
                                          Commandhandler__execute__sk.sk__split_fields) } in
                                let temp___compl_607 =
                                  Commandhandler__execute__B_1__B_5__a.a.int__content in
                                [#"commandhandler.adb" 140 0 0]
                                (let a = { int__content = temp___compl_607 } in
                                 let temp___compl_608 =
                                   Commandhandler__execute__B_1__B_5__success.success.bool__content in
                                 ([#"commandhandler.adb" 140 0 0]
                                  (val _f : unit in
                                   _f));
                                 ((((Stack__pop___axiom.pop
                                       { Locker__locker.__split_fields =
                                           (Locker__locker.__split_fields__content
                                               Commandhandler__execute__l.l__split_fields) })
                                      Commandhandler__execute__sk.sk__split_fields)
                                     a)
                                    Commandhandler__execute__B_1__B_5__success.success);
                                 ([#"commandhandler.adb" 140 0 0]
                                  (Commandhandler__execute__B_1__B_5__a.a.int__content <-
                                     (a.int__content))))));
                              ([@GP_Sloc:commandhandler.adb:141:19]
                               [#"commandhandler.adb" 141 0 0] ());
                              ([@GP_Sloc:commandhandler.adb:141:16]
                               [#"commandhandler.adb" 141 0 0]
                               (if (([#"commandhandler.adb" 141 0 0]
                                     [#"commandhandler.adb" 141 0 0]
                                     (([@branch_id=1452] Main.spark__branch).bool__content <-
                                        (Commandhandler__execute__B_1__B_5__success.success.bool__content)));
                                    (([@branch_id=1452] Main.spark__branch).bool__content)) then
                                  (([@GP_Sloc:commandhandler.adb:142:19]
                                    [#"commandhandler.adb" 142 0 0] ());
                                   ([@GP_Sloc:commandhandler.adb:142:19]
                                    [#"commandhandler.adb" 142 0 0]
                                    (([#"commandhandler.adb" 142 0 0]
                                      (val _f : unit in
                                       _f));
                                     (Ada___ada__text_io__put_line__2___axiom.put_line
                                        (let temp___611 =
                                           (Standard_String__Img.to_string
                                              (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                 (Commandhandler__execute__B_1__B_5__a.a.int__content)))
                                             (12 : int) in
                                         let temp___610 =
                                           Temp___String_Literal_609.temp___String_Literal_609
                                             () in
                                         ((Standard__string.of_array
                                             ((((((Array__Int__Standard__character__Concat.concat
                                                     temp___610)
                                                    (1 : int))
                                                   (5 : int))
                                                  (Standard__string.to_array
                                                     temp___611))
                                                 (Standard__string.first
                                                    temp___611))
                                                (Standard__string.last
                                                   temp___611)))
                                            (1 : int))
                                           ([#"commandhandler.adb" 142 0 0]
                                            [@GP_Shape:B_1_declblk__if__B_5_declblk__if__call_put_line__concat]
                                            [@GP_Sloc:commandhandler.adb:142:36]
                                            [@GP_Id:41]
                                            [@comment:                  Put_Line("Pop: " & Int32'Image(A));                                    ^ commandhandler.adb:142:36:VC_RANGE_CHECK]
                                            [@vc:annotation]
                                            [@GP_Reason:VC_RANGE_CHECK]
                                            (Standard__positive.range_check_
                                               (((1 : int)
                                                   + (((Integer.length
                                                          (1 : int))
                                                         (5 : int))
                                                        + ((Integer.length
                                                              (Standard__string.first
                                                                 temp___611))
                                                             (Standard__string.last
                                                                temp___611))))
                                                  - (1 : int)))))))))
                                else
                                  (([@GP_Sloc:commandhandler.adb:144:19]
                                    [#"commandhandler.adb" 144 0 0] ());
                                   ([@GP_Sloc:commandhandler.adb:144:19]
                                    [#"commandhandler.adb" 144 0 0]
                                    (([#"commandhandler.adb" 144 0 0]
                                      (val _f : unit in
                                       _f));
                                     (Ada___ada__text_io__put_line__2___axiom.put_line
                                        (let temp___613 =
                                           Temp___String_Literal_612.temp___String_Literal_612
                                             () in
                                         ((Standard__string.of_array
                                             temp___613)
                                            (1 : int))
                                           (12 : int)))))))))))
                         else
                           ([@GP_Sloc:commandhandler.adb:148:10]
                            (if (([#"commandhandler.adb" 148 0 0]
                                  [#"commandhandler.adb" 148 0 0]
                                  (([@branch_id=1467] Main.spark__branch).bool__content <-
                                     (let temp___601 =
                                        Temp___String_Literal_597.temp___String_Literal_597
                                          () in
                                      let temp___599 =
                                        ((Standard__string.of_array
                                            (Commandhandler__execute__B_1__token1.token1.
                                               Array__Int__Standard__character.map__content))
                                           (Standard__integer__rep.to_rep
                                              Commandhandler__execute__B_1__token1.token1__first))
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__last) in
                                      (((((Array__Int__Standard__character.bool_eq
                                             (Standard__string.to_array
                                                temp___599))
                                            (Standard__string.first
                                               temp___599))
                                           (Standard__string.last temp___599))
                                          temp___601)
                                         (1 : int))
                                        (7 : int))));
                                 (([@branch_id=1467] Main.spark__branch).bool__content)) then
                               (([@GP_Sloc:commandhandler.adb:149:22]
                                 [#"commandhandler.adb" 149 0 0] ());
                                ([@GP_Sloc:commandhandler.adb:149:13]
                                 [#"commandhandler.adb" 149 0 0]
                                 (if (([#"commandhandler.adb" 149 0 0]
                                       [#"commandhandler.adb" 149 0 0]
                                       (([@branch_id=1470] Main.spark__branch).bool__content <-
                                          (Locker__is_locked___axiom.is_locked
                                             { Locker__locker.__split_fields =
                                                 (Locker__locker.__split_fields__content
                                                     Commandhandler__execute__l.l__split_fields) })));
                                      (([@branch_id=1470] Main.spark__branch).bool__content)) then
                                    (([@GP_Sloc:commandhandler.adb:150:16]
                                      [#"commandhandler.adb" 150 0 0] ());
                                     ([@GP_Sloc:commandhandler.adb:150:16]
                                      [#"commandhandler.adb" 150 0 0]
                                      (([#"commandhandler.adb" 150 0 0]
                                        (val _f : unit in
                                         _f));
                                       (Ada___ada__text_io__put_line__2___axiom.put_line
                                          (let temp___584 =
                                             Temp___String_Literal_583.temp___String_Literal_583
                                               () in
                                           ((Standard__string.of_array
                                               temp___584)
                                              (1 : int))
                                             (7 : int)))));
                                     ([@GP_Sloc:commandhandler.adb:151:16]
                                      [#"commandhandler.adb" 151 0 0]
                                      [#"commandhandler.adb" 151 0 0]
                                      ((raise Return__exc) : unit)))
                                  else ()));
                                ([@GP_Sloc:commandhandler.adb:154:16]
                                 [#"commandhandler.adb" 154 0 0] ());
                                ([@GP_Sloc:commandhandler.adb:154:13]
                                 [#"commandhandler.adb" 154 0 0]
                                 (if (([#"commandhandler.adb" 154 0 0]
                                       [#"commandhandler.adb" 154 0 0]
                                       (([@branch_id=1480] Main.spark__branch).bool__content <-
                                          ((Commandhandler__execute__numtokens.numtokens.int__content)
                                             <> (2 : int))));
                                      (([@branch_id=1480] Main.spark__branch).bool__content)) then
                                    (([@GP_Sloc:commandhandler.adb:155:16]
                                      [#"commandhandler.adb" 155 0 0] ());
                                     ([@GP_Sloc:commandhandler.adb:155:16]
                                      [#"commandhandler.adb" 155 0 0]
                                      (([#"commandhandler.adb" 155 0 0]
                                        (val _f : unit in
                                         _f));
                                       (Ada___ada__text_io__put_line__2___axiom.put_line
                                          (let temp___586 =
                                             Temp___String_Literal_585.temp___String_Literal_585
                                               () in
                                           ((Standard__string.of_array
                                               temp___586)
                                              (1 : int))
                                             (31 : int)))));
                                     ([@GP_Sloc:commandhandler.adb:156:16]
                                      [#"commandhandler.adb" 156 0 0]
                                      [#"commandhandler.adb" 156 0 0]
                                      ((raise Return__exc) : unit)))
                                  else ()));
                                ([@GP_Sloc:commandhandler.adb:159:13]
                                 [#"commandhandler.adb" 159 0 0]
                                 (([#"commandhandler.adb" 161 0 0] ());
                                  ([#"commandhandler.adb" 161 0 0] ());
                                  ([#"commandhandler.adb" 160 0 0] ());
                                  ([#"commandhandler.adb" 160 0 0]
                                   (([#"commandhandler.adb" 160 0 0]
                                     (Commandhandler__execute__B_1__B_6__token2.token2.int__content <-
                                        (Stringtointeger__from_string___axiom.from_string
                                           (Mystring_instance__lines__to_string___axiom.to_string
                                              ([#"commandhandler.adb" 161 0 0]
                                               [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                       ^ commandhandler.adb:161:39:VC_PRECONDITION]
                                               [@GP_Sloc:commandhandler.adb:161:39]
                                               [@GP_Reason:VC_PRECONDITION]
                                               [@GP_Id:40]
                                               [@vc:annotation]
                                               [@GP_Shape:B_1_declblk__if__B_6_declblk__token2_decl__call_from_string__call_to_string__call_substring]
                                               (((Mystring_instance__lines__substring___axiom.substring
                                                    Commandhandler__execute__s.s)
                                                   (Standard__positive__rep.to_rep
                                                      ((Mystringtokeniser__tokenextent.__split_fields
                                                           ((Array__Int__Mystringtokeniser__tokenextent.get
                                                               (Commandhandler__execute__t.t.
                                                                  Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                              (2 : int))).
                                                         Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)))
                                                  ([#"commandhandler.adb" 161 0 0]
                                                   [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                                          ^ commandhandler.adb:161:90:VC_RANGE_CHECK]
                                                   [@GP_Shape:B_1_declblk__if__B_6_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub]
                                                   [@GP_Sloc:commandhandler.adb:161:90]
                                                   [@vc:annotation]
                                                   [@GP_Reason:VC_RANGE_CHECK]
                                                   [@GP_Id:39]
                                                   (Standard__positive.range_check_
                                                      (([#"commandhandler.adb" 161 0 0]
                                                        [@GP_Shape:B_1_declblk__if__B_6_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub__add]
                                                        [@vc:annotation]
                                                        [@GP_Reason:VC_OVERFLOW_CHECK]
                                                        [@GP_Id:38]
                                                        [@GP_Sloc:commandhandler.adb:161:76]
                                                        [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                            ^ commandhandler.adb:161:76:VC_OVERFLOW_CHECK]
                                                        (Standard__integer.range_check_
                                                           ((Standard__positive__rep.to_rep
                                                               ((Mystringtokeniser__tokenextent.__split_fields
                                                                    ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                    (2 : int))).
                                                                  Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                              + (Standard__natural__rep.to_rep
                                                                   ((Mystringtokeniser__tokenextent.__split_fields
                                                                    ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                    (2 : int))).
                                                                    Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                         - (1 : int))))))))));
                                    assume {
                                      ((((Standard__integer___axiom.dynamic_invariant
                                            (Commandhandler__execute__B_1__B_6__token2.token2.int__content))
                                           True)
                                          False)
                                         True)
                                        True }));
                                  ([#"commandhandler.adb" 162 0 0]
                                   (([#"commandhandler.adb" 162 0 0]
                                     (Commandhandler__execute__B_1__B_6__a.a.int__content <-
                                        (0 : int)));
                                    ([#"commandhandler.adb" 162 0 0]
                                     assume {
                                       [#"commandhandler.adb" 162 0 0]
                                       (((((Commandhandler__execute__int32___axiom.dynamic_invariant
                                              (Commandhandler__execute__B_1__B_6__a.a.int__content))
                                             True)
                                            False)
                                           True)
                                          True) })));
                                  ([#"commandhandler.adb" 163 0 0]
                                   [#"commandhandler.adb" 163 0 0]
                                   (Commandhandler__execute__B_1__B_6__success.success.bool__content <-
                                      (Boolean.of_int (0 : int))));
                                  ([@GP_Sloc:commandhandler.adb:165:19]
                                   [#"commandhandler.adb" 165 0 0] ());
                                  ([@GP_Sloc:commandhandler.adb:165:16]
                                   [#"commandhandler.adb" 165 0 0]
                                   (if (([#"commandhandler.adb" 165 0 0]
                                         [#"commandhandler.adb" 165 0 0]
                                         (([@branch_id=1533]
                                           Main.spark__branch).bool__content <-
                                            (((Commandhandler__execute__B_1__B_6__token2.token2.int__content)
                                                < (1 : int))
                                              ||
                                               ((Commandhandler__execute__B_1__B_6__token2.token2.int__content)
                                                  > (256 : int)))));
                                        (([@branch_id=1533]
                                          Main.spark__branch).bool__content)) then
                                      (([@GP_Sloc:commandhandler.adb:166:19]
                                        [#"commandhandler.adb" 166 0 0] ());
                                       ([@GP_Sloc:commandhandler.adb:166:19]
                                        [#"commandhandler.adb" 166 0 0]
                                        (([#"commandhandler.adb" 166 0 0]
                                          (val _f : unit in
                                           _f));
                                         (Ada___ada__text_io__put_line__2___axiom.put_line
                                            (let temp___588 =
                                               Temp___String_Literal_587.temp___String_Literal_587
                                                 () in
                                             ((Standard__string.of_array
                                                 temp___588)
                                                (1 : int))
                                               (24 : int))))))
                                    else
                                      (([@GP_Sloc:commandhandler.adb:168:36]
                                        [#"commandhandler.adb" 168 0 0] ());
                                       ([@GP_Sloc:commandhandler.adb:168:39]
                                        [#"commandhandler.adb" 168 0 0] ());
                                       ([@GP_Sloc:commandhandler.adb:168:24]
                                        [#"commandhandler.adb" 168 0 0] ());
                                       ([@GP_Sloc:commandhandler.adb:168:24]
                                        [#"commandhandler.adb" 168 0 0]
                                        (let temp___compl_589 =
                                           { Stack__stack_instance.__split_fields =
                                               (Stack__stack_instance.__split_fields__content
                                                   Commandhandler__execute__sk.sk__split_fields) } in
                                         let temp___compl_590 =
                                           Commandhandler__execute__B_1__B_6__a.a.int__content in
                                         [#"commandhandler.adb" 168 0 0]
                                         (let a =
                                            { int__content = temp___compl_590 } in
                                          let temp___compl_591 =
                                            Commandhandler__execute__B_1__B_6__success.success.bool__content in
                                          ([#"commandhandler.adb" 168 0 0]
                                           (val _f : unit in
                                            _f));
                                          ((((Stack__pop___axiom.pop
                                                { Locker__locker.__split_fields =
                                                    (Locker__locker.__split_fields__content
                                                        Commandhandler__execute__l.l__split_fields) })
                                               Commandhandler__execute__sk.sk__split_fields)
                                              a)
                                             Commandhandler__execute__B_1__B_6__success.success);
                                          ([#"commandhandler.adb" 168 0 0]
                                           (Commandhandler__execute__B_1__B_6__a.a.int__content <-
                                              (a.int__content))))));
                                       ([@GP_Sloc:commandhandler.adb:169:26]
                                        [#"commandhandler.adb" 169 0 0] ());
                                       ([@GP_Sloc:commandhandler.adb:169:19]
                                        [#"commandhandler.adb" 169 0 0]
                                        (if (([#"commandhandler.adb" 169 0 0]
                                              [#"commandhandler.adb" 169 0 0]
                                              (([@branch_id=1554]
                                                Main.spark__branch).bool__content <-
                                                 (not (Commandhandler__execute__B_1__B_6__success.success.bool__content))));
                                             (([@branch_id=1554]
                                               Main.spark__branch).bool__content)) then
                                           (([@GP_Sloc:commandhandler.adb:170:22]
                                             [#"commandhandler.adb" 170 0 0]
                                             ());
                                            ([@GP_Sloc:commandhandler.adb:170:22]
                                             [#"commandhandler.adb" 170 0 0]
                                             (([#"commandhandler.adb" 170 0 0]
                                               (val _f : unit in
                                                _f));
                                              (Ada___ada__text_io__put_line__2___axiom.put_line
                                                 (let temp___593 =
                                                    Temp___String_Literal_592.temp___String_Literal_592
                                                      () in
                                                  ((Standard__string.of_array
                                                      temp___593)
                                                     (1 : int))
                                                    (21 : int))))))
                                         else
                                           (([@GP_Sloc:commandhandler.adb:172:79]
                                             [#"commandhandler.adb" 172 0 0]
                                             ());
                                            ([@GP_Sloc:commandhandler.adb:172:32]
                                             [#"commandhandler.adb" 172 0 0]
                                             ());
                                            ([@GP_Sloc:commandhandler.adb:172:32]
                                             [#"commandhandler.adb" 172 0 0]
                                             (let temp___compl_594 =
                                                { Memorystore__database.__split_fields =
                                                    (Memorystore__database.__split_fields__content
                                                        Commandhandler__execute__d.d__split_fields) } in
                                              ([#"commandhandler.adb" 172 0 0]
                                               (val _f : unit in
                                                _f));
                                              ((((Lockmemory__put___axiom.put
                                                    { Locker__locker.__split_fields =
                                                        (Locker__locker.__split_fields__content
                                                            Commandhandler__execute__l.l__split_fields) })
                                                   Commandhandler__execute__d.d__split_fields)
                                                  ([#"commandhandler.adb" 172 0 0]
                                                   [@GP_Sloc:commandhandler.adb:172:70]
                                                   [@vc:annotation]
                                                   [@GP_Id:37]
                                                   [@GP_Reason:VC_RANGE_CHECK]
                                                   [@GP_Shape:B_1_declblk__if__B_6_declblk__if__if__call_put__typeconv]
                                                   [@comment:                     LockMemory.Put(L, D, MemoryStore.Location_Index(Token2), A);                                                                      ^ commandhandler.adb:172:70:VC_RANGE_CHECK]
                                                   (Memorystore__location_index.range_check_
                                                      (Commandhandler__execute__B_1__B_6__token2.token2.int__content))))
                                                 (Commandhandler__execute__B_1__B_6__a.a.int__content))));
                                            ([@GP_Sloc:commandhandler.adb:173:22]
                                             [#"commandhandler.adb" 173 0 0]
                                             ());
                                            ([@GP_Sloc:commandhandler.adb:173:22]
                                             [#"commandhandler.adb" 173 0 0]
                                             (([#"commandhandler.adb" 173 0 0]
                                               (val _f : unit in
                                                _f));
                                              (Ada___ada__text_io__put_line__2___axiom.put_line
                                                 (let temp___596 =
                                                    Temp___String_Literal_595.temp___String_Literal_595
                                                      () in
                                                  ((Standard__string.of_array
                                                      temp___596)
                                                     (1 : int))
                                                    (20 : int))))))))))))))
                             else
                               ([@GP_Sloc:commandhandler.adb:178:10]
                                (if (([#"commandhandler.adb" 178 0 0]
                                      [#"commandhandler.adb" 178 0 0]
                                      (([@branch_id=1577] Main.spark__branch).bool__content <-
                                         (let temp___582 =
                                            Temp___String_Literal_578.temp___String_Literal_578
                                              () in
                                          let temp___580 =
                                            ((Standard__string.of_array
                                                (Commandhandler__execute__B_1__token1.token1.
                                                   Array__Int__Standard__character.map__content))
                                               (Standard__integer__rep.to_rep
                                                  Commandhandler__execute__B_1__token1.token1__first))
                                              (Standard__integer__rep.to_rep
                                                 Commandhandler__execute__B_1__token1.token1__last) in
                                          (((((Array__Int__Standard__character.bool_eq
                                                 (Standard__string.to_array
                                                    temp___580))
                                                (Standard__string.first
                                                   temp___580))
                                               (Standard__string.last
                                                  temp___580))
                                              temp___582)
                                             (1 : int))
                                            (8 : int))));
                                     (([@branch_id=1577] Main.spark__branch).bool__content)) then
                                   (([@GP_Sloc:commandhandler.adb:179:22]
                                     [#"commandhandler.adb" 179 0 0] ());
                                    ([@GP_Sloc:commandhandler.adb:179:13]
                                     [#"commandhandler.adb" 179 0 0]
                                     (if (([#"commandhandler.adb" 179 0 0]
                                           [#"commandhandler.adb" 179 0 0]
                                           (([@branch_id=1580]
                                             Main.spark__branch).bool__content <-
                                              (Locker__is_locked___axiom.is_locked
                                                 { Locker__locker.__split_fields =
                                                     (Locker__locker.__split_fields__content
                                                         Commandhandler__execute__l.l__split_fields) })));
                                          (([@branch_id=1580]
                                            Main.spark__branch).bool__content)) then
                                        (([@GP_Sloc:commandhandler.adb:180:16]
                                          [#"commandhandler.adb" 180 0 0] ());
                                         ([@GP_Sloc:commandhandler.adb:180:16]
                                          [#"commandhandler.adb" 180 0 0]
                                          (([#"commandhandler.adb" 180 0 0]
                                            (val _f : unit in
                                             _f));
                                           (Ada___ada__text_io__put_line__2___axiom.put_line
                                              (let temp___565 =
                                                 Temp___String_Literal_564.temp___String_Literal_564
                                                   () in
                                               ((Standard__string.of_array
                                                   temp___565)
                                                  (1 : int))
                                                 (7 : int)))));
                                         ([@GP_Sloc:commandhandler.adb:181:16]
                                          [#"commandhandler.adb" 181 0 0]
                                          [#"commandhandler.adb" 181 0 0]
                                          ((raise Return__exc) : unit)))
                                      else ()));
                                    ([@GP_Sloc:commandhandler.adb:184:16]
                                     [#"commandhandler.adb" 184 0 0] ());
                                    ([@GP_Sloc:commandhandler.adb:184:13]
                                     [#"commandhandler.adb" 184 0 0]
                                     (if (([#"commandhandler.adb" 184 0 0]
                                           [#"commandhandler.adb" 184 0 0]
                                           (([@branch_id=1590]
                                             Main.spark__branch).bool__content <-
                                              ((Commandhandler__execute__numtokens.numtokens.int__content)
                                                 <> (2 : int))));
                                          (([@branch_id=1590]
                                            Main.spark__branch).bool__content)) then
                                        (([@GP_Sloc:commandhandler.adb:185:16]
                                          [#"commandhandler.adb" 185 0 0] ());
                                         ([@GP_Sloc:commandhandler.adb:185:16]
                                          [#"commandhandler.adb" 185 0 0]
                                          (([#"commandhandler.adb" 185 0 0]
                                            (val _f : unit in
                                             _f));
                                           (Ada___ada__text_io__put_line__2___axiom.put_line
                                              (let temp___567 =
                                                 Temp___String_Literal_566.temp___String_Literal_566
                                                   () in
                                               ((Standard__string.of_array
                                                   temp___567)
                                                  (1 : int))
                                                 (31 : int)))));
                                         ([@GP_Sloc:commandhandler.adb:186:16]
                                          [#"commandhandler.adb" 186 0 0]
                                          [#"commandhandler.adb" 186 0 0]
                                          ((raise Return__exc) : unit)))
                                      else ()));
                                    ([@GP_Sloc:commandhandler.adb:189:13]
                                     [#"commandhandler.adb" 189 0 0]
                                     (([#"commandhandler.adb" 191 0 0] ());
                                      ([#"commandhandler.adb" 191 0 0] ());
                                      ([#"commandhandler.adb" 190 0 0] ());
                                      ([#"commandhandler.adb" 190 0 0]
                                       (([#"commandhandler.adb" 190 0 0]
                                         (Commandhandler__execute__B_1__B_7__token2.token2.int__content <-
                                            (Stringtointeger__from_string___axiom.from_string
                                               (Mystring_instance__lines__to_string___axiom.to_string
                                                  ([#"commandhandler.adb" 191 0 0]
                                                   [@GP_Reason:VC_PRECONDITION]
                                                   [@GP_Sloc:commandhandler.adb:191:39]
                                                   [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                       ^ commandhandler.adb:191:39:VC_PRECONDITION]
                                                   [@GP_Shape:B_1_declblk__if__B_7_declblk__token2_decl__call_from_string__call_to_string__call_substring]
                                                   [@vc:annotation]
                                                   [@GP_Id:36]
                                                   (((Mystring_instance__lines__substring___axiom.substring
                                                        Commandhandler__execute__s.s)
                                                       (Standard__positive__rep.to_rep
                                                          ((Mystringtokeniser__tokenextent.__split_fields
                                                               ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                   (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                  (2 : int))).
                                                             Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)))
                                                      ([#"commandhandler.adb" 191 0 0]
                                                       [@vc:annotation]
                                                       [@GP_Sloc:commandhandler.adb:191:90]
                                                       [@GP_Shape:B_1_declblk__if__B_7_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub]
                                                       [@GP_Id:35]
                                                       [@GP_Reason:VC_RANGE_CHECK]
                                                       [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                                          ^ commandhandler.adb:191:90:VC_RANGE_CHECK]
                                                       (Standard__positive.range_check_
                                                          (([#"commandhandler.adb" 191 0 0]
                                                            [@GP_Sloc:commandhandler.adb:191:76]
                                                            [@vc:annotation]
                                                            [@GP_Reason:VC_OVERFLOW_CHECK]
                                                            [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                            ^ commandhandler.adb:191:76:VC_OVERFLOW_CHECK]
                                                            [@GP_Id:34]
                                                            [@GP_Shape:B_1_declblk__if__B_7_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub__add]
                                                            (Standard__integer.range_check_
                                                               ((Standard__positive__rep.to_rep
                                                                   ((Mystringtokeniser__tokenextent.__split_fields
                                                                    ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                    (2 : int))).
                                                                    Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                                  + (Standard__natural__rep.to_rep
                                                                    ((Mystringtokeniser__tokenextent.__split_fields
                                                                    ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                    (2 : int))).
                                                                    Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                             - (1 : int))))))))));
                                        assume {
                                          ((((Standard__integer___axiom.dynamic_invariant
                                                (Commandhandler__execute__B_1__B_7__token2.token2.int__content))
                                               True)
                                              False)
                                             True)
                                            True }));
                                      ([#"commandhandler.adb" 192 0 0]
                                       (([#"commandhandler.adb" 192 0 0]
                                         (Commandhandler__execute__B_1__B_7__a.a.int__content <-
                                            (0 : int)));
                                        ([#"commandhandler.adb" 192 0 0]
                                         assume {
                                           [#"commandhandler.adb" 192 0 0]
                                           (((((Commandhandler__execute__int32___axiom.dynamic_invariant
                                                  (Commandhandler__execute__B_1__B_7__a.a.int__content))
                                                 True)
                                                False)
                                               True)
                                              True) })));
                                      ([#"commandhandler.adb" 193 0 0]
                                       [#"commandhandler.adb" 193 0 0]
                                       (Commandhandler__execute__B_1__B_7__success.success.bool__content <-
                                          (Boolean.of_int (0 : int))));
                                      ([@GP_Sloc:commandhandler.adb:195:19]
                                       [#"commandhandler.adb" 195 0 0] ());
                                      ([@GP_Sloc:commandhandler.adb:195:16]
                                       [#"commandhandler.adb" 195 0 0]
                                       (if (([#"commandhandler.adb" 195 0 0]
                                             [#"commandhandler.adb" 195 0 0]
                                             (([@branch_id=1643]
                                               Main.spark__branch).bool__content <-
                                                (((Commandhandler__execute__B_1__B_7__token2.token2.int__content)
                                                    < (1 : int))
                                                  ||
                                                   ((Commandhandler__execute__B_1__B_7__token2.token2.int__content)
                                                      > (256 : int)))));
                                            (([@branch_id=1643]
                                              Main.spark__branch).bool__content)) then
                                          (([@GP_Sloc:commandhandler.adb:196:19]
                                            [#"commandhandler.adb" 196 0 0]
                                            ());
                                           ([@GP_Sloc:commandhandler.adb:196:19]
                                            [#"commandhandler.adb" 196 0 0]
                                            (([#"commandhandler.adb" 196 0 0]
                                              (val _f : unit in
                                               _f));
                                             (Ada___ada__text_io__put_line__2___axiom.put_line
                                                (let temp___569 =
                                                   Temp___String_Literal_568.temp___String_Literal_568
                                                     () in
                                                 ((Standard__string.of_array
                                                     temp___569)
                                                    (1 : int))
                                                   (24 : int))))))
                                        else
                                          (([@GP_Sloc:commandhandler.adb:198:19]
                                            [#"commandhandler.adb" 198 0 0]
                                            ());
                                           ([@GP_Sloc:commandhandler.adb:198:34]
                                            [#"commandhandler.adb" 198 0 0]
                                            ());
                                           ([@GP_Sloc:commandhandler.adb:198:21]
                                            [#"commandhandler.adb" 198 0 0]
                                            [#"commandhandler.adb" 198 0 0]
                                            (Commandhandler__execute__B_1__B_7__a.a.int__content <-
                                               (((Lockmemory__get___axiom.get
                                                    { Locker__locker.__split_fields =
                                                        (Locker__locker.__split_fields__content
                                                            Commandhandler__execute__l.l__split_fields) })
                                                   { Memorystore__database.__split_fields =
                                                       (Memorystore__database.__split_fields__content
                                                           Commandhandler__execute__d.d__split_fields) })
                                                  ([#"commandhandler.adb" 198 0 0]
                                                   [@vc:annotation]
                                                   [@GP_Id:32]
                                                   [@GP_Shape:B_1_declblk__if__B_7_declblk__if__a_assign__call_get__typeconv]
                                                   [@GP_Reason:VC_RANGE_CHECK]
                                                   [@comment:                  A := LockMemory.Get(L, D, MemoryStore.Location_Index(Token2));                                                                        ^ commandhandler.adb:198:72:VC_RANGE_CHECK]
                                                   [@GP_Sloc:commandhandler.adb:198:72]
                                                   (Memorystore__location_index.range_check_
                                                      (Commandhandler__execute__B_1__B_7__token2.token2.int__content))))));
                                           ([@GP_Sloc:commandhandler.adb:199:37]
                                            [#"commandhandler.adb" 199 0 0]
                                            ());
                                           ([@GP_Sloc:commandhandler.adb:199:40]
                                            [#"commandhandler.adb" 199 0 0]
                                            ());
                                           ([@GP_Sloc:commandhandler.adb:199:24]
                                            [#"commandhandler.adb" 199 0 0]
                                            ());
                                           ([@GP_Sloc:commandhandler.adb:199:24]
                                            [#"commandhandler.adb" 199 0 0]
                                            (let temp___compl_571 =
                                               { Stack__stack_instance.__split_fields =
                                                   (Stack__stack_instance.__split_fields__content
                                                       Commandhandler__execute__sk.sk__split_fields) } in
                                             let temp___compl_572 =
                                               Commandhandler__execute__B_1__B_7__success.success.bool__content in
                                             ([#"commandhandler.adb" 199 0 0]
                                              (val _f : unit in
                                               _f));
                                             ((((Stack__push___axiom.push
                                                   { Locker__locker.__split_fields =
                                                       (Locker__locker.__split_fields__content
                                                           Commandhandler__execute__l.l__split_fields) })
                                                  Commandhandler__execute__sk.sk__split_fields)
                                                 (Commandhandler__execute__B_1__B_7__a.a.int__content))
                                                Commandhandler__execute__B_1__B_7__success.success)));
                                           ([@GP_Sloc:commandhandler.adb:200:22]
                                            [#"commandhandler.adb" 200 0 0]
                                            ());
                                           ([@GP_Sloc:commandhandler.adb:200:19]
                                            [#"commandhandler.adb" 200 0 0]
                                            (if (([#"commandhandler.adb" 200 0 0]
                                                  [#"commandhandler.adb" 200 0 0]
                                                  (([@branch_id=1677]
                                                    Main.spark__branch).bool__content <-
                                                     (Commandhandler__execute__B_1__B_7__success.success.bool__content)));
                                                 (([@branch_id=1677]
                                                   Main.spark__branch).bool__content)) then
                                               (([@GP_Sloc:commandhandler.adb:201:22]
                                                 [#"commandhandler.adb" 201 0 0]
                                                 ());
                                                ([@GP_Sloc:commandhandler.adb:201:22]
                                                 [#"commandhandler.adb" 201 0 0]
                                                 (([#"commandhandler.adb" 201 0 0]
                                                   (val _f : unit in
                                                    _f));
                                                  (Ada___ada__text_io__put_line__2___axiom.put_line
                                                     (let temp___575 =
                                                        (Standard_String__Img.to_string
                                                           (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                              (Commandhandler__execute__B_1__B_7__a.a.int__content)))
                                                          (12 : int) in
                                                      let temp___574 =
                                                        Temp___String_Literal_573.temp___String_Literal_573
                                                          () in
                                                      ((Standard__string.of_array
                                                          ((((((Array__Int__Standard__character__Concat.concat
                                                                  temp___574)
                                                                 (1 : int))
                                                                (8 : int))
                                                               (Standard__string.to_array
                                                                  temp___575))
                                                              (Standard__string.first
                                                                 temp___575))
                                                             (Standard__string.last
                                                                temp___575)))
                                                         (1 : int))
                                                        ([#"commandhandler.adb" 201 0 0]
                                                         [@vc:annotation]
                                                         [@GP_Shape:B_1_declblk__if__B_7_declblk__if__if__call_put_line__concat]
                                                         [@GP_Id:33]
                                                         [@GP_Sloc:commandhandler.adb:201:42]
                                                         [@GP_Reason:VC_RANGE_CHECK]
                                                         [@comment:                     Put_Line("Loaded: " & Int32'Image(A));                                          ^ commandhandler.adb:201:42:VC_RANGE_CHECK]
                                                         (Standard__positive.range_check_
                                                            (((1 : int)
                                                                + (((Integer.length
                                                                    (1 : int))
                                                                    (8 : int))
                                                                    + 
                                                                    ((Integer.length
                                                                    (Standard__string.first
                                                                    temp___575))
                                                                    (Standard__string.last
                                                                    temp___575))))
                                                               - (1 : int)))))))))
                                             else
                                               (([@GP_Sloc:commandhandler.adb:203:22]
                                                 [#"commandhandler.adb" 203 0 0]
                                                 ());
                                                ([@GP_Sloc:commandhandler.adb:203:22]
                                                 [#"commandhandler.adb" 203 0 0]
                                                 (([#"commandhandler.adb" 203 0 0]
                                                   (val _f : unit in
                                                    _f));
                                                  (Ada___ada__text_io__put_line__2___axiom.put_line
                                                     (let temp___577 =
                                                        Temp___String_Literal_576.temp___String_Literal_576
                                                          () in
                                                      ((Standard__string.of_array
                                                          temp___577)
                                                         (1 : int))
                                                        (11 : int))))))))))))))
                                 else
                                   ([@GP_Sloc:commandhandler.adb:208:10]
                                    (if (([#"commandhandler.adb" 208 0 0]
                                          [#"commandhandler.adb" 208 0 0]
                                          (([@branch_id=1692]
                                            Main.spark__branch).bool__content <-
                                             (let temp___563 =
                                                Temp___String_Literal_559.temp___String_Literal_559
                                                  () in
                                              let temp___561 =
                                                ((Standard__string.of_array
                                                    (Commandhandler__execute__B_1__token1.token1.
                                                       Array__Int__Standard__character.map__content))
                                                   (Standard__integer__rep.to_rep
                                                      Commandhandler__execute__B_1__token1.token1__first))
                                                  (Standard__integer__rep.to_rep
                                                     Commandhandler__execute__B_1__token1.token1__last) in
                                              (((((Array__Int__Standard__character.bool_eq
                                                     (Standard__string.to_array
                                                        temp___561))
                                                    (Standard__string.first
                                                       temp___561))
                                                   (Standard__string.last
                                                      temp___561))
                                                  temp___563)
                                                 (1 : int))
                                                (6 : int))));
                                         (([@branch_id=1692]
                                           Main.spark__branch).bool__content)) then
                                       (([@GP_Sloc:commandhandler.adb:209:22]
                                         [#"commandhandler.adb" 209 0 0] ());
                                        ([@GP_Sloc:commandhandler.adb:209:13]
                                         [#"commandhandler.adb" 209 0 0]
                                         (if (([#"commandhandler.adb" 209 0 0]
                                               [#"commandhandler.adb" 209 0 0]
                                               (([@branch_id=1695]
                                                 Main.spark__branch).bool__content <-
                                                  (Locker__is_locked___axiom.is_locked
                                                     { Locker__locker.__split_fields =
                                                         (Locker__locker.__split_fields__content
                                                             Commandhandler__execute__l.l__split_fields) })));
                                              (([@branch_id=1695]
                                                Main.spark__branch).bool__content)) then
                                            (([@GP_Sloc:commandhandler.adb:210:16]
                                              [#"commandhandler.adb" 210 0 0]
                                              ());
                                             ([@GP_Sloc:commandhandler.adb:210:16]
                                              [#"commandhandler.adb" 210 0 0]
                                              (([#"commandhandler.adb" 210 0 0]
                                                (val _f : unit in
                                                 _f));
                                               (Ada___ada__text_io__put_line__2___axiom.put_line
                                                  (let temp___551 =
                                                     Temp___String_Literal_550.temp___String_Literal_550
                                                       () in
                                                   ((Standard__string.of_array
                                                       temp___551)
                                                      (1 : int))
                                                     (7 : int)))));
                                             ([@GP_Sloc:commandhandler.adb:211:16]
                                              [#"commandhandler.adb" 211 0 0]
                                              [#"commandhandler.adb" 211 0 0]
                                              ((raise Return__exc) : unit)))
                                          else ()));
                                        ([@GP_Sloc:commandhandler.adb:214:16]
                                         [#"commandhandler.adb" 214 0 0] ());
                                        ([@GP_Sloc:commandhandler.adb:214:13]
                                         [#"commandhandler.adb" 214 0 0]
                                         (if (([#"commandhandler.adb" 214 0 0]
                                               [#"commandhandler.adb" 214 0 0]
                                               (([@branch_id=1705]
                                                 Main.spark__branch).bool__content <-
                                                  ((Commandhandler__execute__numtokens.numtokens.int__content)
                                                     <> (2 : int))));
                                              (([@branch_id=1705]
                                                Main.spark__branch).bool__content)) then
                                            (([@GP_Sloc:commandhandler.adb:215:16]
                                              [#"commandhandler.adb" 215 0 0]
                                              ());
                                             ([@GP_Sloc:commandhandler.adb:215:16]
                                              [#"commandhandler.adb" 215 0 0]
                                              (([#"commandhandler.adb" 215 0 0]
                                                (val _f : unit in
                                                 _f));
                                               (Ada___ada__text_io__put_line__2___axiom.put_line
                                                  (let temp___553 =
                                                     Temp___String_Literal_552.temp___String_Literal_552
                                                       () in
                                                   ((Standard__string.of_array
                                                       temp___553)
                                                      (1 : int))
                                                     (31 : int)))));
                                             ([@GP_Sloc:commandhandler.adb:216:16]
                                              [#"commandhandler.adb" 216 0 0]
                                              [#"commandhandler.adb" 216 0 0]
                                              ((raise Return__exc) : unit)))
                                          else ()));
                                        ([@GP_Sloc:commandhandler.adb:219:13]
                                         [#"commandhandler.adb" 219 0 0]
                                         (([#"commandhandler.adb" 221 0 0] ());
                                          ([#"commandhandler.adb" 221 0 0] ());
                                          ([#"commandhandler.adb" 220 0 0] ());
                                          ([#"commandhandler.adb" 220 0 0]
                                           (([#"commandhandler.adb" 220 0 0]
                                             (Commandhandler__execute__B_1__B_8__token2.token2.int__content <-
                                                (Stringtointeger__from_string___axiom.from_string
                                                   (Mystring_instance__lines__to_string___axiom.to_string
                                                      ([#"commandhandler.adb" 221 0 0]
                                                       [@GP_Reason:VC_PRECONDITION]
                                                       [@GP_Sloc:commandhandler.adb:221:39]
                                                       [@vc:annotation]
                                                       [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                       ^ commandhandler.adb:221:39:VC_PRECONDITION]
                                                       [@GP_Id:31]
                                                       [@GP_Shape:B_1_declblk__if__B_8_declblk__token2_decl__call_from_string__call_to_string__call_substring]
                                                       (((Mystring_instance__lines__substring___axiom.substring
                                                            Commandhandler__execute__s.s)
                                                           (Standard__positive__rep.to_rep
                                                              ((Mystringtokeniser__tokenextent.__split_fields
                                                                   ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                    (2 : int))).
                                                                 Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)))
                                                          ([#"commandhandler.adb" 221 0 0]
                                                           [@vc:annotation]
                                                           [@GP_Sloc:commandhandler.adb:221:90]
                                                           [@GP_Id:30]
                                                           [@GP_Reason:VC_RANGE_CHECK]
                                                           [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                                          ^ commandhandler.adb:221:90:VC_RANGE_CHECK]
                                                           [@GP_Shape:B_1_declblk__if__B_8_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub]
                                                           (Standard__positive.range_check_
                                                              (([#"commandhandler.adb" 221 0 0]
                                                                [@GP_Sloc:commandhandler.adb:221:76]
                                                                [@vc:annotation]
                                                                [@GP_Reason:VC_OVERFLOW_CHECK]
                                                                [@GP_Shape:B_1_declblk__if__B_8_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub__add]
                                                                [@comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                            ^ commandhandler.adb:221:76:VC_OVERFLOW_CHECK]
                                                                [@GP_Id:29]
                                                                (Standard__integer.range_check_
                                                                   ((Standard__positive__rep.to_rep
                                                                    ((Mystringtokeniser__tokenextent.__split_fields
                                                                    ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                    (2 : int))).
                                                                    Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                                    + (Standard__natural__rep.to_rep
                                                                    ((Mystringtokeniser__tokenextent.__split_fields
                                                                    ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                    (2 : int))).
                                                                    Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                                 - (1 : int))))))))));
                                            assume {
                                              ((((Standard__integer___axiom.dynamic_invariant
                                                    (Commandhandler__execute__B_1__B_8__token2.token2.int__content))
                                                   True)
                                                  False)
                                                 True)
                                                True }));
                                          ([@GP_Sloc:commandhandler.adb:223:19]
                                           [#"commandhandler.adb" 223 0 0] ());
                                          ([@GP_Sloc:commandhandler.adb:223:16]
                                           [#"commandhandler.adb" 223 0 0]
                                           (if (([#"commandhandler.adb" 223 0 0]
                                                 [#"commandhandler.adb" 223 0 0]
                                                 (([@branch_id=1750]
                                                   Main.spark__branch).bool__content <-
                                                    (((Commandhandler__execute__B_1__B_8__token2.token2.int__content)
                                                        < (1 : int))
                                                      ||
                                                       ((Commandhandler__execute__B_1__B_8__token2.token2.int__content)
                                                          > (256 : int)))));
                                                (([@branch_id=1750]
                                                  Main.spark__branch).bool__content)) then
                                              (([@GP_Sloc:commandhandler.adb:224:19]
                                                [#"commandhandler.adb" 224 0 0]
                                                ());
                                               ([@GP_Sloc:commandhandler.adb:224:19]
                                                [#"commandhandler.adb" 224 0 0]
                                                (([#"commandhandler.adb" 224 0 0]
                                                  (val _f : unit in
                                                   _f));
                                                 (Ada___ada__text_io__put_line__2___axiom.put_line
                                                    (let temp___555 =
                                                       Temp___String_Literal_554.temp___String_Literal_554
                                                         () in
                                                     ((Standard__string.of_array
                                                         temp___555)
                                                        (1 : int))
                                                       (24 : int))))))
                                            else
                                              (([@GP_Sloc:commandhandler.adb:226:29]
                                                [#"commandhandler.adb" 226 0 0]
                                                ());
                                               ([@GP_Sloc:commandhandler.adb:226:29]
                                                [#"commandhandler.adb" 226 0 0]
                                                (let temp___compl_556 =
                                                   { Memorystore__database.__split_fields =
                                                       (Memorystore__database.__split_fields__content
                                                           Commandhandler__execute__d.d__split_fields) } in
                                                 ([#"commandhandler.adb" 226 0 0]
                                                  (val _f : unit in
                                                   _f));
                                                 (((Lockmemory__remove___axiom.remove
                                                      { Locker__locker.__split_fields =
                                                          (Locker__locker.__split_fields__content
                                                              Commandhandler__execute__l.l__split_fields) })
                                                     Commandhandler__execute__d.d__split_fields)
                                                    ([#"commandhandler.adb" 226 0 0]
                                                     [@vc:annotation]
                                                     [@GP_Reason:VC_RANGE_CHECK]
                                                     [@GP_Shape:B_1_declblk__if__B_8_declblk__if__call_remove__typeconv]
                                                     [@GP_Id:28]
                                                     [@GP_Sloc:commandhandler.adb:226:70]
                                                     [@comment:                  LockMemory.Remove(L, D, MemoryStore.Location_Index(Token2));                                                                      ^ commandhandler.adb:226:70:VC_RANGE_CHECK]
                                                     (Memorystore__location_index.range_check_
                                                        (Commandhandler__execute__B_1__B_8__token2.token2.int__content))))));
                                               ([@GP_Sloc:commandhandler.adb:227:19]
                                                [#"commandhandler.adb" 227 0 0]
                                                ());
                                               ([@GP_Sloc:commandhandler.adb:227:19]
                                                [#"commandhandler.adb" 227 0 0]
                                                (([#"commandhandler.adb" 227 0 0]
                                                  (val _f : unit in
                                                   _f));
                                                 (Ada___ada__text_io__put_line__2___axiom.put_line
                                                    (let temp___558 =
                                                       Temp___String_Literal_557.temp___String_Literal_557
                                                         () in
                                                     ((Standard__string.of_array
                                                         temp___558)
                                                        (1 : int))
                                                       (8 : int)))))))))))
                                     else
                                       ([@GP_Sloc:commandhandler.adb:231:10]
                                        (if (([#"commandhandler.adb" 231 0 0]
                                              [#"commandhandler.adb" 231 0 0]
                                              (([@branch_id=1779]
                                                Main.spark__branch).bool__content <-
                                                 (let temp___549 =
                                                    Temp___String_Literal_545.temp___String_Literal_545
                                                      () in
                                                  let temp___547 =
                                                    ((Standard__string.of_array
                                                        (Commandhandler__execute__B_1__token1.token1.
                                                           Array__Int__Standard__character.map__content))
                                                       (Standard__integer__rep.to_rep
                                                          Commandhandler__execute__B_1__token1.token1__first))
                                                      (Standard__integer__rep.to_rep
                                                         Commandhandler__execute__B_1__token1.token1__last) in
                                                  (((((Array__Int__Standard__character.bool_eq
                                                         (Standard__string.to_array
                                                            temp___547))
                                                        (Standard__string.first
                                                           temp___547))
                                                       (Standard__string.last
                                                          temp___547))
                                                      temp___549)
                                                     (1 : int))
                                                    (4 : int))));
                                             (([@branch_id=1779]
                                               Main.spark__branch).bool__content)) then
                                           (([@GP_Sloc:commandhandler.adb:232:22]
                                             [#"commandhandler.adb" 232 0 0]
                                             ());
                                            ([@GP_Sloc:commandhandler.adb:232:13]
                                             [#"commandhandler.adb" 232 0 0]
                                             (if (([#"commandhandler.adb" 232 0 0]
                                                   [#"commandhandler.adb" 232 0 0]
                                                   (([@branch_id=1782]
                                                     Main.spark__branch).bool__content <-
                                                      (Locker__is_locked___axiom.is_locked
                                                         { Locker__locker.__split_fields =
                                                             (Locker__locker.__split_fields__content
                                                                 Commandhandler__execute__l.l__split_fields) })));
                                                  (([@branch_id=1782]
                                                    Main.spark__branch).bool__content)) then
                                                (([@GP_Sloc:commandhandler.adb:233:16]
                                                  [#"commandhandler.adb" 233 0 0]
                                                  ());
                                                 ([@GP_Sloc:commandhandler.adb:233:16]
                                                  [#"commandhandler.adb" 233 0 0]
                                                  (([#"commandhandler.adb" 233 0 0]
                                                    (val _f : unit in
                                                     _f));
                                                   (Ada___ada__text_io__put_line__2___axiom.put_line
                                                      (let temp___544 =
                                                         Temp___String_Literal_543.temp___String_Literal_543
                                                           () in
                                                       ((Standard__string.of_array
                                                           temp___544)
                                                          (1 : int))
                                                         (7 : int)))));
                                                 ([@GP_Sloc:commandhandler.adb:234:16]
                                                  [#"commandhandler.adb" 234 0 0]
                                                  [#"commandhandler.adb" 234 0 0]
                                                  ((raise Return__exc) : unit)))
                                              else ()));
                                            ([@GP_Sloc:commandhandler.adb:237:23]
                                             [#"commandhandler.adb" 237 0 0]
                                             ());
                                            ([@GP_Sloc:commandhandler.adb:237:23]
                                             [#"commandhandler.adb" 237 0 0]
                                             (([#"commandhandler.adb" 237 0 0]
                                               (val _f : unit in
                                                _f));
                                              ((Lockmemory__print___axiom.print
                                                  { Locker__locker.__split_fields =
                                                      (Locker__locker.__split_fields__content
                                                          Commandhandler__execute__l.l__split_fields) })
                                                 { Memorystore__database.__split_fields =
                                                     (Memorystore__database.__split_fields__content
                                                         Commandhandler__execute__d.d__split_fields) }))))
                                         else
                                           ([@GP_Sloc:commandhandler.adb:239:10]
                                            (if (([#"commandhandler.adb" 239 0 0]
                                                  [#"commandhandler.adb" 239 0 0]
                                                  (([@branch_id=1799]
                                                    Main.spark__branch).bool__content <-
                                                     (let temp___542 =
                                                        Temp___String_Literal_538.temp___String_Literal_538
                                                          () in
                                                      let temp___540 =
                                                        ((Standard__string.of_array
                                                            (Commandhandler__execute__B_1__token1.token1.
                                                               Array__Int__Standard__character.map__content))
                                                           (Standard__integer__rep.to_rep
                                                              Commandhandler__execute__B_1__token1.token1__first))
                                                          (Standard__integer__rep.to_rep
                                                             Commandhandler__execute__B_1__token1.token1__last) in
                                                      (((((Array__Int__Standard__character.bool_eq
                                                             (Standard__string.to_array
                                                                temp___540))
                                                            (Standard__string.first
                                                               temp___540))
                                                           (Standard__string.last
                                                              temp___540))
                                                          temp___542)
                                                         (1 : int))
                                                        (4 : int))));
                                                 (([@branch_id=1799]
                                                   Main.spark__branch).bool__content)) then
                                               (([@GP_Sloc:commandhandler.adb:240:22]
                                                 [#"commandhandler.adb" 240 0 0]
                                                 ());
                                                ([@GP_Sloc:commandhandler.adb:240:13]
                                                 [#"commandhandler.adb" 240 0 0]
                                                 (if (([#"commandhandler.adb" 240 0 0]
                                                       [#"commandhandler.adb" 240 0 0]
                                                       (([@branch_id=1802]
                                                         Main.spark__branch).bool__content <-
                                                          (Locker__is_locked___axiom.is_locked
                                                             { Locker__locker.__split_fields =
                                                                 (Locker__locker.__split_fields__content
                                                                    Commandhandler__execute__l.l__split_fields) })));
                                                      (([@branch_id=1802]
                                                        Main.spark__branch).bool__content)) then
                                                    (([@GP_Sloc:commandhandler.adb:241:16]
                                                      [#"commandhandler.adb" 241 0 0]
                                                      ());
                                                     ([@GP_Sloc:commandhandler.adb:241:16]
                                                      [#"commandhandler.adb" 241 0 0]
                                                      (([#"commandhandler.adb" 241 0 0]
                                                        (val _f : unit in
                                                         _f));
                                                       (Ada___ada__text_io__put_line__2___axiom.put_line
                                                          (let temp___526 =
                                                             Temp___String_Literal_525.temp___String_Literal_525
                                                               () in
                                                           ((Standard__string.of_array
                                                               temp___526)
                                                              (1 : int))
                                                             (15 : int)))));
                                                     ([@GP_Sloc:commandhandler.adb:242:16]
                                                      [#"commandhandler.adb" 242 0 0]
                                                      [#"commandhandler.adb" 242 0 0]
                                                      ((raise Return__exc) :
                                                         unit)))
                                                  else ()));
                                                ([@GP_Sloc:commandhandler.adb:245:16]
                                                 [#"commandhandler.adb" 245 0 0]
                                                 ());
                                                ([@GP_Sloc:commandhandler.adb:245:13]
                                                 [#"commandhandler.adb" 245 0 0]
                                                 (if (([#"commandhandler.adb" 245 0 0]
                                                       [#"commandhandler.adb" 245 0 0]
                                                       (([@branch_id=1812]
                                                         Main.spark__branch).bool__content <-
                                                          ((Commandhandler__execute__numtokens.numtokens.int__content)
                                                             <> (2 : int))));
                                                      (([@branch_id=1812]
                                                        Main.spark__branch).bool__content)) then
                                                    (([@GP_Sloc:commandhandler.adb:246:16]
                                                      [#"commandhandler.adb" 246 0 0]
                                                      ());
                                                     ([@GP_Sloc:commandhandler.adb:246:16]
                                                      [#"commandhandler.adb" 246 0 0]
                                                      (([#"commandhandler.adb" 246 0 0]
                                                        (val _f : unit in
                                                         _f));
                                                       (Ada___ada__text_io__put_line__2___axiom.put_line
                                                          (let temp___528 =
                                                             Temp___String_Literal_527.temp___String_Literal_527
                                                               () in
                                                           ((Standard__string.of_array
                                                               temp___528)
                                                              (1 : int))
                                                             (31 : int)))));
                                                     ([@GP_Sloc:commandhandler.adb:247:16]
                                                      [#"commandhandler.adb" 247 0 0]
                                                      [#"commandhandler.adb" 247 0 0]
                                                      ((raise Return__exc) :
                                                         unit)))
                                                  else ()));
                                                ([@GP_Sloc:commandhandler.adb:250:13]
                                                 [#"commandhandler.adb" 250 0 0]
                                                 (([#"commandhandler.adb" 251 0 0]
                                                   ());
                                                  ([#"commandhandler.adb" 251 0 0]
                                                   ());
                                                  ([#"commandhandler.adb" 251 0 0]
                                                   ((let commandhandler__execute__B_1__B_9__token2__assume =
                                                       Mystring_instance__lines__to_string___axiom.to_string
                                                         ([#"commandhandler.adb" 251 0 0]
                                                          [@GP_Reason:VC_PRECONDITION]
                                                          [@comment:               Token2 : String := Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1));                                                        ^ commandhandler.adb:251:56:VC_PRECONDITION]
                                                          [@vc:annotation]
                                                          [@GP_Shape:B_1_declblk__if__B_9_declblk__token2_decl__call_to_string__call_substring]
                                                          [@GP_Sloc:commandhandler.adb:251:56]
                                                          [@GP_Id:27]
                                                          (((Mystring_instance__lines__substring___axiom.substring
                                                               Commandhandler__execute__s.s)
                                                              (Standard__positive__rep.to_rep
                                                                 ((Mystringtokeniser__tokenextent.__split_fields
                                                                    ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                    (2 : int))).
                                                                    Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)))
                                                             ([#"commandhandler.adb" 251 0 0]
                                                              [@vc:annotation]
                                                              [@GP_Sloc:commandhandler.adb:251:107]
                                                              [@GP_Shape:B_1_declblk__if__B_9_declblk__token2_decl__call_to_string__call_substring__sub]
                                                              [@GP_Reason:VC_RANGE_CHECK]
                                                              [@comment:               Token2 : String := Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1));                                                                                                           ^ commandhandler.adb:251:107:VC_RANGE_CHECK]
                                                              [@GP_Id:26]
                                                              (Standard__positive.range_check_
                                                                 (([#"commandhandler.adb" 251 0 0]
                                                                   [@comment:               Token2 : String := Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1));                                                                                             ^ commandhandler.adb:251:93:VC_OVERFLOW_CHECK]
                                                                   [@vc:annotation]
                                                                   [@GP_Reason:VC_OVERFLOW_CHECK]
                                                                   [@GP_Shape:B_1_declblk__if__B_9_declblk__token2_decl__call_to_string__call_substring__sub__add]
                                                                   [@GP_Sloc:commandhandler.adb:251:93]
                                                                   [@GP_Id:25]
                                                                   (Standard__integer.range_check_
                                                                    ((Standard__positive__rep.to_rep
                                                                    ((Mystringtokeniser__tokenextent.__split_fields
                                                                    ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                    (2 : int))).
                                                                    Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                                    + (Standard__natural__rep.to_rep
                                                                    ((Mystringtokeniser__tokenextent.__split_fields
                                                                    ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                    (2 : int))).
                                                                    Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                                    - 
                                                                    (1 : int)))))) in
                                                     (Commandhandler__execute__B_1__B_9__token2.token2.
                                                        Array__Int__Standard__character.map__content <-
                                                        (Standard__string.to_array
                                                           commandhandler__execute__B_1__B_9__token2__assume));
                                                     assume {
                                                       ((Standard__integer__rep.to_rep
                                                           Commandhandler__execute__B_1__B_9__token2.token2__first)
                                                          = (Standard__string.first
                                                               commandhandler__execute__B_1__B_9__token2__assume)) };
                                                     assume {
                                                       ((Standard__integer__rep.to_rep
                                                           Commandhandler__execute__B_1__B_9__token2.token2__last)
                                                          = (Standard__string.last
                                                               commandhandler__execute__B_1__B_9__token2__assume)) });
                                                    assume {
                                                      ((((Standard__string___axiom.dynamic_invariant
                                                            (((Standard__string.of_array
                                                                 (Commandhandler__execute__B_1__B_9__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                (Standard__integer__rep.to_rep
                                                                   Commandhandler__execute__B_1__B_9__token2.token2__first))
                                                               (Standard__integer__rep.to_rep
                                                                  Commandhandler__execute__B_1__B_9__token2.token2__last)))
                                                           True)
                                                          False)
                                                         True)
                                                        True }));
                                                  ([@GP_Sloc:commandhandler.adb:253:19]
                                                   [#"commandhandler.adb" 253 0 0]
                                                   ());
                                                  ([@GP_Sloc:commandhandler.adb:253:16]
                                                   [#"commandhandler.adb" 253 0 0]
                                                   (if (([#"commandhandler.adb" 253 0 0]
                                                         [#"commandhandler.adb" 253 0 0]
                                                         (([@branch_id=1853]
                                                           Main.spark__branch).bool__content <-
                                                            (((([#"commandhandler.adb" 253 0 0]
                                                                (begin
                                                                   ensures { true }
                                                                   let _ =
                                                                    let _ =
                                                                    ((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__B_9__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last) in
                                                                    () in
                                                                   ()
                                                                 end));
                                                               ((Integer.length
                                                                   (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first))
                                                                  (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last)))
                                                                <> (4 : int))
                                                              ||
                                                               ((let i =
                                                                   [#"commandhandler.adb" 253 0 0]
                                                                   (val _f : 
                                                                    int in
                                                                    _f) in
                                                                 if ((Boolean.andb
                                                                    ((Standard__integer__rep.to_rep
                                                                    (([#"commandhandler.adb" 253 0 0]
                                                                    (begin
                                                                    ensures { true }
                                                                    let _ =
                                                                    let _ =
                                                                    ((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__B_9__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last) in
                                                                    () in
                                                                    ()
                                                                    end));
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first))
                                                                    <= i))
                                                                    (i
                                                                    <= (Standard__integer__rep.to_rep
                                                                    (([#"commandhandler.adb" 253 0 0]
                                                                    (begin
                                                                    ensures { true }
                                                                    let _ =
                                                                    let _ =
                                                                    ((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__B_9__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last) in
                                                                    () in
                                                                    ()
                                                                    end));
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last)))) then
                                                                   ([#"commandhandler.adb" 253 0 0]
                                                                    (begin
                                                                    ensures { true }
                                                                    let _ =
                                                                    let _ =
                                                                    not (let temp___535 =
                                                                    Standard__character__rep.to_rep
                                                                    (let temp___534 =
                                                                    ((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__B_9__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last) in
                                                                    (Array__Int__Standard__character.get
                                                                    (Standard__string.to_array
                                                                    temp___534))
                                                                    (([#"commandhandler.adb" 253 0 0]
                                                                    assert {
                                                                    [#"commandhandler.adb" 253 0 0]
                                                                    [#"commandhandler.adb" 253 0 0]
                                                                    [@vc:annotation]
                                                                    [@comment:               if Token2'Length /= 4 or else (for some I in Token2'Range => Token2(I) not in '0' .. '9') then                                                                                    ^ commandhandler.adb:253:84:VC_INDEX_CHECK]
                                                                    [@GP_Shape:B_1_declblk__if__B_9_declblk__if__orelse__forsome__in__ixdcomp]
                                                                    [@GP_Sloc:commandhandler.adb:253:84]
                                                                    [@GP_Reason:VC_INDEX_CHECK]
                                                                    [@GP_Id:24]
                                                                    (((Standard__string.first
                                                                    temp___534)
                                                                    <= i) /\
                                                                    (i
                                                                    <= (Standard__string.last
                                                                    temp___534))) });
                                                                    i)) in
                                                                    (Boolean.andb
                                                                    ((48 :
                                                                    int)
                                                                    <= temp___535))
                                                                    (temp___535
                                                                    <= (57 :
                                                                    int))) in
                                                                    () in
                                                                    ()
                                                                    end))
                                                                 else ());
                                                                (val _f : 
                                                                   bool
                                                                   ensures { 
                                                                    ((result
                                                                    = True) <->
                                                                    (exists
                                                                     i : int.
                                                                    ((((Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first)
                                                                    <= i) /\
                                                                    (i
                                                                    <= (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last))) /\
                                                                    ((Boolean.notb
                                                                    (let temp___537 =
                                                                    Standard__character__rep.to_rep
                                                                    (let temp___536 =
                                                                    ((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__B_9__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last) in
                                                                    (Array__Int__Standard__character.get
                                                                    (Standard__string.to_array
                                                                    temp___536))
                                                                    i) in
                                                                    (Boolean.andb
                                                                    ((48 :
                                                                    int)
                                                                    <= temp___537))
                                                                    (temp___537
                                                                    <= (57 :
                                                                    int))))
                                                                    = True)))) } in
                                                                 _f)))));
                                                        (([@branch_id=1853]
                                                          Main.spark__branch).bool__content)) then
                                                      (([@GP_Sloc:commandhandler.adb:254:19]
                                                        [#"commandhandler.adb" 254 0 0]
                                                        ());
                                                       ([@GP_Sloc:commandhandler.adb:254:19]
                                                        [#"commandhandler.adb" 254 0 0]
                                                        (([#"commandhandler.adb" 254 0 0]
                                                          (val _f : unit in
                                                           _f));
                                                         (Ada___ada__text_io__put_line__2___axiom.put_line
                                                            (let temp___530 =
                                                               Temp___String_Literal_529.temp___String_Literal_529
                                                                 () in
                                                             ((Standard__string.of_array
                                                                 temp___530)
                                                                (1 : int))
                                                               (12 : int))))))
                                                    else
                                                      (([@GP_Sloc:commandhandler.adb:256:55]
                                                        [#"commandhandler.adb" 256 0 0]
                                                        ());
                                                       ([@GP_Sloc:commandhandler.adb:256:42]
                                                        [#"commandhandler.adb" 256 0 0]
                                                        ());
                                                       ([@GP_Sloc:commandhandler.adb:256:25]
                                                        [#"commandhandler.adb" 256 0 0]
                                                        ());
                                                       ([@GP_Sloc:commandhandler.adb:256:25]
                                                        [#"commandhandler.adb" 256 0 0]
                                                        (let temp___compl_531 =
                                                           { Locker__locker.__split_fields =
                                                               (Locker__locker.__split_fields__content
                                                                   Commandhandler__execute__l.l__split_fields) } in
                                                         ([#"commandhandler.adb" 256 0 0]
                                                          (val _f : unit in
                                                           _f));
                                                         ((Locker__reset_pwd___axiom.reset_pwd
                                                             Commandhandler__execute__l.l__split_fields)
                                                            ([#"commandhandler.adb" 256 0 0]
                                                             [@GP_Reason:VC_PRECONDITION]
                                                             [@GP_Shape:B_1_declblk__if__B_9_declblk__if__call_reset_pwd__call_from_string]
                                                             [@vc:annotation]
                                                             [@comment:                  Locker.Reset_PWD(L, PIN.From_String(Token2));                                          ^ commandhandler.adb:256:42:VC_PRECONDITION]
                                                             [@GP_Sloc:commandhandler.adb:256:42]
                                                             [@GP_Id:23]
                                                             (Pin__from_string___axiom.from_string
                                                                (((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__B_9__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first))
                                                                   (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last)))))));
                                                       ([@GP_Sloc:commandhandler.adb:257:19]
                                                        [#"commandhandler.adb" 257 0 0]
                                                        ());
                                                       ([@GP_Sloc:commandhandler.adb:257:19]
                                                        [#"commandhandler.adb" 257 0 0]
                                                        (([#"commandhandler.adb" 257 0 0]
                                                          (val _f : unit in
                                                           _f));
                                                         (Ada___ada__text_io__put_line__2___axiom.put_line
                                                            (let temp___533 =
                                                               Temp___String_Literal_532.temp___String_Literal_532
                                                                 () in
                                                             ((Standard__string.of_array
                                                                 temp___533)
                                                                (1 : int))
                                                               (20 : int)))))))))))
                                             else
                                               ([@GP_Sloc:commandhandler.adb:261:10]
                                                (if (([#"commandhandler.adb" 261 0 0]
                                                      [#"commandhandler.adb" 261 0 0]
                                                      (([@branch_id=1890]
                                                        Main.spark__branch).bool__content <-
                                                         (let temp___524 =
                                                            Temp___String_Literal_520.temp___String_Literal_520
                                                              () in
                                                          let temp___522 =
                                                            ((Standard__string.of_array
                                                                (Commandhandler__execute__B_1__token1.token1.
                                                                   Array__Int__Standard__character.map__content))
                                                               (Standard__integer__rep.to_rep
                                                                  Commandhandler__execute__B_1__token1.token1__first))
                                                              (Standard__integer__rep.to_rep
                                                                 Commandhandler__execute__B_1__token1.token1__last) in
                                                          (((((Array__Int__Standard__character.bool_eq
                                                                 (Standard__string.to_array
                                                                    temp___522))
                                                                (Standard__string.first
                                                                   temp___522))
                                                               (Standard__string.last
                                                                  temp___522))
                                                              temp___524)
                                                             (1 : int))
                                                            (6 : int))));
                                                     (([@branch_id=1890]
                                                       Main.spark__branch).bool__content)) then
                                                   (([@GP_Sloc:commandhandler.adb:262:26]
                                                     [#"commandhandler.adb" 262 0 0]
                                                     ());
                                                    ([@GP_Sloc:commandhandler.adb:262:13]
                                                     [#"commandhandler.adb" 262 0 0]
                                                     (if (([#"commandhandler.adb" 262 0 0]
                                                           [#"commandhandler.adb" 262 0 0]
                                                           (([@branch_id=1893]
                                                             Main.spark__branch).bool__content <-
                                                              (not (Locker__is_locked___axiom.is_locked
                                                                    { Locker__locker.__split_fields =
                                                                    (Locker__locker.__split_fields__content
                                                                    Commandhandler__execute__l.l__split_fields) }))));
                                                          (([@branch_id=1893]
                                                            Main.spark__branch).bool__content)) then
                                                        (([@GP_Sloc:commandhandler.adb:263:16]
                                                          [#"commandhandler.adb" 263 0 0]
                                                          ());
                                                         ([@GP_Sloc:commandhandler.adb:263:16]
                                                          [#"commandhandler.adb" 263 0 0]
                                                          (([#"commandhandler.adb" 263 0 0]
                                                            (val _f : 
                                                               unit in
                                                             _f));
                                                           (Ada___ada__text_io__put_line__2___axiom.put_line
                                                              (let temp___508 =
                                                                 Temp___String_Literal_507.temp___String_Literal_507
                                                                   () in
                                                               ((Standard__string.of_array
                                                                   temp___508)
                                                                  (1 : int))
                                                                 (17 : int)))));
                                                         ([@GP_Sloc:commandhandler.adb:264:16]
                                                          [#"commandhandler.adb" 264 0 0]
                                                          [#"commandhandler.adb" 264 0 0]
                                                          ((raise Return__exc) :
                                                             unit)))
                                                      else ()));
                                                    ([@GP_Sloc:commandhandler.adb:267:16]
                                                     [#"commandhandler.adb" 267 0 0]
                                                     ());
                                                    ([@GP_Sloc:commandhandler.adb:267:13]
                                                     [#"commandhandler.adb" 267 0 0]
                                                     (if (([#"commandhandler.adb" 267 0 0]
                                                           [#"commandhandler.adb" 267 0 0]
                                                           (([@branch_id=1904]
                                                             Main.spark__branch).bool__content <-
                                                              ((Commandhandler__execute__numtokens.numtokens.int__content)
                                                                 <> (2 : int))));
                                                          (([@branch_id=1904]
                                                            Main.spark__branch).bool__content)) then
                                                        (([@GP_Sloc:commandhandler.adb:268:16]
                                                          [#"commandhandler.adb" 268 0 0]
                                                          ());
                                                         ([@GP_Sloc:commandhandler.adb:268:16]
                                                          [#"commandhandler.adb" 268 0 0]
                                                          (([#"commandhandler.adb" 268 0 0]
                                                            (val _f : 
                                                               unit in
                                                             _f));
                                                           (Ada___ada__text_io__put_line__2___axiom.put_line
                                                              (let temp___510 =
                                                                 Temp___String_Literal_509.temp___String_Literal_509
                                                                   () in
                                                               ((Standard__string.of_array
                                                                   temp___510)
                                                                  (1 : int))
                                                                 (31 : int)))));
                                                         ([@GP_Sloc:commandhandler.adb:269:16]
                                                          [#"commandhandler.adb" 269 0 0]
                                                          [#"commandhandler.adb" 269 0 0]
                                                          ((raise Return__exc) :
                                                             unit)))
                                                      else ()));
                                                    ([@GP_Sloc:commandhandler.adb:272:13]
                                                     [#"commandhandler.adb" 272 0 0]
                                                     (([#"commandhandler.adb" 273 0 0]
                                                       ());
                                                      ([#"commandhandler.adb" 273 0 0]
                                                       ());
                                                      ([#"commandhandler.adb" 273 0 0]
                                                       ((let commandhandler__execute__B_1__B_10__token2__assume =
                                                           Mystring_instance__lines__to_string___axiom.to_string
                                                             ([#"commandhandler.adb" 273 0 0]
                                                              [@GP_Reason:VC_PRECONDITION]
                                                              [@GP_Shape:B_1_declblk__if__B_10_declblk__token2_decl__call_to_string__call_substring]
                                                              [@vc:annotation]
                                                              [@comment:               Token2 : String := Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1));                                                        ^ commandhandler.adb:273:56:VC_PRECONDITION]
                                                              [@GP_Sloc:commandhandler.adb:273:56]
                                                              [@GP_Id:22]
                                                              (((Mystring_instance__lines__substring___axiom.substring
                                                                   Commandhandler__execute__s.s)
                                                                  (Standard__positive__rep.to_rep
                                                                    ((Mystringtokeniser__tokenextent.__split_fields
                                                                    ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                    (2 : int))).
                                                                    Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)))
                                                                 ([#"commandhandler.adb" 273 0 0]
                                                                  [@GP_Sloc:commandhandler.adb:273:107]
                                                                  [@vc:annotation]
                                                                  [@GP_Reason:VC_RANGE_CHECK]
                                                                  [@GP_Id:21]
                                                                  [@comment:               Token2 : String := Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1));                                                                                                           ^ commandhandler.adb:273:107:VC_RANGE_CHECK]
                                                                  [@GP_Shape:B_1_declblk__if__B_10_declblk__token2_decl__call_to_string__call_substring__sub]
                                                                  (Standard__positive.range_check_
                                                                    (([#"commandhandler.adb" 273 0 0]
                                                                    [@GP_Shape:B_1_declblk__if__B_10_declblk__token2_decl__call_to_string__call_substring__sub__add]
                                                                    [@comment:               Token2 : String := Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1));                                                                                             ^ commandhandler.adb:273:93:VC_OVERFLOW_CHECK]
                                                                    [@GP_Sloc:commandhandler.adb:273:93]
                                                                    [@vc:annotation]
                                                                    [@GP_Reason:VC_OVERFLOW_CHECK]
                                                                    [@GP_Id:20]
                                                                    (Standard__integer.range_check_
                                                                    ((Standard__positive__rep.to_rep
                                                                    ((Mystringtokeniser__tokenextent.__split_fields
                                                                    ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                    (2 : int))).
                                                                    Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                                    + (Standard__natural__rep.to_rep
                                                                    ((Mystringtokeniser__tokenextent.__split_fields
                                                                    ((Array__Int__Mystringtokeniser__tokenextent.get
                                                                    (Commandhandler__execute__t.t.
                                                                    Array__Int__Mystringtokeniser__tokenextent.map__content))
                                                                    (2 : int))).
                                                                    Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                                    - (1 :
                                                                    int)))))) in
                                                         (Commandhandler__execute__B_1__B_10__token2.token2.
                                                            Array__Int__Standard__character.map__content <-
                                                            (Standard__string.to_array
                                                               commandhandler__execute__B_1__B_10__token2__assume));
                                                         assume {
                                                           ((Standard__integer__rep.to_rep
                                                               Commandhandler__execute__B_1__B_10__token2.token2__first)
                                                              = (Standard__string.first
                                                                   commandhandler__execute__B_1__B_10__token2__assume)) };
                                                         assume {
                                                           ((Standard__integer__rep.to_rep
                                                               Commandhandler__execute__B_1__B_10__token2.token2__last)
                                                              = (Standard__string.last
                                                                   commandhandler__execute__B_1__B_10__token2__assume)) });
                                                        assume {
                                                          ((((Standard__string___axiom.dynamic_invariant
                                                                (((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__B_10__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first))
                                                                   (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last)))
                                                               True)
                                                              False)
                                                             True)
                                                            True }));
                                                      ([@GP_Sloc:commandhandler.adb:275:19]
                                                       [#"commandhandler.adb" 275 0 0]
                                                       ());
                                                      ([@GP_Sloc:commandhandler.adb:275:16]
                                                       [#"commandhandler.adb" 275 0 0]
                                                       (if (([#"commandhandler.adb" 275 0 0]
                                                             [#"commandhandler.adb" 275 0 0]
                                                             (([@branch_id=1945]
                                                               Main.spark__branch).bool__content <-
                                                                (((([#"commandhandler.adb" 275 0 0]
                                                                    (begin
                                                                    ensures { true }
                                                                    let _ =
                                                                    let _ =
                                                                    ((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__B_10__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last) in
                                                                    () in
                                                                    ()
                                                                    end));
                                                                   ((Integer.length
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last)))
                                                                    <> 
                                                                    (4 : int))
                                                                  ||
                                                                   ((let i =
                                                                    [#"commandhandler.adb" 275 0 0]
                                                                    (val _f : 
                                                                    int in
                                                                    _f) in
                                                                    if 
                                                                    ((Boolean.andb
                                                                    ((Standard__integer__rep.to_rep
                                                                    (([#"commandhandler.adb" 275 0 0]
                                                                    (begin
                                                                    ensures { true }
                                                                    let _ =
                                                                    let _ =
                                                                    ((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__B_10__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last) in
                                                                    () in
                                                                    ()
                                                                    end));
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first))
                                                                    <= i))
                                                                    (i
                                                                    <= (Standard__integer__rep.to_rep
                                                                    (([#"commandhandler.adb" 275 0 0]
                                                                    (begin
                                                                    ensures { true }
                                                                    let _ =
                                                                    let _ =
                                                                    ((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__B_10__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last) in
                                                                    () in
                                                                    ()
                                                                    end));
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last)))) then
                                                                    ([#"commandhandler.adb" 275 0 0]
                                                                    (begin
                                                                    ensures { true }
                                                                    let _ =
                                                                    let _ =
                                                                    not (let temp___517 =
                                                                    Standard__character__rep.to_rep
                                                                    (let temp___516 =
                                                                    ((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__B_10__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last) in
                                                                    (Array__Int__Standard__character.get
                                                                    (Standard__string.to_array
                                                                    temp___516))
                                                                    (([#"commandhandler.adb" 275 0 0]
                                                                    assert {
                                                                    [#"commandhandler.adb" 275 0 0]
                                                                    [#"commandhandler.adb" 275 0 0]
                                                                    [@comment:               if Token2'Length /= 4 or else (for some I in Token2'Range => Token2(I) not in '0' .. '9') then                                                                                    ^ commandhandler.adb:275:84:VC_INDEX_CHECK]
                                                                    [@GP_Id:19]
                                                                    [@vc:annotation]
                                                                    [@GP_Sloc:commandhandler.adb:275:84]
                                                                    [@GP_Reason:VC_INDEX_CHECK]
                                                                    [@GP_Shape:B_1_declblk__if__B_10_declblk__if__orelse__forsome__in__ixdcomp]
                                                                    (((Standard__string.first
                                                                    temp___516)
                                                                    <= i) /\
                                                                    (i
                                                                    <= (Standard__string.last
                                                                    temp___516))) });
                                                                    i)) in
                                                                    (Boolean.andb
                                                                    ((48 :
                                                                    int)
                                                                    <= temp___517))
                                                                    (temp___517
                                                                    <= (57 :
                                                                    int))) in
                                                                    () in
                                                                    ()
                                                                    end))
                                                                    else ());
                                                                    (val _f : 
                                                                    bool
                                                                    ensures { 
                                                                    ((result
                                                                    = True) <->
                                                                    (exists
                                                                     i : int.
                                                                    ((((Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first)
                                                                    <= i) /\
                                                                    (i
                                                                    <= (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last))) /\
                                                                    ((Boolean.notb
                                                                    (let temp___519 =
                                                                    Standard__character__rep.to_rep
                                                                    (let temp___518 =
                                                                    ((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__B_10__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last) in
                                                                    (Array__Int__Standard__character.get
                                                                    (Standard__string.to_array
                                                                    temp___518))
                                                                    i) in
                                                                    (Boolean.andb
                                                                    ((48 :
                                                                    int)
                                                                    <= temp___519))
                                                                    (temp___519
                                                                    <= (57 :
                                                                    int))))
                                                                    = True)))) } in
                                                                    _f)))));
                                                            (([@branch_id=1945]
                                                              Main.spark__branch).bool__content)) then
                                                          (([@GP_Sloc:commandhandler.adb:276:19]
                                                            [#"commandhandler.adb" 276 0 0]
                                                            ());
                                                           ([@GP_Sloc:commandhandler.adb:276:19]
                                                            [#"commandhandler.adb" 276 0 0]
                                                            (([#"commandhandler.adb" 276 0 0]
                                                              (val _f : 
                                                                 unit in
                                                               _f));
                                                             (Ada___ada__text_io__put_line__2___axiom.put_line
                                                                (let temp___512 =
                                                                   Temp___String_Literal_511.temp___String_Literal_511
                                                                    () in
                                                                 ((Standard__string.of_array
                                                                    temp___512)
                                                                    (1 : int))
                                                                   (12 : int))))))
                                                        else
                                                          (([@GP_Sloc:commandhandler.adb:278:56]
                                                            [#"commandhandler.adb" 278 0 0]
                                                            ());
                                                           ([@GP_Sloc:commandhandler.adb:278:43]
                                                            [#"commandhandler.adb" 278 0 0]
                                                            ());
                                                           ([@GP_Sloc:commandhandler.adb:278:25]
                                                            [#"commandhandler.adb" 278 0 0]
                                                            ());
                                                           ([@GP_Sloc:commandhandler.adb:278:25]
                                                            [#"commandhandler.adb" 278 0 0]
                                                            (let temp___compl_513 =
                                                               { Locker__locker.__split_fields =
                                                                   (Locker__locker.__split_fields__content
                                                                    Commandhandler__execute__l.l__split_fields) } in
                                                             ([#"commandhandler.adb" 278 0 0]
                                                              (val _f : 
                                                                 unit in
                                                               _f));
                                                             ((Locker__try_unlock___axiom.try_unlock
                                                                 Commandhandler__execute__l.l__split_fields)
                                                                ([#"commandhandler.adb" 278 0 0]
                                                                 [@GP_Reason:VC_PRECONDITION]
                                                                 [@GP_Id:18]
                                                                 [@vc:annotation]
                                                                 [@GP_Shape:B_1_declblk__if__B_10_declblk__if__call_try_unlock__call_from_string]
                                                                 [@comment:                  Locker.Try_Unlock(L, PIN.From_String(Token2));                                           ^ commandhandler.adb:278:43:VC_PRECONDITION]
                                                                 [@GP_Sloc:commandhandler.adb:278:43]
                                                                 (Pin__from_string___axiom.from_string
                                                                    (((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__B_10__token2.token2.
                                                                    Array__Int__Standard__character.map__content))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first))
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last)))))));
                                                           ([@GP_Sloc:commandhandler.adb:279:19]
                                                            [#"commandhandler.adb" 279 0 0]
                                                            ());
                                                           ([@GP_Sloc:commandhandler.adb:279:19]
                                                            [#"commandhandler.adb" 279 0 0]
                                                            (([#"commandhandler.adb" 279 0 0]
                                                              (val _f : 
                                                                 unit in
                                                               _f));
                                                             (Ada___ada__text_io__put_line__2___axiom.put_line
                                                                (let temp___515 =
                                                                   Temp___String_Literal_514.temp___String_Literal_514
                                                                    () in
                                                                 ((Standard__string.of_array
                                                                    temp___515)
                                                                    (1 : int))
                                                                   (20 : int)))))))))))
                                                 else
                                                   ([@GP_Sloc:commandhandler.adb:283:10]
                                                    (if (([#"commandhandler.adb" 283 0 0]
                                                          [#"commandhandler.adb" 283 0 0]
                                                          (([@branch_id=1982]
                                                            Main.spark__branch).bool__content <-
                                                             (let temp___506 =
                                                                Temp___String_Literal_502.temp___String_Literal_502
                                                                  () in
                                                              let temp___504 =
                                                                ((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__token1.token1.
                                                                    Array__Int__Standard__character.map__content))
                                                                   (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__token1.token1__first))
                                                                  (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__token1.token1__last) in
                                                              (((((Array__Int__Standard__character.bool_eq
                                                                    (Standard__string.to_array
                                                                    temp___504))
                                                                    (Standard__string.first
                                                                    temp___504))
                                                                   (Standard__string.last
                                                                    temp___504))
                                                                  temp___506)
                                                                 (1 : int))
                                                                (4 : int))));
                                                         (([@branch_id=1982]
                                                           Main.spark__branch).bool__content)) then
                                                       (([@GP_Sloc:commandhandler.adb:284:13]
                                                         [#"commandhandler.adb" 284 0 0]
                                                         ());
                                                        ([@GP_Sloc:commandhandler.adb:284:13]
                                                         [#"commandhandler.adb" 284 0 0]
                                                         (([#"commandhandler.adb" 284 0 0]
                                                           (val _f : 
                                                              unit in
                                                            _f));
                                                          (Ada___ada__text_io__put_line__2___axiom.put_line
                                                             (let temp___501 =
                                                                Temp___String_Literal_500.temp___String_Literal_500
                                                                  () in
                                                              ((Standard__string.of_array
                                                                  temp___501)
                                                                 (1 : int))
                                                                (10 : int)))));
                                                        ([@GP_Sloc:commandhandler.adb:285:13]
                                                         [#"commandhandler.adb" 285 0 0]
                                                         [#"commandhandler.adb" 285 0 0]
                                                         ((raise Return__exc) :
                                                            unit)))
                                                     else
                                                       (([@GP_Sloc:commandhandler.adb:288:13]
                                                         [#"commandhandler.adb" 288 0 0]
                                                         ());
                                                        ([@GP_Sloc:commandhandler.adb:288:13]
                                                         [#"commandhandler.adb" 288 0 0]
                                                         (([#"commandhandler.adb" 288 0 0]
                                                           (val _f : 
                                                              unit in
                                                            _f));
                                                          (Ada___ada__text_io__put_line__2___axiom.put_line
                                                             (let temp___499 =
                                                                ((Standard__string.of_array
                                                                    (Commandhandler__execute__B_1__token1.token1.
                                                                    Array__Int__Standard__character.map__content))
                                                                   (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__token1.token1__first))
                                                                  (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__token1.token1__last) in
                                                              let temp___498 =
                                                                Temp___String_Literal_497.temp___String_Literal_497
                                                                  () in
                                                              ((Standard__string.of_array
                                                                  ((((((Array__Int__Standard__character__Concat.concat
                                                                    temp___498)
                                                                    (1 : int))
                                                                    (17 : int))
                                                                    (Standard__string.to_array
                                                                    temp___499))
                                                                    (Standard__string.first
                                                                    temp___499))
                                                                    (Standard__string.last
                                                                    temp___499)))
                                                                 (1 : int))
                                                                ([#"commandhandler.adb" 288 0 0]
                                                                 [@GP_Id:17]
                                                                 [@vc:annotation]
                                                                 [@GP_Reason:VC_RANGE_CHECK]
                                                                 [@GP_Shape:B_1_declblk__if__call_put_line__concat]
                                                                 [@comment:            Put_Line("Unknown command: " & Token1);                                          ^ commandhandler.adb:288:42:VC_RANGE_CHECK]
                                                                 [@GP_Sloc:commandhandler.adb:288:42]
                                                                 (Standard__positive.range_check_
                                                                    (((1 :
                                                                    int)
                                                                    + (((Integer.length
                                                                    (1 : int))
                                                                    (17 : int))
                                                                    + ((Integer.length
                                                                    (Standard__string.first
                                                                    temp___499))
                                                                    (Standard__string.last
                                                                    temp___499))))
                                                                    - (1 :
                                                                    int)))))))))))))))))))))))))))))))));
         (raise Return__exc)
       with Return__exc -> ()
       end)))
end
