{
  "spark": [
    {
      "name": "Main",
      "sloc": [
        {
          "file": "main.adb",
          "line": 22
        }
      ],
      "spark": "all"
    }
  ],
  "flow": [
    {
      "file": "main.adb",
      "line": 48,
      "col": 22,
      "rule": "UNINITIALIZED",
      "severity": "high",
      "entity": {
        "name": "Main",
        "sloc": [
          {
            "file": "main.adb",
            "line": 22
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "main__flow__0.trace",
      "msg_id": 0,
      "how_proved": "flow"
    },
    {
      "file": "main.adb",
      "line": 31,
      "col": 4,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Main",
        "sloc": [
          {
            "file": "main.adb",
            "line": 22
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "main.adb",
      "line": 29,
      "col": 4,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Main",
        "sloc": [
          {
            "file": "main.adb",
            "line": 22
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "main.adb",
      "line": 30,
      "col": 4,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Main",
        "sloc": [
          {
            "file": "main.adb",
            "line": 22
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    }
  ],
  "session_map": {
    " 1": "C:\\Users\\29259\\Desktop\\25s1\\Hise\\A3\\hise_a3\\obj\\gnatprove\\main"
  },
  "proof": [
    {
      "file": "main.adb",
      "line": 48,
      "col": 27,
      "rule": "VC_PRECONDITION",
      "severity": "info",
      "entity": {
        "name": "Main",
        "sloc": [
          {
            "file": "main.adb",
            "line": 22
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 1,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 1,
              "time": 9.00000000000000E-02
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 1,
              "time": 5.00000000000000E-02
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "main.adb",
      "check_line": 48,
      "check_col": 27,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 3,
          "max_steps": 1,
          "max_time": 1.09999999403954E-01
        }
      }
    },
    {
      "file": "main.adb",
      "line": 44,
      "col": 49,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Main",
        "sloc": [
          {
            "file": "main.adb",
            "line": 22
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 1,
              "time": 6.00000000000000E-02
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 1,
              "time": 3.00000000000000E-02
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "main.adb",
      "check_line": 44,
      "check_col": 49,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 5.99999986588955E-02
        }
      }
    },
    {
      "file": "main.adb",
      "line": 41,
      "col": 49,
      "rule": "VC_PRECONDITION",
      "severity": "info",
      "entity": {
        "name": "Main",
        "sloc": [
          {
            "file": "main.adb",
            "line": 22
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 1,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "main.adb",
      "check_line": 41,
      "check_col": 49,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    }
  ],
  "assumptions": [
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "Ada.Text_IO.Put",
            "sloc": [
              {
                "file": "a-textio.ads",
                "line": 463
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "Ada.Text_IO.Put_Line",
            "sloc": [
              {
                "file": "a-textio.ads",
                "line": 506
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "Ada.Text_IO.Put",
            "sloc": [
              {
                "file": "a-textio.ads",
                "line": 463
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "Ada.Text_IO.Put_Line",
            "sloc": [
              {
                "file": "a-textio.ads",
                "line": 506
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "CommandHandler.Execute",
            "sloc": [
              {
                "file": "commandhandler.ads",
                "line": 9
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "Locker.Init",
            "sloc": [
              {
                "file": "locker.ads",
                "line": 9
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "Locker.Is_Locked",
            "sloc": [
              {
                "file": "locker.ads",
                "line": 15
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "MemoryStore.Init",
            "sloc": [
              {
                "file": "memorystore.ads",
                "line": 18
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "MyCommandLine.Argument",
            "sloc": [
              {
                "file": "mycommandline.ads",
                "line": 14
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "MyCommandLine.Argument_Count",
            "sloc": [
              {
                "file": "mycommandline.ads",
                "line": 10
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "MyString_Instance.Lines.Get_Line",
            "sloc": [
              {
                "file": "mystring.ads",
                "line": 45
              },
              {
                "file": "mystring_instance.ads",
                "line": 4
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "PIN.From_String",
            "sloc": [
              {
                "file": "pin.ads",
                "line": 5
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "Stack.Init",
            "sloc": [
              {
                "file": "stack.ads",
                "line": 20
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "Ada.Text_IO.Put",
            "sloc": [
              {
                "file": "a-textio.ads",
                "line": 463
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "Ada.Text_IO.Put_Line",
            "sloc": [
              {
                "file": "a-textio.ads",
                "line": 506
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "CommandHandler.Execute",
            "sloc": [
              {
                "file": "commandhandler.ads",
                "line": 9
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "Locker.Init",
            "sloc": [
              {
                "file": "locker.ads",
                "line": 9
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "Locker.Is_Locked",
            "sloc": [
              {
                "file": "locker.ads",
                "line": 15
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "MemoryStore.Init",
            "sloc": [
              {
                "file": "memorystore.ads",
                "line": 18
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "MyCommandLine.Argument",
            "sloc": [
              {
                "file": "mycommandline.ads",
                "line": 14
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "MyCommandLine.Argument_Count",
            "sloc": [
              {
                "file": "mycommandline.ads",
                "line": 10
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "MyString_Instance.Lines.Get_Line",
            "sloc": [
              {
                "file": "mystring.ads",
                "line": 45
              },
              {
                "file": "mystring_instance.ads",
                "line": 4
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "PIN.From_String",
            "sloc": [
              {
                "file": "pin.ads",
                "line": 5
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "Stack.Init",
            "sloc": [
              {
                "file": "stack.ads",
                "line": 20
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "Main",
          "sloc": [
            {
              "file": "main.adb",
              "line": 22
            }
          ]
        }
      }
    }
  ],
  "timings": {
    "gnatwhy3.transformations.inline_trivial": 0.00000000000000E+00,
    "codepeer results": 2.90500000119209E-04,
    "init_why_sections": 6.05400011409074E-04,
    "gnatwhy3.transformations.detect_polymorphism": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_literal": 0.00000000000000E+00,
    "gnatwhy3.run_vcs": 1.71875000000000E-01,
    "globals (advanced)": 4.07407991588116E-02,
    "gnatwhy3.transformations.eliminate_algebraic_if_poly": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_definition_if_poly": 1.56250000000000E-02,
    "flow analysis": 4.37919981777668E-03,
    "gnatwhy3.transformations.simplify_formula": 0.00000000000000E+00,
    "marking": 2.41400004597381E-04,
    "translation of standard": 3.40840010903776E-03,
    "properties (advanced)": 2.54100013989955E-04,
    "gnatwhy3.register_vcs": 1.56250000000000E-02,
    "gnatwhy3.transformations.eliminate_epsilon": 0.00000000000000E+00,
    "globals (basic)": 7.11321011185646E-02,
    "gnatwhy3.schedule_vcs": 0.00000000000000E+00,
    "gnatwhy3.transformations.prepare_for_counterexmp": 0.00000000000000E+00,
    "gnatwhy3.save_session": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_inductive": 0.00000000000000E+00,
    "gnatwhy3.transformations.encoding_smt_if_poly": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_unused_hypo": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_builtin": 0.00000000000000E+00,
    "gnatwhy3.transformations.discriminate_if_poly": 0.00000000000000E+00,
    "gnatwhy3.init": 7.81250000000000E-02
  }
}
