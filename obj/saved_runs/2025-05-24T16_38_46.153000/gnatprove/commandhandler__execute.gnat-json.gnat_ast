(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type integer  = <range -2147483648 2147483647>
  
  function   first () requires { True } ensures  { True } returns
    int = -2147483648
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = integer,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type integer__ref  = { mutable integer__content : integer }
  
  function   integer__ref_integer__content__projection (a : integer__ref)
    requires {  } ensures  {  } returns integer = a.integer__content
  
  meta model_projection function integer__ref_integer__content__projection
  
  meta inline:no function integer__ref_integer__content__projection
  
  function   integer__havoc (x : integer__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type positive  = <range 1 2147483647>
  
  function   first () requires { True } ensures  { True } returns int = 1
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = positive,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type positive__ref  = { mutable positive__content : positive }
  
  function   positive__ref_positive__content__projection (a : positive__ref)
    requires {  } ensures  {  } returns positive = a.positive__content
  
  meta model_projection function positive__ref_positive__content__projection
  
  meta inline:no function positive__ref_positive__content__projection
  
  function   positive__havoc (x : positive__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type character  
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 255
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = character,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type character__ref  = { mutable character__content : character }
  
  function   character__ref_character__content__projection
    (a : character__ref) requires {  } ensures  {  } returns
    character = a.character__content
  
  meta model_projection function character__ref_character__content__projection
  
  meta inline:no function character__ref_character__content__projection
  
  function   character__havoc (x : character__ref) requires {  } ensures 
    {  } returns unit

end

(* Module defining to_rep/of_rep for type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character__rep
  
  use        Standard__character
  use import _gnatprove_standard.Main
  use import int.Int
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Standard__character.character,
    predicate in_range = Standard__character.in_range
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              --pp_universal_quantif NOT IMPLEMENTED)
  
  axiom bool_eq_rev : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module defining to_rep/of_rep for type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer__rep
  
  use        Standard__integer
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Standard__integer.integer) requires { True }
    ensures  { True } returns int = (Standard__integer.integer'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Standard__integer.integer,
    predicate in_range = Standard__integer.in_range, function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer
  use        Standard__positive
  use        Standard__character
  use        Array__Int__Standard__character
  use        Standard__integer__rep
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   index_1_id (x : int) requires { True } ensures  { True } returns
    int = x
  
  clone export ada__model.Unconstr_Array with axiom . type map = Array__Int__Standard__character.map,
    function array_bool_eq = Array__Int__Standard__character.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__positive.dynamic_property,
    predicate index_rep_le = <=
  
  type string__  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  meta model_projection function to_array
  
  meta inline:no function to_array
  
  meta model_projection function first
  
  meta inline:no function first
  
  meta model_projection function last
  
  meta inline:no function last
  
  type string____ref  = { mutable string____content : string__ }
  
  function   string____ref_string____content__projection (a : string____ref)
    requires {  } ensures  {  } returns string__ = a.string____content
  
  meta model_projection function string____ref_string____content__projection
  
  meta inline:no function string____ref_string____content__projection
  
  function   string____havoc (x : string____ref) requires {  } ensures  {  }
    returns unit

end

(* Module defining to_string/of_string functions, created in Gnat2Why.Types.Translate_Type *)
module Standard_String__Img
  
  use import int.Int
  use        Standard__string
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_string (x : _gnatprove_standard.Main.__image s : int)
    requires { True } ensures  { True } returns Standard__string.string__
  
  function   from_string (x : Standard__string.string__) requires { True }
    ensures  { True } returns _gnatprove_standard.Main.__image
  
  axiom to_string__first : --pp_universal_quantif NOT IMPLEMENTED
  
  axiom to_string__length : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_18) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_14) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_15) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_16) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_17) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_14) = True) \/
          (Standard__integer.first <= Standard__integer.last))
       then
       (Standard__integer.dynamic_property Standard__integer.first
          Standard__integer.last ([mlw:proxy_symbol]
          [introduced] temp___expr_18))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_19) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_20) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type natural  = <range 0 2147483647>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = natural,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type natural__ref  = { mutable natural__content : natural }
  
  function   natural__ref_natural__content__projection (a : natural__ref)
    requires {  } ensures  {  } returns natural = a.natural__content
  
  meta model_projection function natural__ref_natural__content__projection
  
  meta inline:no function natural__ref_natural__content__projection
  
  function   natural__havoc (x : natural__ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__natural
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_46) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_42) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_43) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_44) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_45) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_42) = True) \/
          (Standard__natural.first <= Standard__natural.last))
       then
       (Standard__natural.dynamic_property Standard__natural.first
          Standard__natural.last ([mlw:proxy_symbol]
          [introduced] temp___expr_46))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_47) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_48) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module defining to_rep/of_rep for type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural__rep
  
  use        Standard__natural
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Standard__natural.natural) requires { True }
    ensures  { True } returns int = (Standard__natural.natural'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Standard__natural.natural,
    predicate in_range = Standard__natural.in_range, function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module defining to_rep/of_rep for type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive__rep
  
  use        Standard__positive
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Standard__positive.positive) requires { True }
    ensures  { True } returns int = (Standard__positive.positive'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Standard__positive.positive,
    predicate in_range = Standard__positive.in_range,
    function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing concatenation for the array theory associated to type "string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__character__Concat
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Array__Int__Standard__character
  
  function   index_Index_one () requires { True } ensures  { True } returns
    int = 1
  
  clone export _gnatprove_standard.Array__1__Concat with axiom . type component_type = Array__Int__Standard__character.component_type,
    type map = Array__Int__Standard__character.map, type Index.t = int,
    predicate Index.le = <=, predicate Index.lt = <, predicate Index.gt = >,
    function Index.add = +, function Index.sub = -,
    function Index.one = index_Index_one,
    function get = Array__Int__Standard__character.get

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__positive
  use        Standard__string
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_103) : Standard__string.string__
    ([mlw:proxy_symbol] [introduced] temp___is_init_99) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_100) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_101) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_102) : bool) requires
    { True } ensures  { True } returns
     = (if ([mlw:proxy_symbol] [introduced] temp___skip_constant_100) then
       True  else
       (Standard__string.dynamic_property Standard__positive.first
          Standard__positive.last
          (Standard__string.first ([mlw:proxy_symbol]
             [introduced] temp___expr_103))
          (Standard__string.last ([mlw:proxy_symbol]
             [introduced] temp___expr_103))))

end

(* Module for axiomatizing type "pin" defined at pin.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Pin__pin
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type pin  = <range 0 9999>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 9999
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = pin,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type pin__ref  = { mutable pin__content : pin }
  
  function   pin__ref_pin__content__projection (a : pin__ref) requires {  }
    ensures  {  } returns pin = a.pin__content
  
  meta model_projection function pin__ref_pin__content__projection
  
  meta inline:no function pin__ref_pin__content__projection
  
  function   pin__havoc (x : pin__ref) requires {  } ensures  {  } returns
    unit

end

(* Module defining to_rep/of_rep for type "pin" defined at pin.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Pin__pin__rep
  
  use        Pin__pin
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Pin__pin.pin) requires { True } ensures  { True }
    returns int = (Pin__pin.pin'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Pin__pin.pin,
    predicate in_range = Pin__pin.in_range, function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the record theory associated to type "locker" defined at locker.ads:19, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Locker__locker__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Boolean
  use        Pin__pin
  use        Pin__pin__rep
  
  type __split_fields  = { [name:Number]
                           [model_trace:.2137]rec__locker__locker__number : Pin__pin.pin;
                           [model_trace:.2144]
                           [name:Locked]rec__locker__locker__locked : bool }
  
  function [name:Number] [model_trace:.2137] 
    __split_fields_rec__locker__locker__number__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Pin__pin.pin = a.rec__locker__locker__number
  
  meta model_projection function __split_fields_rec__locker__locker__number__projection
  
  meta inline:no function __split_fields_rec__locker__locker__number__projection
  
  function [model_trace:.2144] [name:Locked] 
    __split_fields_rec__locker__locker__locked__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    bool = a.rec__locker__locker__locked
  
  meta model_projection function __split_fields_rec__locker__locker__locked__projection
  
  meta inline:no function __split_fields_rec__locker__locker__locked__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__projection
  
  meta inline:no function __rep___split_fields__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   locker__locker__number__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__locker__locker__number_ (a : __rep) requires
    { (locker__locker__number__pred a) } ensures 
    { (result = a.__split_fields.rec__locker__locker__number) } returns
    Pin__pin.pin
  
  function   locker__locker__locked__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__locker__locker__locked_ (a : __rep) requires
    { (locker__locker__locked__pred a) } ensures 
    { (result = a.__split_fields.rec__locker__locker__locked) } returns bool
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (((Pin__pin__rep.to_rep
                a.__split_fields.rec__locker__locker__number)
               = (Pin__pin__rep.to_rep
                    b.__split_fields.rec__locker__locker__number)) /\
              ((_gnatprove_standard.Boolean.to_int
                  a.__split_fields.rec__locker__locker__locked)
                 = (_gnatprove_standard.Boolean.to_int
                      b.__split_fields.rec__locker__locker__locked)))
           then True  else False)

end

(* Module for axiomatizing type "locker" defined at locker.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Locker__locker
  
  use export Locker__locker__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type locker  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   locker__locker__number__first__bit () requires {  } ensures 
    {  } returns int
  
  function   locker__locker__number__last__bit () requires {  } ensures  {  }
    returns int
  
  function   locker__locker__number__position () requires {  } ensures  {  }
    returns int
  
  axiom locker__locker__number__first__bit_axiom : ((locker__locker__number__first__bit
                                                       ) >= 0)
  
  axiom locker__locker__number__last__bit_axiom : ((locker__locker__number__last__bit
                                                      )
                                                     > (locker__locker__number__first__bit
                                                          ))
  
  axiom locker__locker__number__position_axiom : ((locker__locker__number__position
                                                     ) >= 0)
  
  function   locker__locker__locked__first__bit () requires {  } ensures 
    {  } returns int
  
  function   locker__locker__locked__last__bit () requires {  } ensures  {  }
    returns int
  
  function   locker__locker__locked__position () requires {  } ensures  {  }
    returns int
  
  axiom locker__locker__locked__first__bit_axiom : ((locker__locker__locked__first__bit
                                                       ) >= 0)
  
  axiom locker__locker__locked__last__bit_axiom : ((locker__locker__locked__last__bit
                                                      )
                                                     > (locker__locker__locked__first__bit
                                                          ))
  
  axiom locker__locker__locked__position_axiom : ((locker__locker__locked__position
                                                     ) >= 0)
  
  function   user_eq (a : locker b : locker) requires { True } ensures 
    { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns locker
  
  type locker__ref  = { mutable locker__content : locker }
  
  function   locker__ref_locker__content__projection (a : locker__ref)
    requires {  } ensures  {  } returns locker = a.locker__content
  
  meta model_projection function locker__ref_locker__content__projection
  
  meta inline:no function locker__ref_locker__content__projection
  
  function   locker__havoc (x : locker__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for defining a ref holding the value of variable "l" defined at commandhandler.ads:10, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__l
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  
  val l__split_fields [model_trace:2048] [model_projected]
  [name:L] [sloc:commandhandler.ads:10]: Locker__locker.__split_fields

end

(* Module giving axioms for type "locker" defined at locker.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Locker__locker___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_188) : Locker__locker.locker ([mlw:proxy_symbol]
    [introduced] temp___is_init_184) : bool ([mlw:proxy_symbol]
    [introduced] temp___skip_constant_185) : bool ([mlw:proxy_symbol]
    [introduced] temp___do_toplevel_186) : bool ([mlw:proxy_symbol]
    [introduced] temp___do_typ_inv_187) : bool) requires { True } ensures 
    { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_189) : Locker__locker.locker ([mlw:proxy_symbol]
    [introduced] temp___skip_top_level_190) : bool) requires { True }
    ensures  { True } returns  = True

end

(* Module for axiomatizing type "int32" defined at stack.ads:13, created in Gnat2Why.Types.Translate_Type *)
module Stack__int32
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type int32  = <range -2147483648 2147483647>
  
  function   first () requires { True } ensures  { True } returns
    int = -2147483648
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = int32,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type int32__ref  = { mutable int32__content : int32 }
  
  function   int32__ref_int32__content__projection (a : int32__ref) requires
    {  } ensures  {  } returns int32 = a.int32__content
  
  meta model_projection function int32__ref_int32__content__projection
  
  meta inline:no function int32__ref_int32__content__projection
  
  function   int32__havoc (x : int32__ref) requires {  } ensures  {  }
    returns unit

end

(* Module defining to_rep/of_rep for type "int32" defined at stack.ads:13, created in Gnat2Why.Types.Translate_Type *)
module Stack__int32__rep
  
  use        Stack__int32
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Stack__int32.int32) requires { True } ensures 
    { True } returns int = (Stack__int32.int32'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Stack__int32.int32,
    predicate in_range = Stack__int32.in_range, function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the array theory associated to type "Tstack_arrayB" defined at stack.ads:15, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Stack__int32
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Stack__int32
  use        Stack__int32__rep
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              --pp_universal_quantif NOT IMPLEMENTED)
  
  axiom bool_eq_rev : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for axiomatizing type "stack_array" defined at stack.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Stack__stack_array
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Stack__int32
  use        Array__Int__Stack__int32
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   first () requires {  } ensures  {  } returns int = 1
  
  function   last () requires {  } ensures  {  } returns int = 512
  
  clone export ada__model.Constr_Array with axiom . type map = Array__Int__Stack__int32.map,
    function array_bool_eq = Array__Int__Stack__int32.bool_eq,
    function first = first, function last = last, type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "stack_instance" defined at stack.ads:29, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Stack__stack_instance__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__natural
  use        Standard__natural__rep
  use        Stack__stack_array
  use        Array__Int__Stack__int32
  use        Array__Int__Stack__int32
  use        Array__Int__Stack__int32
  use        Array__Int__Stack__int32
  
  type __split_fields  = { [name:Data]
                           [model_trace:.2349]rec__stack__stack_instance__data : Array__Int__Stack__int32.map;
                           [model_trace:.2354]
                           [name:Top_Index]rec__stack__stack_instance__top_index : Standard__natural.natural }
  
  function [name:Data] [model_trace:.2349] 
    __split_fields_rec__stack__stack_instance__data__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Array__Int__Stack__int32.map = a.rec__stack__stack_instance__data
  
  meta model_projection function __split_fields_rec__stack__stack_instance__data__projection
  
  meta inline:no function __split_fields_rec__stack__stack_instance__data__projection
  
  function [model_trace:.2354] [name:Top_Index] 
    __split_fields_rec__stack__stack_instance__top_index__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Standard__natural.natural = a.rec__stack__stack_instance__top_index
  
  meta model_projection function __split_fields_rec__stack__stack_instance__top_index__projection
  
  meta inline:no function __split_fields_rec__stack__stack_instance__top_index__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__2__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__2__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__2__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__2__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__2__projection
  
  meta inline:no function __rep___split_fields__2__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   stack__stack_instance__data__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__stack__stack_instance__data_ (a : __rep) requires
    { (stack__stack_instance__data__pred a) } ensures 
    { (result = a.__split_fields.rec__stack__stack_instance__data) } returns
    Array__Int__Stack__int32.map
  
  function   stack__stack_instance__top_index__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__stack__stack_instance__top_index_ (a : __rep) requires
    { (stack__stack_instance__top_index__pred a) } ensures 
    { (result = a.__split_fields.rec__stack__stack_instance__top_index) }
    returns Standard__natural.natural
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           ((Stack__stack_array.bool_eq
               a.__split_fields.rec__stack__stack_instance__data
               b.__split_fields.rec__stack__stack_instance__data) /\
              ((Standard__natural__rep.to_rep
                  a.__split_fields.rec__stack__stack_instance__top_index)
                 = (Standard__natural__rep.to_rep
                      b.__split_fields.rec__stack__stack_instance__top_index)))
           then True  else False)

end

(* Module for axiomatizing type "stack_instance" defined at stack.ads:29, created in Gnat2Why.Types.Translate_Type *)
module Stack__stack_instance
  
  use export Stack__stack_instance__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type stack_instance  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   stack__stack_instance__data__first__bit () requires {  }
    ensures  {  } returns int
  
  function   stack__stack_instance__data__last__bit () requires {  } ensures 
    {  } returns int
  
  function   stack__stack_instance__data__position () requires {  } ensures 
    {  } returns int
  
  axiom stack__stack_instance__data__first__bit_axiom : ((stack__stack_instance__data__first__bit
                                                            ) >= 0)
  
  axiom stack__stack_instance__data__last__bit_axiom : ((stack__stack_instance__data__last__bit
                                                           )
                                                          > (stack__stack_instance__data__first__bit
                                                               ))
  
  axiom stack__stack_instance__data__position_axiom : ((stack__stack_instance__data__position
                                                          ) >= 0)
  
  function   stack__stack_instance__top_index__first__bit () requires {  }
    ensures  {  } returns int
  
  function   stack__stack_instance__top_index__last__bit () requires {  }
    ensures  {  } returns int
  
  function   stack__stack_instance__top_index__position () requires {  }
    ensures  {  } returns int
  
  axiom stack__stack_instance__top_index__first__bit_axiom : ((stack__stack_instance__top_index__first__bit
                                                                 ) >= 0)
  
  axiom stack__stack_instance__top_index__last__bit_axiom : ((stack__stack_instance__top_index__last__bit
                                                                )
                                                               > (stack__stack_instance__top_index__first__bit
                                                                    ))
  
  axiom stack__stack_instance__top_index__position_axiom : ((stack__stack_instance__top_index__position
                                                               ) >= 0)
  
  function   user_eq (a : stack_instance b : stack_instance) requires
    { True } ensures  { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns stack_instance
  
  type stack_instance__ref  = { mutable stack_instance__content : stack_instance }
  
  function   stack_instance__ref_stack_instance__content__projection
    (a : stack_instance__ref) requires {  } ensures  {  } returns
    stack_instance = a.stack_instance__content
  
  meta model_projection function stack_instance__ref_stack_instance__content__projection
  
  meta inline:no function stack_instance__ref_stack_instance__content__projection
  
  function   stack_instance__havoc (x : stack_instance__ref) requires {  }
    ensures  {  } returns unit

end

(* Module for defining a ref holding the value of variable "sk" defined at commandhandler.ads:11, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__sk
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Stack__stack_instance
  
  val sk__split_fields [name:Sk] [model_projected]
  [model_trace:2053] [sloc:commandhandler.ads:11]: Stack__stack_instance.__split_fields

end

(* Module giving axioms for type "stack_instance" defined at stack.ads:29, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stack__stack_instance___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__natural
  use        Standard__natural__rep
  use        Stack__stack_instance
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_228) : Stack__stack_instance.stack_instance
    ([mlw:proxy_symbol] [introduced] temp___is_init_224) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_225) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_226) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_227) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_230) : Stack__stack_instance.stack_instance
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_231) : bool)
    requires { True } ensures  { True } returns
     = (if
       (Stack__stack_instance.stack__stack_instance__top_index__pred
          ([mlw:proxy_symbol] [introduced] temp___expr_230))
       then
       (( (Standard__natural__rep.to_rep ([mlw:proxy_symbol]
             [introduced] temp___expr_230).Stack__stack_instance.__split_fields.Stack__stack_instance.rec__stack__stack_instance__top_index))
          = ( 0))
       )

end

(* Module for axiomatizing type "int32" defined at memorystore.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Memorystore__int32
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type int32  = <range -2147483648 2147483647>
  
  function   first () requires { True } ensures  { True } returns
    int = -2147483648
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = int32,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type int32__ref  = { mutable int32__content : int32 }
  
  function   int32__ref_int32__content__2__projection (a : int32__ref)
    requires {  } ensures  {  } returns int32 = a.int32__content
  
  meta model_projection function int32__ref_int32__content__2__projection
  
  meta inline:no function int32__ref_int32__content__2__projection
  
  function   int32__havoc (x : int32__ref) requires {  } ensures  {  }
    returns unit

end

(* Module defining to_rep/of_rep for type "int32" defined at memorystore.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Memorystore__int32__rep
  
  use        Memorystore__int32
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Memorystore__int32.int32) requires { True } ensures 
    { True } returns int = (Memorystore__int32.int32'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Memorystore__int32.int32,
    predicate in_range = Memorystore__int32.in_range,
    function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the record theory associated to type "cell_opt" defined at memorystore.ads:41, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Memorystore__cell_opt__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Boolean
  use        Memorystore__int32
  use        Memorystore__int32__rep
  
  type __split_fields  = { [name:Valid]
                           [model_trace:.8763]rec__memorystore__cell_opt__valid : bool;
                           [name:Val]
                           [model_trace:.8769]rec__memorystore__cell_opt__val : Memorystore__int32.int32 }
  
  function [name:Valid] [model_trace:.8763] 
    __split_fields_rec__memorystore__cell_opt__valid__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    bool = a.rec__memorystore__cell_opt__valid
  
  meta model_projection function __split_fields_rec__memorystore__cell_opt__valid__projection
  
  meta inline:no function __split_fields_rec__memorystore__cell_opt__valid__projection
  
  function [name:Val] [model_trace:.8769] 
    __split_fields_rec__memorystore__cell_opt__val__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Memorystore__int32.int32 = a.rec__memorystore__cell_opt__val
  
  meta model_projection function __split_fields_rec__memorystore__cell_opt__val__projection
  
  meta inline:no function __split_fields_rec__memorystore__cell_opt__val__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__3__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__3__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__3__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__3__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__3__projection
  
  meta inline:no function __rep___split_fields__3__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   memorystore__cell_opt__valid__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__memorystore__cell_opt__valid_ (a : __rep) requires
    { (memorystore__cell_opt__valid__pred a) } ensures 
    { (result = a.__split_fields.rec__memorystore__cell_opt__valid) } returns
    bool
  
  function   memorystore__cell_opt__val__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__memorystore__cell_opt__val_ (a : __rep) requires
    { (memorystore__cell_opt__val__pred a) } ensures 
    { (result = a.__split_fields.rec__memorystore__cell_opt__val) } returns
    Memorystore__int32.int32
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (((_gnatprove_standard.Boolean.to_int
                a.__split_fields.rec__memorystore__cell_opt__valid)
               = (_gnatprove_standard.Boolean.to_int
                    b.__split_fields.rec__memorystore__cell_opt__valid)) /\
              ((Memorystore__int32__rep.to_rep
                  a.__split_fields.rec__memorystore__cell_opt__val)
                 = (Memorystore__int32__rep.to_rep
                      b.__split_fields.rec__memorystore__cell_opt__val)))
           then True  else False)

end

(* Module for axiomatizing type "cell_opt" defined at memorystore.ads:41, created in Gnat2Why.Types.Translate_Type *)
module Memorystore__cell_opt
  
  use export Memorystore__cell_opt__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type cell_opt  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   memorystore__cell_opt__valid__first__bit () requires {  }
    ensures  {  } returns int
  
  function   memorystore__cell_opt__valid__last__bit () requires {  }
    ensures  {  } returns int
  
  function   memorystore__cell_opt__valid__position () requires {  } ensures 
    {  } returns int
  
  axiom memorystore__cell_opt__valid__first__bit_axiom : ((memorystore__cell_opt__valid__first__bit
                                                             ) >= 0)
  
  axiom memorystore__cell_opt__valid__last__bit_axiom : ((memorystore__cell_opt__valid__last__bit
                                                            )
                                                           > (memorystore__cell_opt__valid__first__bit
                                                                ))
  
  axiom memorystore__cell_opt__valid__position_axiom : ((memorystore__cell_opt__valid__position
                                                           ) >= 0)
  
  function   memorystore__cell_opt__val__first__bit () requires {  } ensures 
    {  } returns int
  
  function   memorystore__cell_opt__val__last__bit () requires {  } ensures 
    {  } returns int
  
  function   memorystore__cell_opt__val__position () requires {  } ensures 
    {  } returns int
  
  axiom memorystore__cell_opt__val__first__bit_axiom : ((memorystore__cell_opt__val__first__bit
                                                           ) >= 0)
  
  axiom memorystore__cell_opt__val__last__bit_axiom : ((memorystore__cell_opt__val__last__bit
                                                          )
                                                         > (memorystore__cell_opt__val__first__bit
                                                              ))
  
  axiom memorystore__cell_opt__val__position_axiom : ((memorystore__cell_opt__val__position
                                                         ) >= 0)
  
  function   user_eq (a : cell_opt b : cell_opt) requires { True } ensures 
    { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns cell_opt
  
  type cell_opt__ref  = { mutable cell_opt__content : cell_opt }
  
  function   cell_opt__ref_cell_opt__content__projection (a : cell_opt__ref)
    requires {  } ensures  {  } returns cell_opt = a.cell_opt__content
  
  meta model_projection function cell_opt__ref_cell_opt__content__projection
  
  meta inline:no function cell_opt__ref_cell_opt__content__projection
  
  function   cell_opt__havoc (x : cell_opt__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for axiomatizing the array theory associated to type "Tmem_arrayB" defined at memorystore.ads:46, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Memorystore__cell_opt
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Memorystore__cell_opt
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              --pp_universal_quantif NOT IMPLEMENTED)
  
  axiom bool_eq_rev : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for axiomatizing type "mem_array" defined at memorystore.ads:46, created in Gnat2Why.Types.Translate_Type *)
module Memorystore__mem_array
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Memorystore__cell_opt
  use        Array__Int__Memorystore__cell_opt
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   first () requires {  } ensures  {  } returns int = 1
  
  function   last () requires {  } ensures  {  } returns int = 256
  
  clone export ada__model.Constr_Array with axiom . type map = Array__Int__Memorystore__cell_opt.map,
    function array_bool_eq = Array__Int__Memorystore__cell_opt.bool_eq,
    function first = first, function last = last, type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "database" defined at memorystore.ads:48, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Memorystore__database__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__natural
  use        Standard__natural__rep
  use        Memorystore__mem_array
  use        Array__Int__Memorystore__cell_opt
  use        Array__Int__Memorystore__cell_opt
  use        Array__Int__Memorystore__cell_opt
  use        Array__Int__Memorystore__cell_opt
  
  type __split_fields  = { [name:Mem]
                           [model_trace:.8784]rec__memorystore__database__mem : Array__Int__Memorystore__cell_opt.map;
                           [name:Cnt]
                           [model_trace:.8789]rec__memorystore__database__cnt : Standard__natural.natural }
  
  function [name:Mem] [model_trace:.8784] 
    __split_fields_rec__memorystore__database__mem__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Array__Int__Memorystore__cell_opt.map = a.rec__memorystore__database__mem
  
  meta model_projection function __split_fields_rec__memorystore__database__mem__projection
  
  meta inline:no function __split_fields_rec__memorystore__database__mem__projection
  
  function [name:Cnt] [model_trace:.8789] 
    __split_fields_rec__memorystore__database__cnt__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Standard__natural.natural = a.rec__memorystore__database__cnt
  
  meta model_projection function __split_fields_rec__memorystore__database__cnt__projection
  
  meta inline:no function __split_fields_rec__memorystore__database__cnt__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__4__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__4__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__4__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__4__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__4__projection
  
  meta inline:no function __rep___split_fields__4__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   memorystore__database__mem__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__memorystore__database__mem_ (a : __rep) requires
    { (memorystore__database__mem__pred a) } ensures 
    { (result = a.__split_fields.rec__memorystore__database__mem) } returns
    Array__Int__Memorystore__cell_opt.map
  
  function   memorystore__database__cnt__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__memorystore__database__cnt_ (a : __rep) requires
    { (memorystore__database__cnt__pred a) } ensures 
    { (result = a.__split_fields.rec__memorystore__database__cnt) } returns
    Standard__natural.natural
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           ((Memorystore__mem_array.bool_eq
               a.__split_fields.rec__memorystore__database__mem
               b.__split_fields.rec__memorystore__database__mem) /\
              ((Standard__natural__rep.to_rep
                  a.__split_fields.rec__memorystore__database__cnt)
                 = (Standard__natural__rep.to_rep
                      b.__split_fields.rec__memorystore__database__cnt)))
           then True  else False)

end

(* Module for axiomatizing type "database" defined at memorystore.ads:48, created in Gnat2Why.Types.Translate_Type *)
module Memorystore__database
  
  use export Memorystore__database__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type database  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   memorystore__database__mem__first__bit () requires {  } ensures 
    {  } returns int
  
  function   memorystore__database__mem__last__bit () requires {  } ensures 
    {  } returns int
  
  function   memorystore__database__mem__position () requires {  } ensures 
    {  } returns int
  
  axiom memorystore__database__mem__first__bit_axiom : ((memorystore__database__mem__first__bit
                                                           ) >= 0)
  
  axiom memorystore__database__mem__last__bit_axiom : ((memorystore__database__mem__last__bit
                                                          )
                                                         > (memorystore__database__mem__first__bit
                                                              ))
  
  axiom memorystore__database__mem__position_axiom : ((memorystore__database__mem__position
                                                         ) >= 0)
  
  function   memorystore__database__cnt__first__bit () requires {  } ensures 
    {  } returns int
  
  function   memorystore__database__cnt__last__bit () requires {  } ensures 
    {  } returns int
  
  function   memorystore__database__cnt__position () requires {  } ensures 
    {  } returns int
  
  axiom memorystore__database__cnt__first__bit_axiom : ((memorystore__database__cnt__first__bit
                                                           ) >= 0)
  
  axiom memorystore__database__cnt__last__bit_axiom : ((memorystore__database__cnt__last__bit
                                                          )
                                                         > (memorystore__database__cnt__first__bit
                                                              ))
  
  axiom memorystore__database__cnt__position_axiom : ((memorystore__database__cnt__position
                                                         ) >= 0)
  
  function   user_eq (a : database b : database) requires { True } ensures 
    { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns database
  
  type database__ref  = { mutable database__content : database }
  
  function   database__ref_database__content__projection (a : database__ref)
    requires {  } ensures  {  } returns database = a.database__content
  
  meta model_projection function database__ref_database__content__projection
  
  meta inline:no function database__ref_database__content__projection
  
  function   database__havoc (x : database__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for defining a ref holding the value of variable "d" defined at commandhandler.ads:12, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__d
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Memorystore__database
  
  val d__split_fields [model_trace:2058] [model_projected]
  [name:D] [sloc:commandhandler.ads:12]: Memorystore__database.__split_fields

end

(* Module for axiomatizing type "location_index" defined at memorystore.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Memorystore__location_index
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type location_index  = <range 1 256>
  
  function   first () requires { True } ensures  { True } returns int = 1
  
  function   last () requires { True } ensures  { True } returns int = 256
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = location_index,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type location_index__ref  = { mutable location_index__content : location_index }
  
  function   location_index__ref_location_index__content__projection
    (a : location_index__ref) requires {  } ensures  {  } returns
    location_index = a.location_index__content
  
  meta model_projection function location_index__ref_location_index__content__projection
  
  meta inline:no function location_index__ref_location_index__content__projection
  
  function   location_index__havoc (x : location_index__ref) requires {  }
    ensures  {  } returns unit

end

(* Module giving axioms for type "database" defined at memorystore.ads:48, created in Gnat2Why.Types.Generate_Type_Completion *)
module Memorystore__database___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Boolean
  use        Standard__natural
  use        Standard__natural__rep
  use        Memorystore__database
  use        Memorystore__location_index
  use        Memorystore__int32
  use        Memorystore__int32__rep
  use        Memorystore__cell_opt
  use        Array__Int__Memorystore__cell_opt
  use        Array__Int__Memorystore__cell_opt
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_270) : Memorystore__database.database
    ([mlw:proxy_symbol] [introduced] temp___is_init_266) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_267) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_268) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_269) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_272) : Memorystore__database.database
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_273) : bool)
    requires { True } ensures  { True } returns
     = ((if
        (Memorystore__database.memorystore__database__mem__pred
           ([mlw:proxy_symbol] [introduced] temp___expr_272))
        then
        (let ([mlw:proxy_symbol] [introduced] temp___274) =
        ([mlw:proxy_symbol]
          [introduced] temp___expr_272).Memorystore__database.__split_fields.Memorystore__database.rec__memorystore__database__mem
        in --pp_universal_quantif NOT IMPLEMENTED) ) /\
          (if
          (Memorystore__database.memorystore__database__cnt__pred
             ([mlw:proxy_symbol] [introduced] temp___expr_272))
          then
          (( (Standard__natural__rep.to_rep ([mlw:proxy_symbol]
                [introduced] temp___expr_272).Memorystore__database.__split_fields.Memorystore__database.rec__memorystore__database__cnt))
             = ( 0))
          ))

end

(* Module for axiomatizing type "T13s" defined at mystring.ads:50 instantiated at mystring_instance.ads:4, created in Gnat2Why.Types.Translate_Type *)
module Mystring_instance__lines__mystring__T13s
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type t13s  = <range 0 2048>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 2048
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = t13s,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type t13s__ref  = { mutable t13s__content : t13s }
  
  function   t13s__ref_t13s__content__projection (a : t13s__ref) requires
    {  } ensures  {  } returns t13s = a.t13s__content
  
  meta model_projection function t13s__ref_t13s__content__projection
  
  meta inline:no function t13s__ref_t13s__content__projection
  
  function   t13s__havoc (x : t13s__ref) requires {  } ensures  {  } returns
    unit

end

(* Module defining to_rep/of_rep for type "T13s" defined at mystring.ads:50 instantiated at mystring_instance.ads:4, created in Gnat2Why.Types.Translate_Type *)
module Mystring_instance__lines__mystring__T13s__rep
  
  use        Mystring_instance__lines__mystring__T13s
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Mystring_instance__lines__mystring__T13s.t13s)
    requires { True } ensures  { True } returns
    int = (Mystring_instance__lines__mystring__T13s.t13s'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Mystring_instance__lines__mystring__T13s.t13s,
    predicate in_range = Mystring_instance__lines__mystring__T13s.in_range,
    function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "mystringstr" defined at mystring.ads:48 instantiated at mystring_instance.ads:4, created in Gnat2Why.Types.Translate_Type *)
module Mystring_instance__lines__mystringstr
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Array__Int__Standard__character
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   first () requires {  } ensures  {  } returns int = 1
  
  function   last () requires {  } ensures  {  } returns int = 2048
  
  clone export ada__model.Constr_Array with axiom . type map = Array__Int__Standard__character.map,
    function array_bool_eq = Array__Int__Standard__character.bool_eq,
    function first = first, function last = last, type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "mystring" defined at mystring.ads:49 instantiated at mystring_instance.ads:4, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Mystring_instance__lines__mystring__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Mystring_instance__lines__mystring__T13s
  use        Mystring_instance__lines__mystring__T13s__rep
  use        Mystring_instance__lines__mystringstr
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  type __split_fields  = { [model_trace:.17095]
                           [name:Length]rec__mystring_instance__lines__mystring__length : Mystring_instance__lines__mystring__T13s.t13s;
                           [model_trace:.17099]
                           [name:Str]rec__mystring_instance__lines__mystring__str : Array__Int__Standard__character.map }
  
  function [model_trace:.17095] [name:Length] 
    __split_fields_rec__mystring_instance__lines__mystring__length__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Mystring_instance__lines__mystring__T13s.t13s = a.rec__mystring_instance__lines__mystring__length
  
  meta model_projection function __split_fields_rec__mystring_instance__lines__mystring__length__projection
  
  meta inline:no function __split_fields_rec__mystring_instance__lines__mystring__length__projection
  
  function [model_trace:.17099] [name:Str] 
    __split_fields_rec__mystring_instance__lines__mystring__str__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Array__Int__Standard__character.map = a.rec__mystring_instance__lines__mystring__str
  
  meta model_projection function __split_fields_rec__mystring_instance__lines__mystring__str__projection
  
  meta inline:no function __split_fields_rec__mystring_instance__lines__mystring__str__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__5__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__5__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__5__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__5__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__5__projection
  
  meta inline:no function __rep___split_fields__5__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   mystring_instance__lines__mystring__length__pred (a : __rep)
    requires { True } ensures  { True } returns  = True
  
  function   rec__mystring_instance__lines__mystring__length_ (a : __rep)
    requires { (mystring_instance__lines__mystring__length__pred a) }
    ensures 
    { (result
         = a.__split_fields.rec__mystring_instance__lines__mystring__length) }
    returns Mystring_instance__lines__mystring__T13s.t13s
  
  function   mystring_instance__lines__mystring__str__pred (a : __rep)
    requires { True } ensures  { True } returns  = True
  
  function   rec__mystring_instance__lines__mystring__str_ (a : __rep)
    requires { (mystring_instance__lines__mystring__str__pred a) } ensures 
    { (result = a.__split_fields.rec__mystring_instance__lines__mystring__str) }
    returns Array__Int__Standard__character.map
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (((Mystring_instance__lines__mystring__T13s__rep.to_rep
                a.__split_fields.rec__mystring_instance__lines__mystring__length)
               = (Mystring_instance__lines__mystring__T13s__rep.to_rep
                    b.__split_fields.rec__mystring_instance__lines__mystring__length))
              /\
              (Mystring_instance__lines__mystringstr.bool_eq
                 a.__split_fields.rec__mystring_instance__lines__mystring__str
                 b.__split_fields.rec__mystring_instance__lines__mystring__str))
           then True  else False)

end

(* Module for axiomatizing type "mystring" defined at mystring.ads:49 instantiated at mystring_instance.ads:4, created in Gnat2Why.Types.Translate_Type *)
module Mystring_instance__lines__mystring
  
  use export Mystring_instance__lines__mystring__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type mystring  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   mystring_instance__lines__mystring__length__first__bit ()
    requires {  } ensures  {  } returns int
  
  function   mystring_instance__lines__mystring__length__last__bit ()
    requires {  } ensures  {  } returns int
  
  function   mystring_instance__lines__mystring__length__position () requires
    {  } ensures  {  } returns int
  
  axiom mystring_instance__lines__mystring__length__first__bit_axiom : 
  ((mystring_instance__lines__mystring__length__first__bit ) >= 0)
  
  axiom mystring_instance__lines__mystring__length__last__bit_axiom : 
  ((mystring_instance__lines__mystring__length__last__bit )
     > (mystring_instance__lines__mystring__length__first__bit ))
  
  axiom mystring_instance__lines__mystring__length__position_axiom : 
  ((mystring_instance__lines__mystring__length__position ) >= 0)
  
  function   mystring_instance__lines__mystring__str__first__bit () requires
    {  } ensures  {  } returns int
  
  function   mystring_instance__lines__mystring__str__last__bit () requires
    {  } ensures  {  } returns int
  
  function   mystring_instance__lines__mystring__str__position () requires
    {  } ensures  {  } returns int
  
  axiom mystring_instance__lines__mystring__str__first__bit_axiom : ((mystring_instance__lines__mystring__str__first__bit
                                                                    ) >= 0)
  
  axiom mystring_instance__lines__mystring__str__last__bit_axiom : ((mystring_instance__lines__mystring__str__last__bit
                                                                    )
                                                                    > (
                                                                    mystring_instance__lines__mystring__str__first__bit
                                                                    ))
  
  axiom mystring_instance__lines__mystring__str__position_axiom : ((mystring_instance__lines__mystring__str__position
                                                                    ) >= 0)
  
  function   user_eq (a : mystring b : mystring) requires { True } ensures 
    { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns mystring
  
  type mystring__ref  = { mutable mystring__content : mystring }
  
  function   mystring__ref_mystring__content__projection (a : mystring__ref)
    requires {  } ensures  {  } returns mystring = a.mystring__content
  
  meta model_projection function mystring__ref_mystring__content__projection
  
  meta inline:no function mystring__ref_mystring__content__projection
  
  function   mystring__havoc (x : mystring__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for defining the constant "s" defined at commandhandler.ads:13, created in Gnat2Why.Decls.Translate_Constant *)
module Commandhandler__execute__s
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Mystring_instance__lines__mystring
  
  function [model_projected] [model_trace:2063] [name:S]
    [sloc:commandhandler.ads:13] s () requires {  } ensures  {  } returns
    Mystring_instance__lines__mystring.mystring

end

(* Module for axiomatizing the record theory associated to type "tokenextent" defined at mystringtokeniser.ads:5, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Mystringtokeniser__tokenextent__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__natural
  use        Standard__natural__rep
  use        Standard__positive
  use        Standard__positive__rep
  
  type __split_fields  = { [name:Start]
                           [model_trace:.9107]rec__mystringtokeniser__tokenextent__start : Standard__positive.positive;
                           [model_trace:.9112]
                           [name:Length]rec__mystringtokeniser__tokenextent__length : Standard__natural.natural }
  
  function [name:Start] [model_trace:.9107] 
    __split_fields_rec__mystringtokeniser__tokenextent__start__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Standard__positive.positive = a.rec__mystringtokeniser__tokenextent__start
  
  meta model_projection function __split_fields_rec__mystringtokeniser__tokenextent__start__projection
  
  meta inline:no function __split_fields_rec__mystringtokeniser__tokenextent__start__projection
  
  function [model_trace:.9112] [name:Length] 
    __split_fields_rec__mystringtokeniser__tokenextent__length__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Standard__natural.natural = a.rec__mystringtokeniser__tokenextent__length
  
  meta model_projection function __split_fields_rec__mystringtokeniser__tokenextent__length__projection
  
  meta inline:no function __split_fields_rec__mystringtokeniser__tokenextent__length__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__6__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__6__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__6__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__6__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__6__projection
  
  meta inline:no function __rep___split_fields__6__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   mystringtokeniser__tokenextent__start__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__mystringtokeniser__tokenextent__start_ (a : __rep) requires
    { (mystringtokeniser__tokenextent__start__pred a) } ensures 
    { (result = a.__split_fields.rec__mystringtokeniser__tokenextent__start) }
    returns Standard__positive.positive
  
  function   mystringtokeniser__tokenextent__length__pred (a : __rep)
    requires { True } ensures  { True } returns  = True
  
  function   rec__mystringtokeniser__tokenextent__length_ (a : __rep)
    requires { (mystringtokeniser__tokenextent__length__pred a) } ensures 
    { (result = a.__split_fields.rec__mystringtokeniser__tokenextent__length) }
    returns Standard__natural.natural
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (((Standard__positive__rep.to_rep
                a.__split_fields.rec__mystringtokeniser__tokenextent__start)
               = (Standard__positive__rep.to_rep
                    b.__split_fields.rec__mystringtokeniser__tokenextent__start))
              /\
              ((Standard__natural__rep.to_rep
                  a.__split_fields.rec__mystringtokeniser__tokenextent__length)
                 = (Standard__natural__rep.to_rep
                      b.__split_fields.rec__mystringtokeniser__tokenextent__length)))
           then True  else False)

end

(* Module for axiomatizing type "tokenextent" defined at mystringtokeniser.ads:5, created in Gnat2Why.Types.Translate_Type *)
module Mystringtokeniser__tokenextent
  
  use export Mystringtokeniser__tokenextent__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type tokenextent  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   mystringtokeniser__tokenextent__start__first__bit () requires
    {  } ensures  {  } returns int
  
  function   mystringtokeniser__tokenextent__start__last__bit () requires
    {  } ensures  {  } returns int
  
  function   mystringtokeniser__tokenextent__start__position () requires {  }
    ensures  {  } returns int
  
  axiom mystringtokeniser__tokenextent__start__first__bit_axiom : ((mystringtokeniser__tokenextent__start__first__bit
                                                                    ) >= 0)
  
  axiom mystringtokeniser__tokenextent__start__last__bit_axiom : ((mystringtokeniser__tokenextent__start__last__bit
                                                                    )
                                                                    > (
                                                                    mystringtokeniser__tokenextent__start__first__bit
                                                                    ))
  
  axiom mystringtokeniser__tokenextent__start__position_axiom : ((mystringtokeniser__tokenextent__start__position
                                                                    ) >= 0)
  
  function   mystringtokeniser__tokenextent__length__first__bit () requires
    {  } ensures  {  } returns int
  
  function   mystringtokeniser__tokenextent__length__last__bit () requires
    {  } ensures  {  } returns int
  
  function   mystringtokeniser__tokenextent__length__position () requires
    {  } ensures  {  } returns int
  
  axiom mystringtokeniser__tokenextent__length__first__bit_axiom : ((mystringtokeniser__tokenextent__length__first__bit
                                                                    ) >= 0)
  
  axiom mystringtokeniser__tokenextent__length__last__bit_axiom : ((mystringtokeniser__tokenextent__length__last__bit
                                                                    )
                                                                    > (
                                                                    mystringtokeniser__tokenextent__length__first__bit
                                                                    ))
  
  axiom mystringtokeniser__tokenextent__length__position_axiom : ((mystringtokeniser__tokenextent__length__position
                                                                    ) >= 0)
  
  function   user_eq (a : tokenextent b : tokenextent) requires { True }
    ensures  { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns tokenextent
  
  type tokenextent__ref  = { mutable tokenextent__content : tokenextent }
  
  function   tokenextent__ref_tokenextent__content__projection
    (a : tokenextent__ref) requires {  } ensures  {  } returns
    tokenextent = a.tokenextent__content
  
  meta model_projection function tokenextent__ref_tokenextent__content__projection
  
  meta inline:no function tokenextent__ref_tokenextent__content__projection
  
  function   tokenextent__havoc (x : tokenextent__ref) requires {  } ensures 
    {  } returns unit

end

(* Module for axiomatizing the array theory associated to type "tokenarray" defined at mystringtokeniser.ads:10, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Mystringtokeniser__tokenextent
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Mystringtokeniser__tokenextent
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              --pp_universal_quantif NOT IMPLEMENTED)
  
  axiom bool_eq_rev : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a ref holding the value of variable "t" defined at commandhandler.adb:17, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__t
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Mystringtokeniser__tokenextent
  
  val t [model_projected] [model_trace:871]
  [name:T] [sloc:commandhandler.adb:17]: Array__Int__Mystringtokeniser__tokenextent.map

end

(* Module for defining a ref holding the value of variable "numtokens" defined at commandhandler.adb:18, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__numtokens
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val numtokens [model_trace:892] [model_projected]
  [name:NumTokens] [sloc:commandhandler.adb:18]: int

end

(* Module for possibly declaring a logic function for "length" defined at mystring.ads:35 instantiated at mystring_instance.ads:4, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Mystring_instance__lines__length
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Mystring_instance__lines__mystring
  
  function   length (m : Mystring_instance__lines__mystring.mystring)
    requires { True } ensures  { True } returns int
  
  function   length__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_166) : int
    m : Mystring_instance__lines__mystring.mystring) requires { True }
    ensures  { True } returns bool

end

(* Module for possibly declaring a logic function for "to_string" defined at mystring.ads:20 instantiated at mystring_instance.ads:4, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Mystring_instance__lines__to_string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__string
  use        Mystring_instance__lines__mystring
  
  function   to_string (m : Mystring_instance__lines__mystring.mystring)
    requires { True } ensures  { True } returns Standard__string.string__
  
  function   to_string__function_guard
    (([mlw:proxy_symbol]
    [introduced] temp___result_167) : Standard__string.string__
    m : Mystring_instance__lines__mystring.mystring) requires { True }
    ensures  { True } returns bool

end

(* Module for declaring a program function (and possibly an axiom) for "to_string" defined at mystring.ads:20 instantiated at mystring_instance.ads:4, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Mystring_instance__lines__to_string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__string
  use        Standard__string___axiom
  use        Mystring_instance__lines__mystring
  use        Mystring_instance__lines__length
  use        Mystring_instance__lines__to_string
  
  function   to_string (m : Mystring_instance__lines__mystring.mystring)
    requires { True } ensures 
    { ((result = (Mystring_instance__lines__to_string.to_string m)) /\
         (Mystring_instance__lines__to_string.to_string__function_guard
            result m) /\
         ((Standard__string___axiom.dynamic_invariant result True False True
             True) /\
            ((([GP_Pretty_Ada:17135] ((Standard__string.length result)
                                        = (epsilon ([mlw:proxy_symbol]
                                          [introduced] temp___result_372) : int {
                                          ((([mlw:proxy_symbol]
                                              [introduced] temp___result_372)
                                              = (Mystring_instance__lines__length.length
                                                   ( m))) /\
                                             (Mystring_instance__lines__length.length__function_guard
                                                ([mlw:proxy_symbol]
                                                [introduced] temp___result_372)
                                                ( m)))}))) /\
                ([GP_Pretty_Ada:17142] ((Standard__string.first result) = 1)))
               /\
               ([GP_Pretty_Ada:17147] ((Standard__string.last result)
                                         = (epsilon ([mlw:proxy_symbol]
                                           [introduced] temp___result_373) : int {
                                           ((([mlw:proxy_symbol]
                                               [introduced] temp___result_373)
                                               = (Mystring_instance__lines__length.length
                                                    ( m))) /\
                                              (Mystring_instance__lines__length.length__function_guard
                                                 ([mlw:proxy_symbol]
                                                 [introduced] temp___result_373)
                                                 ( m)))})))))) } returns
    Standard__string.string__

end

(* Module for axiomatizing type "tokenarray" defined at mystringtokeniser.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Mystringtokeniser__tokenarray
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer
  use        Standard__positive
  use        Standard__integer__rep
  use        Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   index_1_id (x : int) requires { True } ensures  { True } returns
    int = x
  
  clone export ada__model.Unconstr_Array with axiom . type map = Array__Int__Mystringtokeniser__tokenextent.map,
    function array_bool_eq = Array__Int__Mystringtokeniser__tokenextent.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__positive.dynamic_property,
    predicate index_rep_le = <=
  
  type tokenarray  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  meta model_projection function to_array
  
  meta inline:no function to_array
  
  meta model_projection function first
  
  meta inline:no function first
  
  meta model_projection function last
  
  meta inline:no function last
  
  type tokenarray__ref  = { mutable tokenarray__content : tokenarray }
  
  function   tokenarray__ref_tokenarray__content__projection
    (a : tokenarray__ref) requires {  } ensures  {  } returns
    tokenarray = a.tokenarray__content
  
  meta model_projection function tokenarray__ref_tokenarray__content__projection
  
  meta inline:no function tokenarray__ref_tokenarray__content__projection
  
  function   tokenarray__havoc (x : tokenarray__ref) requires {  } ensures 
    {  } returns unit

end

(* Module giving axioms for type "tokenarray" defined at mystringtokeniser.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Mystringtokeniser__tokenarray___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__positive
  use        Mystringtokeniser__tokenarray
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_324) : Mystringtokeniser__tokenarray.tokenarray
    ([mlw:proxy_symbol] [introduced] temp___is_init_320) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_321) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_322) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_323) : bool) requires
    { True } ensures  { True } returns
     = (if ([mlw:proxy_symbol] [introduced] temp___skip_constant_321) then
       True  else
       (Mystringtokeniser__tokenarray.dynamic_property
          Standard__positive.first Standard__positive.last
          (Mystringtokeniser__tokenarray.first ([mlw:proxy_symbol]
             [introduced] temp___expr_324))
          (Mystringtokeniser__tokenarray.last ([mlw:proxy_symbol]
             [introduced] temp___expr_324))))

end

(* Module for declaring a program function (and possibly an axiom) for "tokenise" defined at mystringtokeniser.ads:16, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Mystringtokeniser__tokenise___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Integer
  use        Standard__integer
  use        Standard__natural
  use        Standard__natural___axiom
  use        Standard__natural__rep
  use        Standard__positive
  use        Standard__positive__rep
  use        Standard__string
  use        Standard__integer__rep
  use        Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Mystringtokeniser__tokenarray
  use        Mystringtokeniser__tokenarray___axiom
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  
  function   tokenise
    (s : Standard__string.string__
    tokens : Array__Int__Mystringtokeniser__tokenextent.map__ref
    tokens__first : Standard__integer.integer
    tokens__last : Standard__integer.integer count : int__ref) requires
    { ((if ((Standard__string.length s) > 0) then
       ([GP_Pretty_Ada:9179] ((Standard__string.first s)
                                <= (Standard__string.last s)))
        else ([GP_Pretty_Ada:18029] True)) /\
         ([GP_Pretty_Ada:9188] ((Standard__integer__rep.to_rep tokens__first)
                                  <= (Standard__integer__rep.to_rep
                                        tokens__last)))) } ensures 
    { ((([GP_Pretty_Ada:9196] (!count
                                 <= (_gnatprove_standard.Integer.length
                                       (Standard__integer__rep.to_rep
                                          tokens__first)
                                       (Standard__integer__rep.to_rep
                                          tokens__last)))) /\
          --pp_universal_quantif NOT IMPLEMENTED) /\
         ((Mystringtokeniser__tokenarray___axiom.dynamic_invariant
             (Mystringtokeniser__tokenarray.of_array !tokens
                (Standard__integer__rep.to_rep tokens__first)
                (Standard__integer__rep.to_rep tokens__last)) True True True
             True) /\
            (Standard__natural___axiom.dynamic_invariant !count True True
               True True))) } returns unit

end

(* Module for possibly declaring a logic function for "line_length" defined at a-textio.ads:243, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada___ada__text_io__line_length__2
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  
  function   line_length
    (Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns int
  
  function   line_length__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_163) : int
    Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns bool

end

(* Module for possibly declaring a logic function for "page_length" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada___ada__text_io__page_length__2
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  
  function   page_length
    (Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns int
  
  function   page_length__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_164) : int
    Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns bool

end

(* Module declaring the external object "ada___ada__text_io__file_system," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__file_system
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val file_system  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__standard_in," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__standard_in
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val standard_in  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__standard_out," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__standard_out
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val standard_out  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__standard_err," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__standard_err
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val standard_err  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__current_in," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__current_in
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val current_in  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__current_out," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__current_out
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val current_out  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__current_err," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__current_err
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val current_err  : _gnatprove_standard.Main.__private

end

(* Module for declaring a program function (and possibly an axiom) for "put_line" defined at a-textio.ads:506, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__put_line__2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Standard__string
  use        Ada___ada__text_io__line_length__2
  use        Ada___ada__text_io__page_length__2
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   put_line (item : Standard__string.string__) requires { True }
    ensures 
    { (([GP_Pretty_Ada:5312] (--pp_tagged NOT IMPLEMENTED
                                = (Ada___ada__text_io__line_length__2.line_length
                                     !Ada___ada__text_io__file_system.file_system
                                     !Ada___ada__text_io__standard_in.standard_in
                                     !Ada___ada__text_io__standard_out.standard_out
                                     !Ada___ada__text_io__standard_err.standard_err
                                     !Ada___ada__text_io__current_in.current_in
                                     !Ada___ada__text_io__current_out.current_out
                                     !Ada___ada__text_io__current_err.current_err)))
         /\
         ([GP_Pretty_Ada:5318] (--pp_tagged NOT IMPLEMENTED
                                  = (Ada___ada__text_io__page_length__2.page_length
                                       !Ada___ada__text_io__file_system.file_system
                                       !Ada___ada__text_io__standard_in.standard_in
                                       !Ada___ada__text_io__standard_out.standard_out
                                       !Ada___ada__text_io__standard_err.standard_err
                                       !Ada___ada__text_io__current_in.current_in
                                       !Ada___ada__text_io__current_out.current_out
                                       !Ada___ada__text_io__current_err.current_err)))) }
    returns unit

end

(* Module for possibly declaring a logic function for "substring" defined at mystring.ads:38 instantiated at mystring_instance.ads:4, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Mystring_instance__lines__substring
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Mystring_instance__lines__mystring
  
  function   substring
    (m : Mystring_instance__lines__mystring.mystring from : int to__ : int)
    requires { True } ensures  { True } returns
    Mystring_instance__lines__mystring.mystring
  
  function   substring__function_guard
    (([mlw:proxy_symbol]
    [introduced] temp___result_168) : Mystring_instance__lines__mystring.mystring
    m : Mystring_instance__lines__mystring.mystring from : int to__ : int)
    requires { True } ensures  { True } returns bool

end

(* Module giving axioms for type "mystring" defined at mystring.ads:49 instantiated at mystring_instance.ads:4, created in Gnat2Why.Types.Generate_Type_Completion *)
module Mystring_instance__lines__mystring___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Mystring_instance__lines__mystring
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_291) : Mystring_instance__lines__mystring.mystring
    ([mlw:proxy_symbol] [introduced] temp___is_init_287) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_288) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_289) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_290) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_293) : Mystring_instance__lines__mystring.mystring
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_294) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring a program function (and possibly an axiom) for "substring" defined at mystring.ads:38 instantiated at mystring_instance.ads:4, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Mystring_instance__lines__substring___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Mystring_instance__lines__mystring
  use        Mystring_instance__lines__length
  use        Mystring_instance__lines__substring
  use        Mystring_instance__lines__mystring___axiom
  
  function   substring
    (m : Mystring_instance__lines__mystring.mystring from : int to__ : int)
    requires
    { (([GP_Pretty_Ada:17249] (from <= to__)) /\
         ([GP_Pretty_Ada:17252] (to__
                                   <= (epsilon ([mlw:proxy_symbol]
                                      [introduced] temp___result_384) : int {
                                      ((([mlw:proxy_symbol]
                                          [introduced] temp___result_384)
                                          = (Mystring_instance__lines__length.length
                                               ( m))) /\
                                         (Mystring_instance__lines__length.length__function_guard
                                            ([mlw:proxy_symbol]
                                            [introduced] temp___result_384)
                                            ( m)))})))) } ensures 
    { ((result = (Mystring_instance__lines__substring.substring m from to__))
         /\
         (Mystring_instance__lines__substring.substring__function_guard
            result m from to__) /\
         ((Mystring_instance__lines__mystring___axiom.dynamic_invariant
             result True False True True) /\
            ([GP_Pretty_Ada:17454] ((epsilon ([mlw:proxy_symbol]
                                    [introduced] temp___result_385) : int {
                                    ((([mlw:proxy_symbol]
                                        [introduced] temp___result_385)
                                        = (Mystring_instance__lines__length.length
                                             ( result))) /\
                                       (Mystring_instance__lines__length.length__function_guard
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___result_385)
                                          ( result)))}) = ((to__ - from) + 1))))) }
    returns Mystring_instance__lines__mystring.mystring

end

(* Module for defining a ref holding the value of variable "token1" defined at commandhandler.adb:30, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__token1
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__integer
  use        Array__Int__Standard__character
  
  val token1 [model_trace:930] [model_projected]
  [name:Token1] [sloc:commandhandler.adb:30]: Array__Int__Standard__character.map
  
  function [model_projected] [model_trace:930'First] [name:Token1]
    [sloc:commandhandler.adb:30] token1__first () requires {  } ensures  {  }
    returns Standard__integer.integer
  
  function [model_projected] [name:Token1] [model_trace:930'Last]
    [sloc:commandhandler.adb:30] token1__last () requires {  } ensures  {  }
    returns Standard__integer.integer

end

(* Module for possibly declaring a logic function for "is_locked" defined at locker.ads:15, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Locker__is_locked
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  
  function   is_locked (l : Locker__locker.locker) requires { True } ensures 
    { True } returns bool
  
  function   is_locked__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_169) : bool
    l : Locker__locker.locker) requires { True } ensures  { True } returns
    bool

end

(* Module for declaring a program function (and possibly an axiom) for "is_locked" defined at locker.ads:15, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Locker__is_locked___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Locker__locker___axiom
  use        Locker__is_locked
  
  function   is_locked (l : Locker__locker.locker) requires { True } ensures 
    { ((result = (Locker__is_locked.is_locked l)) /\
         (Locker__is_locked.is_locked__function_guard result l) /\ True) }
    returns bool
  
  axiom is_locked__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for axiomatizing type "int32" defined at calculator.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Calculator__int32
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type int32  = <range -2147483648 2147483647>
  
  function   first () requires { True } ensures  { True } returns
    int = -2147483648
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = int32,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type int32__ref  = { mutable int32__content : int32 }
  
  function   int32__ref_int32__content__3__projection (a : int32__ref)
    requires {  } ensures  {  } returns int32 = a.int32__content
  
  meta model_projection function int32__ref_int32__content__3__projection
  
  meta inline:no function int32__ref_int32__content__3__projection
  
  function   int32__havoc (x : int32__ref) requires {  } ensures  {  }
    returns unit

end

(* Module defining to_rep/of_rep for type "int32" defined at calculator.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Calculator__int32__rep
  
  use        Calculator__int32
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Calculator__int32.int32) requires { True } ensures 
    { True } returns int = (Calculator__int32.int32'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Calculator__int32.int32,
    predicate in_range = Calculator__int32.in_range, function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the record theory associated to type "result" defined at calculator.ads:11, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Calculator__result__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Boolean
  use        Calculator__int32
  use        Calculator__int32__rep
  
  type __split_fields  = { [name:Success]
                           [model_trace:.8488]rec__calculator__result__success : bool;
                           [model_trace:.8493]
                           [name:Value]rec__calculator__result__value : Calculator__int32.int32 }
  
  function [name:Success] [model_trace:.8488] 
    __split_fields_rec__calculator__result__success__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    bool = a.rec__calculator__result__success
  
  meta model_projection function __split_fields_rec__calculator__result__success__projection
  
  meta inline:no function __split_fields_rec__calculator__result__success__projection
  
  function [model_trace:.8493] [name:Value] 
    __split_fields_rec__calculator__result__value__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Calculator__int32.int32 = a.rec__calculator__result__value
  
  meta model_projection function __split_fields_rec__calculator__result__value__projection
  
  meta inline:no function __split_fields_rec__calculator__result__value__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__7__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__7__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__7__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__7__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__7__projection
  
  meta inline:no function __rep___split_fields__7__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   calculator__result__success__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__calculator__result__success_ (a : __rep) requires
    { (calculator__result__success__pred a) } ensures 
    { (result = a.__split_fields.rec__calculator__result__success) } returns
    bool
  
  function   calculator__result__value__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__calculator__result__value_ (a : __rep) requires
    { (calculator__result__value__pred a) } ensures 
    { (result = a.__split_fields.rec__calculator__result__value) } returns
    Calculator__int32.int32
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (((_gnatprove_standard.Boolean.to_int
                a.__split_fields.rec__calculator__result__success)
               = (_gnatprove_standard.Boolean.to_int
                    b.__split_fields.rec__calculator__result__success)) /\
              ((Calculator__int32__rep.to_rep
                  a.__split_fields.rec__calculator__result__value)
                 = (Calculator__int32__rep.to_rep
                      b.__split_fields.rec__calculator__result__value)))
           then True  else False)

end

(* Module for axiomatizing type "result" defined at calculator.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Calculator__result
  
  use export Calculator__result__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type result__  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   calculator__result__success__first__bit () requires {  }
    ensures  {  } returns int
  
  function   calculator__result__success__last__bit () requires {  } ensures 
    {  } returns int
  
  function   calculator__result__success__position () requires {  } ensures 
    {  } returns int
  
  axiom calculator__result__success__first__bit_axiom : ((calculator__result__success__first__bit
                                                            ) >= 0)
  
  axiom calculator__result__success__last__bit_axiom : ((calculator__result__success__last__bit
                                                           )
                                                          > (calculator__result__success__first__bit
                                                               ))
  
  axiom calculator__result__success__position_axiom : ((calculator__result__success__position
                                                          ) >= 0)
  
  function   calculator__result__value__first__bit () requires {  } ensures 
    {  } returns int
  
  function   calculator__result__value__last__bit () requires {  } ensures 
    {  } returns int
  
  function   calculator__result__value__position () requires {  } ensures 
    {  } returns int
  
  axiom calculator__result__value__first__bit_axiom : ((calculator__result__value__first__bit
                                                          ) >= 0)
  
  axiom calculator__result__value__last__bit_axiom : ((calculator__result__value__last__bit
                                                         )
                                                        > (calculator__result__value__first__bit
                                                             ))
  
  axiom calculator__result__value__position_axiom : ((calculator__result__value__position
                                                        ) >= 0)
  
  function   user_eq (a : result__ b : result__) requires { True } ensures 
    { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns result__
  
  type result____ref  = { mutable result____content : result__ }
  
  function   result____ref_result____content__projection (a : result____ref)
    requires {  } ensures  {  } returns result__ = a.result____content
  
  meta model_projection function result____ref_result____content__projection
  
  meta inline:no function result____ref_result____content__projection
  
  function   result____havoc (x : result____ref) requires {  } ensures  {  }
    returns unit

end

(* Module for axiomatizing type "result" defined at commandhandler.adb:20, created in Gnat2Why.Types.Translate_Type *)
module Commandhandler__execute__result
  
  use export Calculator__result
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for defining a ref holding the value of variable "r" defined at commandhandler.adb:44, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_2__r
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Commandhandler__execute__result
  
  val r__split_fields [model_projected] [model_trace:997]
  [name:R] [sloc:commandhandler.adb:44]: Commandhandler__execute__result.__split_fields

end

(* Module giving axioms for type "result" defined at commandhandler.adb:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Commandhandler__execute__result___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Commandhandler__execute__result
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_365) : Commandhandler__execute__result.result__
    ([mlw:proxy_symbol] [introduced] temp___is_init_361) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_362) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_363) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_364) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_366) : Commandhandler__execute__result.result__
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_367) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for defining a ref holding the value of variable "a" defined at commandhandler.adb:45, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_2__a
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val a [model_projected] [name:A]
  [model_trace:1001] [sloc:commandhandler.adb:45]: int

end

(* Module for defining a ref holding the value of variable "b" defined at commandhandler.adb:45, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_2__b
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val b [model_trace:1002] [model_projected]
  [name:B] [sloc:commandhandler.adb:45]: int

end

(* Module for defining a ref holding the value of variable "success" defined at commandhandler.adb:46, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_2__success
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val success [name:Success] [model_projected]
  [model_trace:1010] [sloc:commandhandler.adb:46]: bool

end

(* Module giving axioms for type "int32" defined at stack.ads:13, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stack__int32___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Stack__int32
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_211) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_207) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_208) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_209) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_210) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_207) = True) \/
          (Stack__int32.first <= Stack__int32.last))
       then
       (Stack__int32.dynamic_property Stack__int32.first Stack__int32.last
          ([mlw:proxy_symbol] [introduced] temp___expr_211))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_212) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_213) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring a program function (and possibly an axiom) for "pop2" defined at stack.ads:25, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stack__pop2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Stack__stack_instance
  use        Stack__stack_instance___axiom
  use        Stack__int32___axiom
  
  function   pop2
    (l : Locker__locker.locker
    s__split_fields : Stack__stack_instance.__split_fields__ref a : int__ref
    b : int__ref success : bool__ref) requires { True } ensures 
    { (((Stack__stack_instance___axiom.dynamic_invariant
           --pp_record_aggregate NOT IMPLEMENTED True True True True) /\
          (Stack__int32___axiom.dynamic_invariant !a True True True True)) /\
         (Stack__int32___axiom.dynamic_invariant !b True True True True)) }
    returns unit

end

(* Module for possibly declaring a logic function for "add" defined at calculator.ads:16, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Calculator__add
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Calculator__result
  
  function   add (l : Locker__locker.locker a : int b : int) requires
    { True } ensures  { True } returns Calculator__result.result__
  
  function   add__function_guard
    (([mlw:proxy_symbol]
    [introduced] temp___result_170) : Calculator__result.result__
    l : Locker__locker.locker a : int b : int) requires { True } ensures 
    { True } returns bool

end

(* Module giving axioms for type "int32" defined at calculator.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Calculator__int32___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Calculator__int32
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_342) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_338) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_339) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_340) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_341) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_338) = True) \/
          (Calculator__int32.first <= Calculator__int32.last))
       then
       (Calculator__int32.dynamic_property Calculator__int32.first
          Calculator__int32.last ([mlw:proxy_symbol]
          [introduced] temp___expr_342))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_343) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_344) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "result" defined at calculator.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Calculator__result___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Calculator__result
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_356) : Calculator__result.result__
    ([mlw:proxy_symbol] [introduced] temp___is_init_352) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_353) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_354) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_355) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_357) : Calculator__result.result__
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_358) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring a program function (and possibly an axiom) for "add" defined at calculator.ads:16, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Calculator__add___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Locker__locker___axiom
  use        Calculator__result
  use        Calculator__add
  use        Calculator__int32___axiom
  use        Calculator__result___axiom
  
  function   add (l : Locker__locker.locker a : int b : int) requires
    { True } ensures 
    { ((result = (Calculator__add.add l a b)) /\
         (Calculator__add.add__function_guard result l a b) /\
         (Calculator__result___axiom.dynamic_invariant result True False True
            True)) } returns Calculator__result.result__
  
  axiom add__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for possibly declaring a logic function for "sub" defined at calculator.ads:17, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Calculator__sub
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Calculator__result
  
  function   sub (l : Locker__locker.locker a : int b : int) requires
    { True } ensures  { True } returns Calculator__result.result__
  
  function   sub__function_guard
    (([mlw:proxy_symbol]
    [introduced] temp___result_171) : Calculator__result.result__
    l : Locker__locker.locker a : int b : int) requires { True } ensures 
    { True } returns bool

end

(* Module for declaring a program function (and possibly an axiom) for "sub" defined at calculator.ads:17, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Calculator__sub___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Locker__locker___axiom
  use        Calculator__result
  use        Calculator__sub
  use        Calculator__int32___axiom
  use        Calculator__result___axiom
  
  function   sub (l : Locker__locker.locker a : int b : int) requires
    { True } ensures 
    { ((result = (Calculator__sub.sub l a b)) /\
         (Calculator__sub.sub__function_guard result l a b) /\
         (Calculator__result___axiom.dynamic_invariant result True False True
            True)) } returns Calculator__result.result__
  
  axiom sub__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for possibly declaring a logic function for "mul" defined at calculator.ads:18, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Calculator__mul
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Calculator__result
  
  function   mul (l : Locker__locker.locker a : int b : int) requires
    { True } ensures  { True } returns Calculator__result.result__
  
  function   mul__function_guard
    (([mlw:proxy_symbol]
    [introduced] temp___result_172) : Calculator__result.result__
    l : Locker__locker.locker a : int b : int) requires { True } ensures 
    { True } returns bool

end

(* Module for declaring a program function (and possibly an axiom) for "mul" defined at calculator.ads:18, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Calculator__mul___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Locker__locker___axiom
  use        Calculator__result
  use        Calculator__mul
  use        Calculator__int32___axiom
  use        Calculator__result___axiom
  
  function   mul (l : Locker__locker.locker a : int b : int) requires
    { True } ensures 
    { ((result = (Calculator__mul.mul l a b)) /\
         (Calculator__mul.mul__function_guard result l a b) /\
         (Calculator__result___axiom.dynamic_invariant result True False True
            True)) } returns Calculator__result.result__
  
  axiom mul__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for possibly declaring a logic function for "div" defined at calculator.ads:19, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Calculator__div
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Calculator__result
  
  function   div (l : Locker__locker.locker a : int b : int) requires
    { True } ensures  { True } returns Calculator__result.result__
  
  function   div__function_guard
    (([mlw:proxy_symbol]
    [introduced] temp___result_173) : Calculator__result.result__
    l : Locker__locker.locker a : int b : int) requires { True } ensures 
    { True } returns bool

end

(* Module for declaring a program function (and possibly an axiom) for "div" defined at calculator.ads:19, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Calculator__div___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Locker__locker___axiom
  use        Calculator__result
  use        Calculator__div
  use        Calculator__int32___axiom
  use        Calculator__result___axiom
  
  function   div (l : Locker__locker.locker a : int b : int) requires
    { True } ensures 
    { ((result = (Calculator__div.div l a b)) /\
         (Calculator__div.div__function_guard result l a b) /\
         (Calculator__result___axiom.dynamic_invariant result True False True
            True)) } returns Calculator__result.result__
  
  axiom div__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for declaring a program function (and possibly an axiom) for "push" defined at stack.ads:22, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stack__push___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Stack__stack_instance
  use        Stack__stack_instance___axiom
  
  function   push
    (l : Locker__locker.locker
    s__split_fields : Stack__stack_instance.__split_fields__ref a : int
    success : bool__ref) requires { True } ensures 
    { (Stack__stack_instance___axiom.dynamic_invariant
         --pp_record_aggregate NOT IMPLEMENTED True True True True) } returns
    unit

end

(* Module for declaring a program function (and possibly an axiom) for "push2" defined at stack.ads:23, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stack__push2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Stack__stack_instance
  use        Stack__stack_instance___axiom
  
  function   push2
    (l : Locker__locker.locker
    s__split_fields : Stack__stack_instance.__split_fields__ref a : int
    b : int success : bool__ref) requires { True } ensures 
    { (Stack__stack_instance___axiom.dynamic_invariant
         --pp_record_aggregate NOT IMPLEMENTED True True True True) } returns
    unit

end

(* Module for possibly declaring a logic function for "from_string" defined at stringtointeger.ads:6, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Stringtointeger__from_string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__string
  
  function   from_string (s : Standard__string.string__) requires { True }
    ensures  { True } returns int
  
  function   from_string__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_174) : int
    s : Standard__string.string__) requires { True } ensures  { True }
    returns bool

end

(* Module for declaring a program function (and possibly an axiom) for "from_string" defined at stringtointeger.ads:6, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stringtointeger__from_string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__integer
  use        Standard__integer___axiom
  use        Standard__string
  use        Stringtointeger__from_string
  
  function   from_string (s : Standard__string.string__) requires { True }
    ensures 
    { ((result = (Stringtointeger__from_string.from_string s)) /\
         (Stringtointeger__from_string.from_string__function_guard result s)
         /\
         (Standard__integer___axiom.dynamic_invariant result True False True
            True)) } returns int
  
  axiom from_string__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a ref holding the value of variable "token2" defined at commandhandler.adb:87, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_3__token2
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val token2 [model_projected] [model_trace:1216]
  [name:Token2] [sloc:commandhandler.adb:87]: int

end

(* Module for defining a ref holding the value of variable "success" defined at commandhandler.adb:89, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_3__success
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val success [name:Success] [model_projected]
  [model_trace:1251] [sloc:commandhandler.adb:89]: bool

end

(* Module for defining a ref holding the value of variable "token2" defined at commandhandler.adb:111, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_4__token2
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val token2 [model_projected] [model_trace:1303]
  [name:Token2] [sloc:commandhandler.adb:111]: int

end

(* Module for defining a ref holding the value of variable "token3" defined at commandhandler.adb:113, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_4__token3
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val token3 [model_projected] [model_trace:1338]
  [name:Token3] [sloc:commandhandler.adb:113]: int

end

(* Module for defining a ref holding the value of variable "success" defined at commandhandler.adb:115, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_4__success
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val success [name:Success] [model_projected]
  [model_trace:1372] [sloc:commandhandler.adb:115]: bool

end

(* Module for defining a ref holding the value of variable "a" defined at commandhandler.adb:137, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_5__a
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val a [model_trace:1434] [model_projected]
  [name:A] [sloc:commandhandler.adb:137]: int

end

(* Module for defining a ref holding the value of variable "success" defined at commandhandler.adb:138, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_5__success
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val success [name:Success] [model_trace:1439]
  [model_projected] [sloc:commandhandler.adb:138]: bool

end

(* Module for declaring a program function (and possibly an axiom) for "pop" defined at stack.ads:24, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Stack__pop___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Stack__stack_instance
  use        Stack__stack_instance___axiom
  use        Stack__int32___axiom
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   pop
    (l : Locker__locker.locker
    s__split_fields : Stack__stack_instance.__split_fields__ref a : int__ref
    success : bool__ref) requires { True } ensures 
    { ((Stack__stack_instance___axiom.dynamic_invariant
          --pp_record_aggregate NOT IMPLEMENTED True True True True) /\
         (Stack__int32___axiom.dynamic_invariant !a True True True True)) }
    returns unit

end

(* Module for defining a ref holding the value of variable "token2" defined at commandhandler.adb:160, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_6__token2
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val token2 [model_projected] [model_trace:1489]
  [name:Token2] [sloc:commandhandler.adb:160]: int

end

(* Module for defining a ref holding the value of variable "a" defined at commandhandler.adb:162, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_6__a
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val a [model_projected] [name:A]
  [model_trace:1524] [sloc:commandhandler.adb:162]: int

end

(* Module for defining a ref holding the value of variable "success" defined at commandhandler.adb:163, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_6__success
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val success [name:Success] [model_projected]
  [model_trace:1528] [sloc:commandhandler.adb:163]: bool

end

(* Module for declaring a program function (and possibly an axiom) for "put" defined at lockmemory.ads:11, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Lockmemory__put___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Memorystore__database
  use        Memorystore__database___axiom
  
  function   put
    (l : Locker__locker.locker
    d__split_fields : Memorystore__database.__split_fields__ref loc : int
    val__ : int) requires { True } ensures 
    { (Memorystore__database___axiom.dynamic_invariant
         --pp_record_aggregate NOT IMPLEMENTED True True True True) } returns
    unit

end

(* Module for defining a ref holding the value of variable "token2" defined at commandhandler.adb:190, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_7__token2
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val token2 [model_projected] [name:Token2]
  [model_trace:1599] [sloc:commandhandler.adb:190]: int

end

(* Module for defining a ref holding the value of variable "a" defined at commandhandler.adb:192, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_7__a
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val a [model_projected] [name:A]
  [model_trace:1634] [sloc:commandhandler.adb:192]: int

end

(* Module for defining a ref holding the value of variable "success" defined at commandhandler.adb:193, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_7__success
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val success [name:Success] [model_projected]
  [model_trace:1638] [sloc:commandhandler.adb:193]: bool

end

(* Module for possibly declaring a logic function for "get" defined at lockmemory.ads:8, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Lockmemory__get
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Memorystore__database
  
  function   get
    (l : Locker__locker.locker d : Memorystore__database.database loc : int)
    requires { True } ensures  { True } returns int
  
  function   get__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_175) : int
    l : Locker__locker.locker d : Memorystore__database.database loc : int)
    requires { True } ensures  { True } returns bool

end

(* Module giving axioms for type "int32" defined at memorystore.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Memorystore__int32___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Memorystore__int32
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_246) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_242) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_243) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_244) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_245) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_242) = True) \/
          (Memorystore__int32.first <= Memorystore__int32.last))
       then
       (Memorystore__int32.dynamic_property Memorystore__int32.first
          Memorystore__int32.last ([mlw:proxy_symbol]
          [introduced] temp___expr_246))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_247) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_248) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring a program function (and possibly an axiom) for "get" defined at lockmemory.ads:8, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Lockmemory__get___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Memorystore__database
  use        Lockmemory__get
  use        Memorystore__int32
  use        Memorystore__int32___axiom
  
  function   get
    (l : Locker__locker.locker d : Memorystore__database.database loc : int)
    requires { True } ensures 
    { ((result = (Lockmemory__get.get l d loc)) /\
         (Lockmemory__get.get__function_guard result l d loc) /\
         (Memorystore__int32___axiom.dynamic_invariant result True False True
            True)) } returns int
  
  axiom get__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a ref holding the value of variable "token2" defined at commandhandler.adb:220, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_8__token2
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val token2 [model_projected] [name:Token2]
  [model_trace:1714] [sloc:commandhandler.adb:220]: int

end

(* Module for declaring a program function (and possibly an axiom) for "remove" defined at lockmemory.ads:14, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Lockmemory__remove___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Memorystore__database
  use        Memorystore__database___axiom
  
  function   remove
    (l : Locker__locker.locker
    d__split_fields : Memorystore__database.__split_fields__ref loc : int)
    requires { True } ensures 
    { (Memorystore__database___axiom.dynamic_invariant
         --pp_record_aggregate NOT IMPLEMENTED True True True True) } returns
    unit

end

(* Module for declaring a program function (and possibly an axiom) for "print" defined at lockmemory.ads:16, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Lockmemory__print___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Memorystore__database
  
  function   print
    (l : Locker__locker.locker d : Memorystore__database.database) requires
    { True } ensures  { True } returns unit

end

(* Module for defining a ref holding the value of variable "token2" defined at commandhandler.adb:251, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_9__token2
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__integer
  use        Array__Int__Standard__character
  
  val token2 [model_trace:1821] [model_projected]
  [name:Token2] [sloc:commandhandler.adb:251]: Array__Int__Standard__character.map
  
  function [model_projected] [model_trace:1821'First] [name:Token2]
    [sloc:commandhandler.adb:251] token2__first () requires {  } ensures 
    {  } returns Standard__integer.integer
  
  function [model_trace:1821'Last] [model_projected] [name:Token2]
    [sloc:commandhandler.adb:251] token2__last () requires {  } ensures  {  }
    returns Standard__integer.integer

end

(* Module for possibly declaring a logic function for "from_string" defined at pin.ads:5, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Pin__from_string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__string
  
  function   from_string (s : Standard__string.string__) requires { True }
    ensures  { True } returns int
  
  function   from_string__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_176) : int
    s : Standard__string.string__) requires { True } ensures  { True }
    returns bool

end

(* Module giving axioms for type "pin" defined at pin.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Pin__pin___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Pin__pin
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_181) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_177) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_178) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_179) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_180) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_177) = True) \/
          (Pin__pin.first <= Pin__pin.last))
       then
       (Pin__pin.dynamic_property Pin__pin.first Pin__pin.last
          ([mlw:proxy_symbol] [introduced] temp___expr_181))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_182) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_183) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring a program function (and possibly an axiom) for "from_string" defined at pin.ads:5, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Pin__from_string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Standard__string
  use        Standard__string___axiom
  use        Pin__from_string
  use        Pin__pin___axiom
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   from_string (s : Standard__string.string__) requires
    { (([GP_Pretty_Ada:2180] ((Standard__string.length s) = 4)) /\
         --pp_universal_quantif NOT IMPLEMENTED) } ensures 
    { ((result = (Pin__from_string.from_string s)) /\
         (Pin__from_string.from_string__function_guard result s) /\
         (Pin__pin___axiom.dynamic_invariant result True False True True)) }
    returns int
  
  axiom from_string__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for declaring a program function (and possibly an axiom) for "reset_pwd" defined at locker.ads:13, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Locker__reset_pwd___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Locker__locker___axiom
  
  function   reset_pwd
    (l__split_fields : Locker__locker.__split_fields__ref n : int) requires
    { True } ensures 
    { (Locker__locker___axiom.dynamic_invariant
         --pp_record_aggregate NOT IMPLEMENTED True True True True) } returns
    unit

end

(* Module for defining a ref holding the value of variable "token2" defined at commandhandler.adb:273, created in Gnat2Why.Decls.Translate_Variable *)
module Commandhandler__execute__B_1__B_10__token2
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__integer
  use        Array__Int__Standard__character
  
  val token2 [model_projected] [model_trace:1913]
  [name:Token2] [sloc:commandhandler.adb:273]: Array__Int__Standard__character.map
  
  function [model_projected] [model_trace:1913'First] [name:Token2]
    [sloc:commandhandler.adb:273] token2__first () requires {  } ensures 
    {  } returns Standard__integer.integer
  
  function [model_projected] [model_trace:1913'Last] [name:Token2]
    [sloc:commandhandler.adb:273] token2__last () requires {  } ensures  {  }
    returns Standard__integer.integer

end

(* Module for declaring a program function (and possibly an axiom) for "try_unlock" defined at locker.ads:11, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Locker__try_unlock___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Locker__locker
  use        Locker__locker___axiom
  
  function   try_unlock
    (l__split_fields : Locker__locker.__split_fields__ref n : int) requires
    { True } ensures 
    { (Locker__locker___axiom.dynamic_invariant
         --pp_record_aggregate NOT IMPLEMENTED True True True True) } returns
    unit

end

(* Module for axiomatizing type "TTtSP1" defined at commandhandler.adb:17, created in Gnat2Why.Types.Translate_Type *)
module Commandhandler__execute__TTtSP1
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type tTtSP1  = <range 1 5>
  
  function   first () requires { True } ensures  { True } returns int = 1
  
  function   last () requires { True } ensures  { True } returns int = 5
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = tTtSP1,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type tTtSP1__ref  = { mutable tTtSP1__content : tTtSP1 }
  
  function   tTtSP1__ref_tTtSP1__content__projection (a : tTtSP1__ref)
    requires {  } ensures  {  } returns tTtSP1 = a.tTtSP1__content
  
  meta model_projection function tTtSP1__ref_tTtSP1__content__projection
  
  meta inline:no function tTtSP1__ref_tTtSP1__content__projection
  
  function   tTtSP1__havoc (x : tTtSP1__ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "TtS" defined at commandhandler.adb:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Commandhandler__execute__TtS___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_330) : Array__Int__Mystringtokeniser__tokenextent.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_326) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_327) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_328) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_329) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_332) : Array__Int__Mystringtokeniser__tokenextent.map
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_333) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for axiomatizing type "int32" defined at commandhandler.adb:19, created in Gnat2Why.Types.Translate_Type *)
module Commandhandler__execute__int32
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type int32  = <range -2147483648 2147483647>
  
  function   first () requires { True } ensures  { True } returns
    int = -2147483648
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = int32,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type int32__ref  = { mutable int32__content : int32 }
  
  function   int32__ref_int32__content__4__projection (a : int32__ref)
    requires {  } ensures  {  } returns int32 = a.int32__content
  
  meta model_projection function int32__ref_int32__content__4__projection
  
  meta inline:no function int32__ref_int32__content__4__projection
  
  function   int32__havoc (x : int32__ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "int32" defined at commandhandler.adb:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Commandhandler__execute__int32___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Commandhandler__execute__int32
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_349) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_345) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_346) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_347) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_348) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_345) = True) \/
          (Commandhandler__execute__int32.first
             <= Commandhandler__execute__int32.last))
       then
       (Commandhandler__execute__int32.dynamic_property
          Commandhandler__execute__int32.first
          Commandhandler__execute__int32.last ([mlw:proxy_symbol]
          [introduced] temp___expr_349))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_350) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_351) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring an abstract function for the aggregate at commandhandler.adb:17, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Commandhandler__execute__t__aggregate_def
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  
  function   commandhandler__execute__t__aggregate_def
    (([mlw:proxy_symbol]
    [introduced] temp___406) : Mystringtokeniser__tokenextent.tokenextent)
    requires { True } ensures  { True } returns
    Array__Int__Mystringtokeniser__tokenextent.map

end

(* Module for defining a value for string literal  defined at commandhandler.adb:25, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_414
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_414 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_414__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:34, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_416
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_416 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_416__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:39, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_418
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_418 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_418__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:50, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_424
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_424 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_424__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:54, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_428
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_428 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_428__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:54, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_429
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_429 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_429__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:63, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_440
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_440 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_440__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:63, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_441
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_441 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_441__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:60, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_452
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_452 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_452__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:60, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_453
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_453 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_453__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:58, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_462
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_462 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_462__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:57, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_469
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_469 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_469__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:57, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_470
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_470 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_470__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:55, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_479
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_479 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_479__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:52, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_484
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_484 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_484__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:69, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_491
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_491 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_491__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:288, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_497
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_497 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_497__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:284, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_500
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_500 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_500__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:283, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_502
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_502 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_502__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:263, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_507
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_507 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_507__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:268, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_509
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_509 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_509__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:276, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_511
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_511 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_511__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:279, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_514
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_514 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_514__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:261, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_520
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_520 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_520__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:241, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_525
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_525 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_525__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:246, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_527
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_527 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_527__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:254, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_529
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_529 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_529__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:257, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_532
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_532 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_532__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:239, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_538
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_538 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_538__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:233, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_543
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_543 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_543__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:231, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_545
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_545 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_545__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:210, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_550
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_550 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_550__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:215, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_552
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_552 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_552__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:224, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_554
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_554 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_554__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:227, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_557
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_557 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_557__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:208, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_559
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_559 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_559__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:180, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_564
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_564 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_564__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:185, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_566
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_566 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_566__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:196, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_568
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_568 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_568__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:201, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_573
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_573 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_573__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:203, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_576
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_576 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_576__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:178, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_578
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_578 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_578__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:150, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_583
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_583 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_583__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:155, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_585
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_585 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_585__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:166, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_587
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_587 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_587__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:170, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_592
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_592 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_592__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:173, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_595
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_595 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_595__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:148, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_597
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_597 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_597__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:127, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_602
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_602 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_602__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:132, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_604
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_604 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_604__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:142, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_609
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_609 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_609__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:144, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_612
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_612 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_612__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:125, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_614
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_614 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_614__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:101, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_619
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_619 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_619__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:106, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_621
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_621 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_621__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:119, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_625
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_625 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_625__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:119, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_626
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_626 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_626__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:121, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_633
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_633 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_633__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:99, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_635
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_635 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_635__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:77, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_640
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_640 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_640__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:82, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_642
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_642 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_642__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:93, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_646
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_646 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_646__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:95, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_649
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_649 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_649__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:75, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_651
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_651 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_651__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:32, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_656
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_656 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_656__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:32, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_661
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_661 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_661__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:32, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_666
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_666 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_666__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at commandhandler.adb:32, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_671
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_671 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_671__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__positive
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_53) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_49) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_50) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_51) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_52) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_49) = True) \/
          (Standard__positive.first <= Standard__positive.last))
       then
       (Standard__positive.dynamic_property Standard__positive.first
          Standard__positive.last ([mlw:proxy_symbol]
          [introduced] temp___expr_53))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_54) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_55) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_81) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_77) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_78) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_79) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_80) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_77) = True) \/
          (Standard__character.first <= Standard__character.last))
       then
       (Standard__character.dynamic_property Standard__character.first
          Standard__character.last ([mlw:proxy_symbol]
          [introduced] temp___expr_81))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_82) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_83) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving an empty axiom for the entity "t" defined at commandhandler.adb:17, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__t___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "tokenextent" defined at mystringtokeniser.ads:5, created in Gnat2Why.Types.Generate_Type_Completion *)
module Mystringtokeniser__tokenextent___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Mystringtokeniser__tokenextent
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_315) : Mystringtokeniser__tokenextent.tokenextent
    ([mlw:proxy_symbol] [introduced] temp___is_init_311) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_312) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_313) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_314) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_316) : Mystringtokeniser__tokenextent.tokenextent
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_317) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for defining the value of the aggregate at commandhandler.adb:17, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Commandhandler__execute__t__aggregate_def___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Mystringtokeniser__tokenextent
  use        Mystringtokeniser__tokenextent___axiom
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Commandhandler__execute__t__aggregate_def
  use        Array__Int__Mystringtokeniser__tokenextent
  
  axiom def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving an empty axiom for the entity "numtokens" defined at commandhandler.adb:18, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__numtokens___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "token1" defined at commandhandler.adb:30, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__token1___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "r" defined at commandhandler.adb:44, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_2__r___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "a" defined at commandhandler.adb:45, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_2__a___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "b" defined at commandhandler.adb:45, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_2__b___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "success" defined at commandhandler.adb:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_2__success___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "token2" defined at commandhandler.adb:87, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_3__token2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "success" defined at commandhandler.adb:89, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_3__success___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "token2" defined at commandhandler.adb:111, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_4__token2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "token3" defined at commandhandler.adb:113, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_4__token3___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "success" defined at commandhandler.adb:115, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_4__success___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "a" defined at commandhandler.adb:137, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_5__a___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "success" defined at commandhandler.adb:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_5__success___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "token2" defined at commandhandler.adb:160, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_6__token2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "a" defined at commandhandler.adb:162, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_6__a___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "success" defined at commandhandler.adb:163, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_6__success___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "token2" defined at commandhandler.adb:190, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_7__token2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "a" defined at commandhandler.adb:192, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_7__a___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "success" defined at commandhandler.adb:193, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_7__success___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "token2" defined at commandhandler.adb:220, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_8__token2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "token2" defined at commandhandler.adb:251, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_9__token2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "token2" defined at commandhandler.adb:273, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__B_1__B_10__token2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "l" defined at commandhandler.ads:10, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__l___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "sk" defined at commandhandler.ads:11, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__sk___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "d" defined at commandhandler.ads:12, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__d___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "s" defined at commandhandler.ads:13, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Commandhandler__execute__s___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "stack_array" defined at stack.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Stack__stack_array___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Stack__int32
  use        Array__Int__Stack__int32
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_218) : Array__Int__Stack__int32.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_214) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_215) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_216) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_217) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_220) : Array__Int__Stack__int32.map
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_221) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for axiomatizing type "count" defined at a-textio.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Ada___ada__text_io__count
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type count  = <range 0 2147483647>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = count,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type count__ref  = { mutable count__content : count }
  
  function   count__ref_count__content__projection (a : count__ref) requires
    {  } ensures  {  } returns count = a.count__content
  
  meta model_projection function count__ref_count__content__projection
  
  meta inline:no function count__ref_count__content__projection
  
  function   count__havoc (x : count__ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "count" defined at a-textio.ads:78, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada___ada__text_io__count___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Ada___ada__text_io__count
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_308) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_304) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_305) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_306) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_307) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_304) = True) \/
          (Ada___ada__text_io__count.first <= Ada___ada__text_io__count.last))
       then
       (Ada___ada__text_io__count.dynamic_property
          Ada___ada__text_io__count.first Ada___ada__text_io__count.last
          ([mlw:proxy_symbol] [introduced] temp___expr_308))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_309) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_310) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring a program function (and possibly an axiom) for "line_length" defined at a-textio.ads:243, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__line_length__2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Ada___ada__text_io__line_length__2
  use        Ada___ada__text_io__count___axiom
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   line_length (__void_param : unit) requires { True } ensures 
    { ((result
          = (Ada___ada__text_io__line_length__2.line_length
               !Ada___ada__text_io__file_system.file_system
               !Ada___ada__text_io__standard_in.standard_in
               !Ada___ada__text_io__standard_out.standard_out
               !Ada___ada__text_io__standard_err.standard_err
               !Ada___ada__text_io__current_in.current_in
               !Ada___ada__text_io__current_out.current_out
               !Ada___ada__text_io__current_err.current_err)) /\ True /\
         (Ada___ada__text_io__count___axiom.dynamic_invariant result True
            False True True)) } returns int
  
  axiom line_length__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for declaring a program function (and possibly an axiom) for "page_length" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__page_length__2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Ada___ada__text_io__page_length__2
  use        Ada___ada__text_io__count___axiom
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   page_length (__void_param : unit) requires { True } ensures 
    { ((result
          = (Ada___ada__text_io__page_length__2.page_length
               !Ada___ada__text_io__file_system.file_system
               !Ada___ada__text_io__standard_in.standard_in
               !Ada___ada__text_io__standard_out.standard_out
               !Ada___ada__text_io__standard_err.standard_err
               !Ada___ada__text_io__current_in.current_in
               !Ada___ada__text_io__current_out.current_out
               !Ada___ada__text_io__current_err.current_err)) /\ True /\
         (Ada___ada__text_io__count___axiom.dynamic_invariant result True
            False True True)) } returns int
  
  axiom page_length__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving axioms for type "location_index" defined at memorystore.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Memorystore__location_index___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Memorystore__location_index
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_239) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_235) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_236) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_237) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_238) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_235) = True) \/
          (Memorystore__location_index.first
             <= Memorystore__location_index.last))
       then
       (Memorystore__location_index.dynamic_property
          Memorystore__location_index.first Memorystore__location_index.last
          ([mlw:proxy_symbol] [introduced] temp___expr_239))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_240) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_241) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "cell_opt" defined at memorystore.ads:41, created in Gnat2Why.Types.Generate_Type_Completion *)
module Memorystore__cell_opt___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Boolean
  use        Memorystore__int32
  use        Memorystore__int32__rep
  use        Memorystore__cell_opt
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_253) : Memorystore__cell_opt.cell_opt
    ([mlw:proxy_symbol] [introduced] temp___is_init_249) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_250) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_251) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_252) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_254) : Memorystore__cell_opt.cell_opt
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_255) : bool)
    requires { True } ensures  { True } returns
     = ((if
        (Memorystore__cell_opt.memorystore__cell_opt__valid__pred
           ([mlw:proxy_symbol] [introduced] temp___expr_254))
        then
        (([mlw:proxy_symbol]
           [introduced] temp___expr_254).Memorystore__cell_opt.__split_fields.Memorystore__cell_opt.rec__memorystore__cell_opt__valid
           = (_gnatprove_standard.Boolean.of_int 0))
        ) /\
          (if
          (Memorystore__cell_opt.memorystore__cell_opt__val__pred
             ([mlw:proxy_symbol] [introduced] temp___expr_254))
          then
          (( (Memorystore__int32__rep.to_rep ([mlw:proxy_symbol]
                [introduced] temp___expr_254).Memorystore__cell_opt.__split_fields.Memorystore__cell_opt.rec__memorystore__cell_opt__val))
             = ( 0))
          ))

end

(* Module giving axioms for type "mem_array" defined at memorystore.ads:46, created in Gnat2Why.Types.Generate_Type_Completion *)
module Memorystore__mem_array___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Boolean
  use        Memorystore__location_index
  use        Memorystore__int32
  use        Memorystore__int32__rep
  use        Memorystore__cell_opt
  use        Array__Int__Memorystore__cell_opt
  use        Array__Int__Memorystore__cell_opt
  use        Array__Int__Memorystore__cell_opt
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_260) : Array__Int__Memorystore__cell_opt.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_256) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_257) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_258) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_259) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_262) : Array__Int__Memorystore__cell_opt.map
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_263) : bool)
    requires { True } ensures  { True } returns
     = --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving axioms for type "mystringstr" defined at mystring.ads:48 instantiated at mystring_instance.ads:4, created in Gnat2Why.Types.Generate_Type_Completion *)
module Mystring_instance__lines__mystringstr___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_281) : Array__Int__Standard__character.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_277) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_278) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_279) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_280) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_283) : Array__Int__Standard__character.map
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_284) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving a program function and a defining axiom for the expression function "length" defined at mystring.ads:35 instantiated at mystring_instance.ads:4, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Mystring_instance__lines__length___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__natural___axiom
  use        Mystring_instance__lines__mystring
  use        Mystring_instance__lines__length
  use        Mystring_instance__lines__mystring__T13s
  use        Mystring_instance__lines__mystring__T13s__rep
  use        Mystring_instance__lines__mystring___axiom
  
  function   length (m : Mystring_instance__lines__mystring.mystring)
    requires { True } ensures 
    { ((result = (Mystring_instance__lines__length.length m)) /\
         (Mystring_instance__lines__length.length__function_guard result m)
         /\
         ((Standard__natural___axiom.dynamic_invariant result True False True
             True) /\
            ((result
                = ( (Mystring_instance__lines__mystring__T13s__rep.to_rep
                       ( m).Mystring_instance__lines__mystring.__split_fields.Mystring_instance__lines__mystring.rec__mystring_instance__lines__mystring__length)))
               /\ ([GP_Pretty_Ada:17419] (result <= 2048))))) } returns int
  
  axiom length__post_axiom : --pp_universal_quantif NOT IMPLEMENTED
  
  axiom length__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving axioms for type "T13s" defined at mystring.ads:50 instantiated at mystring_instance.ads:4, created in Gnat2Why.Types.Generate_Type_Completion *)
module Mystring_instance__lines__mystring__T13s___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "TTtSP1" defined at commandhandler.adb:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Commandhandler__execute__TTtSP1___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for checking contracts and absence of run-time errors in subprogram "execute" defined at commandhandler.ads:9, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Commandhandler__execute__subprogram_def
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Main
  use        _gnatprove_standard.Integer
  use        _gnatprove_standard.Boolean
  use        Standard_String__Img
  use        Standard__integer
  use        Standard__integer
  use        Standard__integer___axiom
  use        Standard__natural
  use        Standard__natural___axiom
  use        Standard__natural__rep
  use        Standard__positive
  use        Standard__positive__rep
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character__Concat
  use        Standard__string
  use        Standard__integer__rep
  use        Standard__string___axiom
  use        Commandhandler__execute__l
  use        Locker__locker
  use        Locker__locker___axiom
  use        Commandhandler__execute__sk
  use        Stack__stack_instance
  use        Stack__stack_instance___axiom
  use        Commandhandler__execute__d
  use        Memorystore__database
  use        Memorystore__database___axiom
  use        Mystring_instance__lines__mystring
  use        Commandhandler__execute__s
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Commandhandler__execute__t
  use        Commandhandler__execute__numtokens
  use        Mystring_instance__lines__to_string___axiom
  use        Mystringtokeniser__tokenise___axiom
  use        Ada___ada__text_io__put_line__2___axiom
  use        Mystring_instance__lines__substring___axiom
  use        Array__Int__Standard__character
  use        Commandhandler__execute__B_1__token1
  use        Locker__is_locked___axiom
  use        Commandhandler__execute__B_1__B_2__r
  use        Commandhandler__execute__result
  use        Commandhandler__execute__result___axiom
  use        Calculator__result
  use        Commandhandler__execute__B_1__B_2__a
  use        Commandhandler__execute__B_1__B_2__b
  use        Commandhandler__execute__B_1__B_2__success
  use        Stack__pop2___axiom
  use        Calculator__add___axiom
  use        Calculator__sub___axiom
  use        Calculator__mul___axiom
  use        Calculator__div___axiom
  use        Stack__push___axiom
  use        Stack__push2___axiom
  use        Stringtointeger__from_string___axiom
  use        Commandhandler__execute__B_1__B_3__token2
  use        Commandhandler__execute__B_1__B_3__success
  use        Commandhandler__execute__B_1__B_4__token2
  use        Commandhandler__execute__B_1__B_4__token3
  use        Commandhandler__execute__B_1__B_4__success
  use        Commandhandler__execute__B_1__B_5__a
  use        Commandhandler__execute__B_1__B_5__success
  use        Stack__pop___axiom
  use        Commandhandler__execute__B_1__B_6__token2
  use        Commandhandler__execute__B_1__B_6__a
  use        Commandhandler__execute__B_1__B_6__success
  use        Lockmemory__put___axiom
  use        Commandhandler__execute__B_1__B_7__token2
  use        Commandhandler__execute__B_1__B_7__a
  use        Commandhandler__execute__B_1__B_7__success
  use        Lockmemory__get___axiom
  use        Commandhandler__execute__B_1__B_8__token2
  use        Lockmemory__remove___axiom
  use        Lockmemory__print___axiom
  use        Array__Int__Standard__character
  use        Commandhandler__execute__B_1__B_9__token2
  use        Pin__from_string___axiom
  use        Locker__reset_pwd___axiom
  use        Array__Int__Standard__character
  use        Commandhandler__execute__B_1__B_10__token2
  use        Locker__try_unlock___axiom
  use        Memorystore__location_index
  use        Mystring_instance__lines__mystring___axiom
  use        Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Mystringtokeniser__tokenarray
  use        Commandhandler__execute__TTtSP1
  use        Commandhandler__execute__TtS___axiom
  use        Calculator__int32
  use        Calculator__int32__rep
  use        Commandhandler__execute__int32
  use        Commandhandler__execute__int32___axiom
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Commandhandler__execute__t__aggregate_def
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Array__Int__Mystringtokeniser__tokenextent
  use        Temp___String_Literal_414
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_416
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_418
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_424
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_428
  use        Array__Int__Standard__character
  use        Temp___String_Literal_429
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_440
  use        Array__Int__Standard__character
  use        Temp___String_Literal_441
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_452
  use        Array__Int__Standard__character
  use        Temp___String_Literal_453
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_462
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_469
  use        Array__Int__Standard__character
  use        Temp___String_Literal_470
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_479
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_484
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_491
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_497
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_500
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_502
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_507
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_509
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_511
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_514
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_520
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_525
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_527
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_529
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_532
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_538
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_543
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_545
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_550
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_552
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_554
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_557
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_559
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_564
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_566
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_568
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_573
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_576
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_578
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_583
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_585
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_587
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_592
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_595
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_597
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_602
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_604
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_609
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_612
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_614
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_619
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_621
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_625
  use        Array__Int__Standard__character
  use        Temp___String_Literal_626
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_633
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_635
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_640
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_642
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_646
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_649
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_651
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_656
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_661
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_666
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_671
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Standard__integer___axiom
  use        Standard__natural___axiom
  use        Standard__positive___axiom
  use        Standard__character___axiom
  use        Standard__string___axiom
  use        Standard__integer___axiom
  use        Commandhandler__execute__t___axiom
  use        Commandhandler__execute__t__aggregate_def___axiom
  use        Commandhandler__execute__numtokens___axiom
  use        Commandhandler__execute__int32___axiom
  use        Commandhandler__execute__result___axiom
  use        Commandhandler__execute__B_1__token1___axiom
  use        Commandhandler__execute__B_1__B_2__r___axiom
  use        Commandhandler__execute__B_1__B_2__a___axiom
  use        Commandhandler__execute__B_1__B_2__b___axiom
  use        Commandhandler__execute__B_1__B_2__success___axiom
  use        Commandhandler__execute__B_1__B_3__token2___axiom
  use        Commandhandler__execute__B_1__B_3__success___axiom
  use        Commandhandler__execute__B_1__B_4__token2___axiom
  use        Commandhandler__execute__B_1__B_4__token3___axiom
  use        Commandhandler__execute__B_1__B_4__success___axiom
  use        Commandhandler__execute__B_1__B_5__a___axiom
  use        Commandhandler__execute__B_1__B_5__success___axiom
  use        Commandhandler__execute__B_1__B_6__token2___axiom
  use        Commandhandler__execute__B_1__B_6__a___axiom
  use        Commandhandler__execute__B_1__B_6__success___axiom
  use        Commandhandler__execute__B_1__B_7__token2___axiom
  use        Commandhandler__execute__B_1__B_7__a___axiom
  use        Commandhandler__execute__B_1__B_7__success___axiom
  use        Commandhandler__execute__B_1__B_8__token2___axiom
  use        Commandhandler__execute__B_1__B_9__token2___axiom
  use        Commandhandler__execute__B_1__B_10__token2___axiom
  use        Commandhandler__execute__l___axiom
  use        Commandhandler__execute__sk___axiom
  use        Commandhandler__execute__d___axiom
  use        Commandhandler__execute__s___axiom
  use        Locker__try_unlock___axiom
  use        Locker__reset_pwd___axiom
  use        Locker__is_locked___axiom
  use        Locker__locker___axiom
  use        Pin__from_string___axiom
  use        Pin__pin___axiom
  use        Stack__int32___axiom
  use        Stack__stack_array___axiom
  use        Stack__push___axiom
  use        Stack__push2___axiom
  use        Stack__pop___axiom
  use        Stack__pop2___axiom
  use        Stack__stack_instance___axiom
  use        Ada___ada__text_io__count___axiom
  use        Ada___ada__text_io__line_length__2___axiom
  use        Ada___ada__text_io__page_length__2___axiom
  use        Ada___ada__text_io__put_line__2___axiom
  use        Calculator__int32___axiom
  use        Calculator__result___axiom
  use        Calculator__add___axiom
  use        Calculator__sub___axiom
  use        Calculator__mul___axiom
  use        Calculator__div___axiom
  use        Lockmemory__get___axiom
  use        Lockmemory__put___axiom
  use        Lockmemory__remove___axiom
  use        Lockmemory__print___axiom
  use        Memorystore__location_index___axiom
  use        Memorystore__int32___axiom
  use        Memorystore__cell_opt___axiom
  use        Memorystore__mem_array___axiom
  use        Memorystore__database___axiom
  use        Mystringtokeniser__tokenextent___axiom
  use        Mystringtokeniser__tokenarray___axiom
  use        Mystringtokeniser__tokenise___axiom
  use        Stringtointeger__from_string___axiom
  use        Mystring_instance__lines__mystringstr___axiom
  use        Mystring_instance__lines__mystring___axiom
  use        Mystring_instance__lines__to_string___axiom
  use        Mystring_instance__lines__length___axiom
  use        Mystring_instance__lines__substring___axiom
  use        Mystring_instance__lines__mystring__T13s___axiom
  use        Commandhandler__execute__TtS___axiom
  use        Commandhandler__execute__TTtSP1___axiom
  
  function [GP_Subp:commandhandler.ads:9] [sloc:commandhandler.ads:9] def
    (__void_param : unit) requires { True } ensures  {  } returns
     = (* Assume dynamic invariants of inputs of the subprogram commandhandler.ads:9 *);
        assume
        { (Locker__locker___axiom.dynamic_invariant
             --pp_record_aggregate NOT IMPLEMENTED True False True True) };
        assume
        { (Stack__stack_instance___axiom.dynamic_invariant
             --pp_record_aggregate NOT IMPLEMENTED True False True True) };
        assume
        { (Memorystore__database___axiom.dynamic_invariant
             --pp_record_aggregate NOT IMPLEMENTED True False True True) };
        assume
        { (Mystring_instance__lines__mystring___axiom.dynamic_invariant
             Commandhandler__execute__s.s True False True True) };
        (* Assume moved pointers in outputs of the subprogram commandhandler.ads:9 *);
        (* Check for RTE in the Pre of the subprogram commandhandler.ads:9 *);
        abstract ensures
        { True } begin  (let _ = True in ())  end;
        (* Assume Pre of the subprogram commandhandler.ads:9 *);
        (try
        ();
          ([sloc:commandhandler.adb:17] ());
          ([sloc:commandhandler.adb:17] ( Commandhandler__execute__t.t :=
          (let ([mlw:proxy_symbol] [introduced] temp___408) =
            ( (Commandhandler__execute__t__aggregate_def.commandhandler__execute__t__aggregate_def
                 ( --pp_record_aggregate NOT IMPLEMENTED))) in
            ([mlw:proxy_symbol] [introduced] temp___408)));
          assume
          { (Commandhandler__execute__TtS___axiom.dynamic_invariant
               !Commandhandler__execute__t.t True False True True) });
          ([sloc:commandhandler.adb:18] assume
          { (Standard__natural___axiom.default_initial_assumption
               !Commandhandler__execute__numtokens.numtokens False) };
          assume
          { (Standard__natural___axiom.dynamic_invariant
               !Commandhandler__execute__numtokens.numtokens False False True
               True) });
          ([sloc:commandhandler.adb:19] ());
          ([sloc:commandhandler.adb:20] ());
          ([sloc:commandhandler.adb:29] ());
          ();
          ([GP_Sloc:commandhandler.adb:22:39] ([sloc:commandhandler.adb:22] ()));
          ([GP_Sloc:commandhandler.adb:22:54] ([sloc:commandhandler.adb:22] ()));
          ([GP_Sloc:commandhandler.adb:22:57] ([sloc:commandhandler.adb:22] ()));
          ([GP_Sloc:commandhandler.adb:22:24] ([sloc:commandhandler.adb:22] ()));
          ([GP_Sloc:commandhandler.adb:22:24] ([sloc:commandhandler.adb:22] (let ([mlw:proxy_symbol]
                                              [introduced] temp___compl_410)
                                              =
                                              (let ([mlw:proxy_symbol]
                                                [introduced] temp___409) =
                                                ( !Commandhandler__execute__t.t)
                                                in
                                                (Mystringtokeniser__tokenarray.of_array
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___409)
                                                   Commandhandler__execute__TTtSP1.first
                                                   Commandhandler__execute__TTtSP1.last))
                                              in
                                              --pp_binding_ref NOT IMPLEMENTED)));
          ([GP_Sloc:commandhandler.adb:24:10] ([sloc:commandhandler.adb:24] ()));
          ([GP_Sloc:commandhandler.adb:24:27] ([sloc:commandhandler.adb:24] ()));
          ([GP_Sloc:commandhandler.adb:24:7] ([sloc:commandhandler.adb:24] 
                                             (if
                                             ([sloc:commandhandler.adb:24] ([branch_id=917]
                                             _gnatprove_standard.Main.spark__branch
                                             :=
                                             (_gnatprove_standard.Boolean.orb
                                                (!Commandhandler__execute__numtokens.numtokens
                                                   > 3)
                                                (!Commandhandler__execute__numtokens.numtokens
                                                   < 1))));
                                             ([branch_id=917] _gnatprove_standard.Main.spark__branch).bool__content
                                             then
                                             ();
                                             ([GP_Sloc:commandhandler.adb:25:10] 
                                             ([sloc:commandhandler.adb:25] ()));
                                             ([GP_Sloc:commandhandler.adb:25:10] 
                                             ([sloc:commandhandler.adb:25] (
                                              any
                                               --pp_effects NOT IMPLEMENTED
                                               pre {}
                                             post {} return unit);
                                             (Ada___ada__text_io__put_line__2___axiom.put_line
                                                (let ([mlw:proxy_symbol]
                                                [introduced] temp___415) =
                                                ( (Temp___String_Literal_414.temp___String_Literal_414
                                                     ())) in
                                                (Standard__string.of_array
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___415) 1
                                                   28)));
                                             ()));
                                             ([GP_Sloc:commandhandler.adb:26:10] 
                                             ([sloc:commandhandler.adb:26] raise Return__exc))
                                              else ())));
        ([GP_Sloc:commandhandler.adb:29:7] ([sloc:commandhandler.adb:29] ();
                                           ([sloc:commandhandler.adb:30] ());
                                           ([sloc:commandhandler.adb:30] ());
                                           ([sloc:commandhandler.adb:30] (let commandhandler__execute__B_1__token1__assume
                                           =
                                           (Mystring_instance__lines__to_string___axiom.to_string
                                              ( ([sloc:commandhandler.adb:30] 
                                                ([GP_Id:57]
                                                [GP_Reason:VC_PRECONDITION]
                                                [vc:annotation]
                                                [GP_Sloc:commandhandler.adb:30:50]
                                                [comment:         Token1 : String := Lines.To_String(Lines.Substring(S, T(1).Start, T(1).Start + T(1).Length - 1));                                                  ^ commandhandler.adb:30:50:VC_PRECONDITION]
                                                [GP_Shape:B_1_declblk__token1_decl__call_to_string__call_substring] (
                                                Mystring_instance__lines__substring___axiom.substring
                                                  ( Commandhandler__execute__s.s)
                                                  ( (Standard__positive__rep.to_rep
                                                       ( (Array__Int__Mystringtokeniser__tokenextent.get
                                                            !Commandhandler__execute__t.t
                                                            1)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                  ( ([sloc:commandhandler.adb:30] 
                                                    ([GP_Shape:B_1_declblk__token1_decl__call_to_string__call_substring__sub]
                                                    [GP_Id:56]
                                                    [comment:         Token1 : String := Lines.To_String(Lines.Substring(S, T(1).Start, T(1).Start + T(1).Length - 1));                                                                                                     ^ commandhandler.adb:30:101:VC_RANGE_CHECK]
                                                    [vc:annotation]
                                                    [GP_Reason:VC_RANGE_CHECK]
                                                    [GP_Sloc:commandhandler.adb:30:101] (
                                                    Standard__positive.range_check_
                                                      (([sloc:commandhandler.adb:30] 
                                                       ([comment:         Token1 : String := Lines.To_String(Lines.Substring(S, T(1).Start, T(1).Start + T(1).Length - 1));                                                                                       ^ commandhandler.adb:30:87:VC_OVERFLOW_CHECK]
                                                       [vc:annotation]
                                                       [GP_Reason:VC_OVERFLOW_CHECK]
                                                       [GP_Shape:B_1_declblk__token1_decl__call_to_string__call_substring__sub__add]
                                                       [GP_Sloc:commandhandler.adb:30:87]
                                                       [GP_Id:55] (Standard__integer.range_check_
                                                                    ((Standard__positive__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    1)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)
                                                                    + (Standard__natural__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    1)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                         - 1))))))))))
                                           in (
                                           Commandhandler__execute__B_1__token1.token1
                                           :=
                                           (Standard__string.to_array
                                              commandhandler__execute__B_1__token1__assume));
                                           assume
                                           { ((Standard__integer__rep.to_rep
                                                 Commandhandler__execute__B_1__token1.token1__first)
                                                = (Standard__string.first
                                                     commandhandler__execute__B_1__token1__assume)) };
                                           assume
                                           { ((Standard__integer__rep.to_rep
                                                 Commandhandler__execute__B_1__token1.token1__last)
                                                = (Standard__string.last
                                                     commandhandler__execute__B_1__token1__assume)) });
                                           assume
                                           { (Standard__string___axiom.dynamic_invariant
                                                (Standard__string.of_array
                                                   !Commandhandler__execute__B_1__token1.token1
                                                   (Standard__integer__rep.to_rep
                                                      Commandhandler__execute__B_1__token1.token1__first)
                                                   (Standard__integer__rep.to_rep
                                                      Commandhandler__execute__B_1__token1.token1__last))
                                                True False True True) });
                                           ([sloc:commandhandler.adb:43] ());
                                           ([sloc:commandhandler.adb:86] ());
                                           ([sloc:commandhandler.adb:110] ());
                                           ([sloc:commandhandler.adb:136] ());
                                           ([sloc:commandhandler.adb:159] ());
                                           ([sloc:commandhandler.adb:189] ());
                                           ([sloc:commandhandler.adb:219] ());
                                           ([sloc:commandhandler.adb:250] ());
                                           ([sloc:commandhandler.adb:272] ());
                                           ();
                                           ([GP_Sloc:commandhandler.adb:32:13] 
                                           ([sloc:commandhandler.adb:32] ()));
                                           ([GP_Sloc:commandhandler.adb:32:10] 
                                           ([sloc:commandhandler.adb:32] 
                                           (if
                                           ([sloc:commandhandler.adb:32] ([branch_id=962]
                                           _gnatprove_standard.Main.spark__branch
                                           :=
                                           ((((let ([mlw:proxy_symbol]
                                                [introduced] temp___660) =
                                                (Temp___String_Literal_656.temp___String_Literal_656
                                                   ()) in
                                                (let ([mlw:proxy_symbol]
                                                [introduced] temp___658) =
                                                (Standard__string.of_array
                                                   !Commandhandler__execute__B_1__token1.token1
                                                   (Standard__integer__rep.to_rep
                                                      Commandhandler__execute__B_1__token1.token1__first)
                                                   (Standard__integer__rep.to_rep
                                                      Commandhandler__execute__B_1__token1.token1__last))
                                                in
                                                (Array__Int__Standard__character.bool_eq
                                                   (Standard__string.to_array
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___658))
                                                   (Standard__string.first
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___658))
                                                   (Standard__string.last
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___658))
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___660) 1
                                                   1))) ||
                                                (let ([mlw:proxy_symbol]
                                                [introduced] temp___665) =
                                                (Temp___String_Literal_661.temp___String_Literal_661
                                                   ()) in
                                                (let ([mlw:proxy_symbol]
                                                [introduced] temp___663) =
                                                (Standard__string.of_array
                                                   !Commandhandler__execute__B_1__token1.token1
                                                   (Standard__integer__rep.to_rep
                                                      Commandhandler__execute__B_1__token1.token1__first)
                                                   (Standard__integer__rep.to_rep
                                                      Commandhandler__execute__B_1__token1.token1__last))
                                                in
                                                (Array__Int__Standard__character.bool_eq
                                                   (Standard__string.to_array
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___663))
                                                   (Standard__string.first
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___663))
                                                   (Standard__string.last
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___663))
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___665) 1
                                                   1)))) ||
                                               (let ([mlw:proxy_symbol]
                                               [introduced] temp___670) =
                                               (Temp___String_Literal_666.temp___String_Literal_666
                                                  ()) in
                                               (let ([mlw:proxy_symbol]
                                               [introduced] temp___668) =
                                               (Standard__string.of_array
                                                  !Commandhandler__execute__B_1__token1.token1
                                                  (Standard__integer__rep.to_rep
                                                     Commandhandler__execute__B_1__token1.token1__first)
                                                  (Standard__integer__rep.to_rep
                                                     Commandhandler__execute__B_1__token1.token1__last))
                                               in
                                               (Array__Int__Standard__character.bool_eq
                                                  (Standard__string.to_array
                                                     ([mlw:proxy_symbol]
                                                     [introduced] temp___668))
                                                  (Standard__string.first
                                                     ([mlw:proxy_symbol]
                                                     [introduced] temp___668))
                                                  (Standard__string.last
                                                     ([mlw:proxy_symbol]
                                                     [introduced] temp___668))
                                                  ([mlw:proxy_symbol]
                                                  [introduced] temp___670) 1
                                                  1)))) ||
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___675) =
                                              (Temp___String_Literal_671.temp___String_Literal_671
                                                 ()) in
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___673) =
                                              (Standard__string.of_array
                                                 !Commandhandler__execute__B_1__token1.token1
                                                 (Standard__integer__rep.to_rep
                                                    Commandhandler__execute__B_1__token1.token1__first)
                                                 (Standard__integer__rep.to_rep
                                                    Commandhandler__execute__B_1__token1.token1__last))
                                              in
                                              (Array__Int__Standard__character.bool_eq
                                                 (Standard__string.to_array
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___673))
                                                 (Standard__string.first
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___673))
                                                 (Standard__string.last
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___673))
                                                 ([mlw:proxy_symbol]
                                                 [introduced] temp___675) 1 1))))));
                                           ([branch_id=962] _gnatprove_standard.Main.spark__branch).bool__content
                                           then
                                           ();
                                           ([GP_Sloc:commandhandler.adb:33:22] 
                                           ([sloc:commandhandler.adb:33] ()));
                                           ([GP_Sloc:commandhandler.adb:33:13] 
                                           ([sloc:commandhandler.adb:33] 
                                           (if
                                           ([sloc:commandhandler.adb:33] ([branch_id=978]
                                           _gnatprove_standard.Main.spark__branch
                                           :=
                                           (Locker__is_locked___axiom.is_locked
                                              ( --pp_record_aggregate NOT IMPLEMENTED))));
                                           ([branch_id=978] _gnatprove_standard.Main.spark__branch).bool__content
                                           then
                                           ();
                                           ([GP_Sloc:commandhandler.adb:34:16] 
                                           ([sloc:commandhandler.adb:34] ()));
                                           ([GP_Sloc:commandhandler.adb:34:16] 
                                           ([sloc:commandhandler.adb:34] (
                                            any --pp_effects NOT IMPLEMENTED
                                             pre {}
                                           post {} return unit);
                                           (Ada___ada__text_io__put_line__2___axiom.put_line
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___417) =
                                              ( (Temp___String_Literal_416.temp___String_Literal_416
                                                   ())) in
                                              (Standard__string.of_array
                                                 ([mlw:proxy_symbol]
                                                 [introduced] temp___417) 1 7)));
                                           ()));
                                           ([GP_Sloc:commandhandler.adb:35:16] 
                                           ([sloc:commandhandler.adb:35] raise Return__exc))
                                            else ())));
                                           ([GP_Sloc:commandhandler.adb:38:16] 
                                           ([sloc:commandhandler.adb:38] ()));
                                           ([GP_Sloc:commandhandler.adb:38:13] 
                                           ([sloc:commandhandler.adb:38] 
                                           (if
                                           ([sloc:commandhandler.adb:38] ([branch_id=988]
                                           _gnatprove_standard.Main.spark__branch
                                           :=
                                           (!Commandhandler__execute__numtokens.numtokens
                                              <> 1)));
                                           ([branch_id=988] _gnatprove_standard.Main.spark__branch).bool__content
                                           then
                                           ();
                                           ([GP_Sloc:commandhandler.adb:39:16] 
                                           ([sloc:commandhandler.adb:39] ()));
                                           ([GP_Sloc:commandhandler.adb:39:16] 
                                           ([sloc:commandhandler.adb:39] (
                                            any --pp_effects NOT IMPLEMENTED
                                             pre {}
                                           post {} return unit);
                                           (Ada___ada__text_io__put_line__2___axiom.put_line
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___419) =
                                              ( (Temp___String_Literal_418.temp___String_Literal_418
                                                   ())) in
                                              (Standard__string.of_array
                                                 ([mlw:proxy_symbol]
                                                 [introduced] temp___419) 1
                                                 31)));
                                           ()));
                                           ([GP_Sloc:commandhandler.adb:40:16] 
                                           ([sloc:commandhandler.adb:40] raise Return__exc))
                                            else ())));
                                           ([GP_Sloc:commandhandler.adb:43:13] 
                                           ([sloc:commandhandler.adb:43] ();
                                           ([sloc:commandhandler.adb:44] abstract
                                           ensures
                                           { True } begin  (let _ =
                                                          (let ([mlw:proxy_symbol]
                                                            [introduced] temp___495)
                                                            =
                                                            ( any  pre {}
                                                              post {True}
                                                              return
                                                              Commandhandler__execute__result.result__)
                                                          in ())
                                           in ())  end;
                                           assume
                                           { (Commandhandler__execute__result___axiom.default_initial_assumption
                                                --pp_record_aggregate NOT IMPLEMENTED
                                                False) };
                                           assume
                                           { (Commandhandler__execute__result___axiom.dynamic_invariant
                                                --pp_record_aggregate NOT IMPLEMENTED
                                                False False True True) });
                                           ([sloc:commandhandler.adb:45] (
                                           Commandhandler__execute__B_1__B_2__a.a
                                           := ( 0));
                                           assume
                                           { (Commandhandler__execute__int32___axiom.dynamic_invariant
                                                !Commandhandler__execute__B_1__B_2__a.a
                                                True False True True) });
                                           ([sloc:commandhandler.adb:45] (
                                           Commandhandler__execute__B_1__B_2__b.b
                                           := ( 0));
                                           assume
                                           { (Commandhandler__execute__int32___axiom.dynamic_invariant
                                                !Commandhandler__execute__B_1__B_2__b.b
                                                True False True True) });
                                           ([sloc:commandhandler.adb:46] (
                                           Commandhandler__execute__B_1__B_2__success.success
                                           :=
                                           (_gnatprove_standard.Boolean.of_int
                                              0)));
                                           ();
                                           ([GP_Sloc:commandhandler.adb:48:34] 
                                           ([sloc:commandhandler.adb:48] ()));
                                           ([GP_Sloc:commandhandler.adb:48:37] 
                                           ([sloc:commandhandler.adb:48] ()));
                                           ([GP_Sloc:commandhandler.adb:48:40] 
                                           ([sloc:commandhandler.adb:48] ()));
                                           ([GP_Sloc:commandhandler.adb:48:21] 
                                           ([sloc:commandhandler.adb:48] ()));
                                           ([GP_Sloc:commandhandler.adb:48:21] 
                                           ([sloc:commandhandler.adb:48] (let ([mlw:proxy_symbol]
                                           [introduced] temp___compl_420) =
                                           ( --pp_record_aggregate NOT IMPLEMENTED)
                                           in (let ([mlw:proxy_symbol]
                                           [introduced] temp___compl_421) =
                                           ( !Commandhandler__execute__B_1__B_2__a.a)
                                           in
                                           --pp_binding_ref NOT IMPLEMENTED))));
                                           ([GP_Sloc:commandhandler.adb:49:23] 
                                           ([sloc:commandhandler.adb:49] ()));
                                           ([GP_Sloc:commandhandler.adb:49:16] 
                                           ([sloc:commandhandler.adb:49] 
                                           (if
                                           ([sloc:commandhandler.adb:49] ([branch_id=1024]
                                           _gnatprove_standard.Main.spark__branch
                                           := --pp_not NOT IMPLEMENTED));
                                           ([branch_id=1024] _gnatprove_standard.Main.spark__branch).bool__content
                                           then
                                           ();
                                           ([GP_Sloc:commandhandler.adb:50:19] 
                                           ([sloc:commandhandler.adb:50] ()));
                                           ([GP_Sloc:commandhandler.adb:50:19] 
                                           ([sloc:commandhandler.adb:50] (
                                            any --pp_effects NOT IMPLEMENTED
                                             pre {}
                                           post {} return unit);
                                           (Ada___ada__text_io__put_line__2___axiom.put_line
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___425) =
                                              ( (Temp___String_Literal_424.temp___String_Literal_424
                                                   ())) in
                                              (Standard__string.of_array
                                                 ([mlw:proxy_symbol]
                                                 [introduced] temp___425) 1
                                                 24)));
                                           ()))  else
                                           ();
                                           ([GP_Sloc:commandhandler.adb:52:22] 
                                           ([sloc:commandhandler.adb:52] ()));
                                           ([GP_Sloc:commandhandler.adb:52:19] 
                                           ([sloc:commandhandler.adb:52] 
                                           (if
                                           ([sloc:commandhandler.adb:52] ([branch_id=1030]
                                           _gnatprove_standard.Main.spark__branch
                                           :=
                                           (let ([mlw:proxy_symbol]
                                             [introduced] temp___488) =
                                             (Temp___String_Literal_484.temp___String_Literal_484
                                                ()) in
                                             (let ([mlw:proxy_symbol]
                                             [introduced] temp___486) =
                                             (Standard__string.of_array
                                                !Commandhandler__execute__B_1__token1.token1
                                                (Standard__integer__rep.to_rep
                                                   Commandhandler__execute__B_1__token1.token1__first)
                                                (Standard__integer__rep.to_rep
                                                   Commandhandler__execute__B_1__token1.token1__last))
                                             in
                                             (Array__Int__Standard__character.bool_eq
                                                (Standard__string.to_array
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___486))
                                                (Standard__string.first
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___486))
                                                (Standard__string.last
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___486))
                                                ([mlw:proxy_symbol]
                                                [introduced] temp___488) 1 1)))));
                                           ([branch_id=1030] _gnatprove_standard.Main.spark__branch).bool__content
                                           then
                                           ();
                                           ([GP_Sloc:commandhandler.adb:53:22] 
                                           ([sloc:commandhandler.adb:53] ()));
                                           ([GP_Sloc:commandhandler.adb:53:45] 
                                           ([sloc:commandhandler.adb:53] ()));
                                           ([GP_Sloc:commandhandler.adb:53:48] 
                                           ([sloc:commandhandler.adb:53] ()));
                                           ([GP_Sloc:commandhandler.adb:53:37] 
                                           ([sloc:commandhandler.adb:53] ()));
                                           ([GP_Sloc:commandhandler.adb:53:24] 
                                           ([sloc:commandhandler.adb:53] (let ([mlw:proxy_symbol]
                                           [introduced] temp___427) =
                                           ( (Calculator__add___axiom.add
                                                ( --pp_record_aggregate NOT IMPLEMENTED)
                                                ( !Commandhandler__execute__B_1__B_2__a.a)
                                                ( !Commandhandler__execute__B_1__B_2__b.b)))
                                           in (
                                           Commandhandler__execute__B_1__B_2__r.r__split_fields
                                           :=
                                           ([mlw:proxy_symbol]
                                             [introduced] temp___427).Commandhandler__execute__result.__split_fields))));
                                           ([GP_Sloc:commandhandler.adb:54:22] 
                                           ([sloc:commandhandler.adb:54] ()));
                                           ([GP_Sloc:commandhandler.adb:54:22] 
                                           ([sloc:commandhandler.adb:54] (
                                            any --pp_effects NOT IMPLEMENTED
                                             pre {}
                                           post {} return unit);
                                           (Ada___ada__text_io__put_line__2___axiom.put_line
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___437) =
                                              (Standard_String__Img.to_string
                                                 (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                    (Calculator__int32__rep.to_rep
                                                       ( --pp_record_aggregate NOT IMPLEMENTED).Commandhandler__execute__result.__split_fields.Commandhandler__execute__result.rec__calculator__result__value))
                                                 12) in
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___436) =
                                              (let ([mlw:proxy_symbol]
                                                [introduced] temp___435) =
                                                (Temp___String_Literal_428.temp___String_Literal_428
                                                   ()) in
                                                (let ([mlw:proxy_symbol]
                                                [introduced] temp___434) =
                                                (let ([mlw:proxy_symbol]
                                                  [introduced] temp___433) =
                                                  (Standard_String__Img.to_string
                                                     (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                        !Commandhandler__execute__B_1__B_2__b.b)
                                                     12) in
                                                  (let ([mlw:proxy_symbol]
                                                  [introduced] temp___432) =
                                                  (let ([mlw:proxy_symbol]
                                                    [introduced] temp___431)
                                                    =
                                                    (Temp___String_Literal_429.temp___String_Literal_429
                                                       ()) in
                                                    (let ([mlw:proxy_symbol]
                                                    [introduced] temp___430)
                                                    =
                                                    (Standard_String__Img.to_string
                                                       (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                          !Commandhandler__execute__B_1__B_2__a.a)
                                                       12) in
                                                    (if
                                                    ((Standard__string.length
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___430))
                                                       = 0)
                                                    then
                                                    (Standard__string.of_array
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___431)
                                                       1 3)
                                                     else
                                                    (Standard__string.of_array
                                                       (Array__Int__Standard__character__Concat.concat
                                                          (Standard__string.to_array
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___430))
                                                          (Standard__string.first
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___430))
                                                          (Standard__string.last
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___430))
                                                          ([mlw:proxy_symbol]
                                                          [introduced] temp___431)
                                                          1 3)
                                                       (Standard__string.first
                                                          ([mlw:proxy_symbol]
                                                          [introduced] temp___430))
                                                       ([sloc:commandhandler.adb:54] 
                                                       ([vc:annotation]
                                                       [GP_Sloc:commandhandler.adb:54:46]
                                                       [GP_Reason:VC_RANGE_CHECK]
                                                       [comment:                     Put_Line(Int32'Image(A) & " + " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                              ^ commandhandler.adb:54:46:VC_RANGE_CHECK]
                                                       [GP_Id:1]
                                                       [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat__concat] (
                                                       Standard__positive.range_check_
                                                         (((Standard__string.first
                                                              ([mlw:proxy_symbol]
                                                              [introduced] temp___430))
                                                             + ((_gnatprove_standard.Integer.length
                                                                   (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___430))
                                                                   (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___430)))
                                                                  + (
                                                                  _gnatprove_standard.Integer.length
                                                                    1 3)))
                                                            - 1)))))))) in
                                                  (if
                                                  ((Standard__string.length
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___432))
                                                     = 0)
                                                  then
                                                  (Standard__string.of_array
                                                     (Standard__string.to_array
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___433))
                                                     (Standard__string.first
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___433))
                                                     (Standard__string.last
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___433)))
                                                   else
                                                  (Standard__string.of_array
                                                     (Array__Int__Standard__character__Concat.concat
                                                        (Standard__string.to_array
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___432))
                                                        (Standard__string.first
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___432))
                                                        (Standard__string.last
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___432))
                                                        (Standard__string.to_array
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___433))
                                                        (Standard__string.first
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___433))
                                                        (Standard__string.last
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___433)))
                                                     (Standard__string.first
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___432))
                                                     ([sloc:commandhandler.adb:54] 
                                                     ([GP_Sloc:commandhandler.adb:54:54]
                                                     [comment:                     Put_Line(Int32'Image(A) & " + " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                      ^ commandhandler.adb:54:54:VC_RANGE_CHECK]
                                                     [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat]
                                                     [vc:annotation]
                                                     [GP_Reason:VC_RANGE_CHECK]
                                                     [GP_Id:2] (Standard__positive.range_check_
                                                                  (((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___432))
                                                                    + (
                                                                    (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___432))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___432)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___433))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___433)))))
                                                                    - 1))))))))
                                                in
                                                (if
                                                ((Standard__string.length
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___434))
                                                   = 0)
                                                then
                                                (Standard__string.of_array
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___435) 1
                                                   3)
                                                 else
                                                (Standard__string.of_array
                                                   (Array__Int__Standard__character__Concat.concat
                                                      (Standard__string.to_array
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___434))
                                                      (Standard__string.first
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___434))
                                                      (Standard__string.last
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___434))
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___435)
                                                      1 3)
                                                   (Standard__string.first
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___434))
                                                   ([sloc:commandhandler.adb:54] 
                                                   ([comment:                     Put_Line(Int32'Image(A) & " + " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                       ^ commandhandler.adb:54:71:VC_RANGE_CHECK]
                                                   [vc:annotation]
                                                   [GP_Sloc:commandhandler.adb:54:71]
                                                   [GP_Reason:VC_RANGE_CHECK]
                                                   [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat]
                                                   [GP_Id:3] (Standard__positive.range_check_
                                                                (((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___434))
                                                                    + (
                                                                    (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___434))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___434)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    1 3)))
                                                                   - 1))))))))
                                              in
                                              (if
                                              ((Standard__string.length
                                                  ([mlw:proxy_symbol]
                                                  [introduced] temp___436))
                                                 = 0)
                                              then
                                              (Standard__string.of_array
                                                 (Standard__string.to_array
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___437))
                                                 (Standard__string.first
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___437))
                                                 (Standard__string.last
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___437)))
                                               else
                                              (Standard__string.of_array
                                                 (Array__Int__Standard__character__Concat.concat
                                                    (Standard__string.to_array
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___436))
                                                    (Standard__string.first
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___436))
                                                    (Standard__string.last
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___436))
                                                    (Standard__string.to_array
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___437))
                                                    (Standard__string.first
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___437))
                                                    (Standard__string.last
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___437)))
                                                 (Standard__string.first
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___436))
                                                 ([sloc:commandhandler.adb:54] 
                                                 ([comment:                     Put_Line(Int32'Image(A) & " + " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                               ^ commandhandler.adb:54:79:VC_RANGE_CHECK]
                                                 [vc:annotation]
                                                 [GP_Sloc:commandhandler.adb:54:79]
                                                 [GP_Reason:VC_RANGE_CHECK]
                                                 [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat]
                                                 [GP_Id:4] (Standard__positive.range_check_
                                                              (((Standard__string.first
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___436))
                                                                  + (
                                                                  (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___436))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___436)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___437))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___437)))))
                                                                 - 1)))))))));
                                           ()))  else
                                           ([GP_Sloc:commandhandler.adb:55:19] 
                                           (if
                                           ([sloc:commandhandler.adb:55] ([branch_id=1066]
                                           _gnatprove_standard.Main.spark__branch
                                           :=
                                           (let ([mlw:proxy_symbol]
                                             [introduced] temp___483) =
                                             (Temp___String_Literal_479.temp___String_Literal_479
                                                ()) in
                                             (let ([mlw:proxy_symbol]
                                             [introduced] temp___481) =
                                             (Standard__string.of_array
                                                !Commandhandler__execute__B_1__token1.token1
                                                (Standard__integer__rep.to_rep
                                                   Commandhandler__execute__B_1__token1.token1__first)
                                                (Standard__integer__rep.to_rep
                                                   Commandhandler__execute__B_1__token1.token1__last))
                                             in
                                             (Array__Int__Standard__character.bool_eq
                                                (Standard__string.to_array
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___481))
                                                (Standard__string.first
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___481))
                                                (Standard__string.last
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___481))
                                                ([mlw:proxy_symbol]
                                                [introduced] temp___483) 1 1)))));
                                           ([branch_id=1066] _gnatprove_standard.Main.spark__branch).bool__content
                                           then
                                           ();
                                           ([GP_Sloc:commandhandler.adb:56:22] 
                                           ([sloc:commandhandler.adb:56] ()));
                                           ([GP_Sloc:commandhandler.adb:56:45] 
                                           ([sloc:commandhandler.adb:56] ()));
                                           ([GP_Sloc:commandhandler.adb:56:48] 
                                           ([sloc:commandhandler.adb:56] ()));
                                           ([GP_Sloc:commandhandler.adb:56:37] 
                                           ([sloc:commandhandler.adb:56] ()));
                                           ([GP_Sloc:commandhandler.adb:56:24] 
                                           ([sloc:commandhandler.adb:56] (let ([mlw:proxy_symbol]
                                           [introduced] temp___468) =
                                           ( (Calculator__sub___axiom.sub
                                                ( --pp_record_aggregate NOT IMPLEMENTED)
                                                ( !Commandhandler__execute__B_1__B_2__a.a)
                                                ( !Commandhandler__execute__B_1__B_2__b.b)))
                                           in (
                                           Commandhandler__execute__B_1__B_2__r.r__split_fields
                                           :=
                                           ([mlw:proxy_symbol]
                                             [introduced] temp___468).Commandhandler__execute__result.__split_fields))));
                                           ([GP_Sloc:commandhandler.adb:57:22] 
                                           ([sloc:commandhandler.adb:57] ()));
                                           ([GP_Sloc:commandhandler.adb:57:22] 
                                           ([sloc:commandhandler.adb:57] (
                                            any --pp_effects NOT IMPLEMENTED
                                             pre {}
                                           post {} return unit);
                                           (Ada___ada__text_io__put_line__2___axiom.put_line
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___478) =
                                              (Standard_String__Img.to_string
                                                 (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                    (Calculator__int32__rep.to_rep
                                                       ( --pp_record_aggregate NOT IMPLEMENTED).Commandhandler__execute__result.__split_fields.Commandhandler__execute__result.rec__calculator__result__value))
                                                 12) in
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___477) =
                                              (let ([mlw:proxy_symbol]
                                                [introduced] temp___476) =
                                                (Temp___String_Literal_469.temp___String_Literal_469
                                                   ()) in
                                                (let ([mlw:proxy_symbol]
                                                [introduced] temp___475) =
                                                (let ([mlw:proxy_symbol]
                                                  [introduced] temp___474) =
                                                  (Standard_String__Img.to_string
                                                     (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                        !Commandhandler__execute__B_1__B_2__b.b)
                                                     12) in
                                                  (let ([mlw:proxy_symbol]
                                                  [introduced] temp___473) =
                                                  (let ([mlw:proxy_symbol]
                                                    [introduced] temp___472)
                                                    =
                                                    (Temp___String_Literal_470.temp___String_Literal_470
                                                       ()) in
                                                    (let ([mlw:proxy_symbol]
                                                    [introduced] temp___471)
                                                    =
                                                    (Standard_String__Img.to_string
                                                       (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                          !Commandhandler__execute__B_1__B_2__a.a)
                                                       12) in
                                                    (if
                                                    ((Standard__string.length
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___471))
                                                       = 0)
                                                    then
                                                    (Standard__string.of_array
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___472)
                                                       1 3)
                                                     else
                                                    (Standard__string.of_array
                                                       (Array__Int__Standard__character__Concat.concat
                                                          (Standard__string.to_array
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___471))
                                                          (Standard__string.first
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___471))
                                                          (Standard__string.last
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___471))
                                                          ([mlw:proxy_symbol]
                                                          [introduced] temp___472)
                                                          1 3)
                                                       (Standard__string.first
                                                          ([mlw:proxy_symbol]
                                                          [introduced] temp___471))
                                                       ([sloc:commandhandler.adb:57] 
                                                       ([GP_Id:13]
                                                       [vc:annotation]
                                                       [GP_Reason:VC_RANGE_CHECK]
                                                       [comment:                     Put_Line(Int32'Image(A) & " - " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                              ^ commandhandler.adb:57:46:VC_RANGE_CHECK]
                                                       [GP_Sloc:commandhandler.adb:57:46]
                                                       [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat__concat] (
                                                       Standard__positive.range_check_
                                                         (((Standard__string.first
                                                              ([mlw:proxy_symbol]
                                                              [introduced] temp___471))
                                                             + ((_gnatprove_standard.Integer.length
                                                                   (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___471))
                                                                   (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___471)))
                                                                  + (
                                                                  _gnatprove_standard.Integer.length
                                                                    1 3)))
                                                            - 1)))))))) in
                                                  (if
                                                  ((Standard__string.length
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___473))
                                                     = 0)
                                                  then
                                                  (Standard__string.of_array
                                                     (Standard__string.to_array
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___474))
                                                     (Standard__string.first
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___474))
                                                     (Standard__string.last
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___474)))
                                                   else
                                                  (Standard__string.of_array
                                                     (Array__Int__Standard__character__Concat.concat
                                                        (Standard__string.to_array
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___473))
                                                        (Standard__string.first
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___473))
                                                        (Standard__string.last
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___473))
                                                        (Standard__string.to_array
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___474))
                                                        (Standard__string.first
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___474))
                                                        (Standard__string.last
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___474)))
                                                     (Standard__string.first
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___473))
                                                     ([sloc:commandhandler.adb:57] 
                                                     ([GP_Id:14]
                                                     [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat]
                                                     [vc:annotation]
                                                     [GP_Sloc:commandhandler.adb:57:54]
                                                     [GP_Reason:VC_RANGE_CHECK]
                                                     [comment:                     Put_Line(Int32'Image(A) & " - " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                      ^ commandhandler.adb:57:54:VC_RANGE_CHECK] (
                                                     Standard__positive.range_check_
                                                       (((Standard__string.first
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___473))
                                                           + ((_gnatprove_standard.Integer.length
                                                                 (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___473))
                                                                 (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___473)))
                                                                + (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___474))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___474)))))
                                                          - 1)))))))) in
                                                (if
                                                ((Standard__string.length
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___475))
                                                   = 0)
                                                then
                                                (Standard__string.of_array
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___476) 1
                                                   3)
                                                 else
                                                (Standard__string.of_array
                                                   (Array__Int__Standard__character__Concat.concat
                                                      (Standard__string.to_array
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___475))
                                                      (Standard__string.first
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___475))
                                                      (Standard__string.last
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___475))
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___476)
                                                      1 3)
                                                   (Standard__string.first
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___475))
                                                   ([sloc:commandhandler.adb:57] 
                                                   ([GP_Id:15]
                                                   [vc:annotation]
                                                   [comment:                     Put_Line(Int32'Image(A) & " - " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                       ^ commandhandler.adb:57:71:VC_RANGE_CHECK]
                                                   [GP_Reason:VC_RANGE_CHECK]
                                                   [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat]
                                                   [GP_Sloc:commandhandler.adb:57:71] (
                                                   Standard__positive.range_check_
                                                     (((Standard__string.first
                                                          ([mlw:proxy_symbol]
                                                          [introduced] temp___475))
                                                         + ((_gnatprove_standard.Integer.length
                                                               (Standard__string.first
                                                                  ([mlw:proxy_symbol]
                                                                  [introduced] temp___475))
                                                               (Standard__string.last
                                                                  ([mlw:proxy_symbol]
                                                                  [introduced] temp___475)))
                                                              + (_gnatprove_standard.Integer.length
                                                                   1 3))) - 1))))))))
                                              in
                                              (if
                                              ((Standard__string.length
                                                  ([mlw:proxy_symbol]
                                                  [introduced] temp___477))
                                                 = 0)
                                              then
                                              (Standard__string.of_array
                                                 (Standard__string.to_array
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___478))
                                                 (Standard__string.first
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___478))
                                                 (Standard__string.last
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___478)))
                                               else
                                              (Standard__string.of_array
                                                 (Array__Int__Standard__character__Concat.concat
                                                    (Standard__string.to_array
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___477))
                                                    (Standard__string.first
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___477))
                                                    (Standard__string.last
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___477))
                                                    (Standard__string.to_array
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___478))
                                                    (Standard__string.first
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___478))
                                                    (Standard__string.last
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___478)))
                                                 (Standard__string.first
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___477))
                                                 ([sloc:commandhandler.adb:57] 
                                                 ([GP_Id:16]
                                                 [comment:                     Put_Line(Int32'Image(A) & " - " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                               ^ commandhandler.adb:57:79:VC_RANGE_CHECK]
                                                 [vc:annotation]
                                                 [GP_Reason:VC_RANGE_CHECK]
                                                 [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat]
                                                 [GP_Sloc:commandhandler.adb:57:79] (
                                                 Standard__positive.range_check_
                                                   (((Standard__string.first
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___477))
                                                       + ((_gnatprove_standard.Integer.length
                                                             (Standard__string.first
                                                                ([mlw:proxy_symbol]
                                                                [introduced] temp___477))
                                                             (Standard__string.last
                                                                ([mlw:proxy_symbol]
                                                                [introduced] temp___477)))
                                                            + (_gnatprove_standard.Integer.length
                                                                 (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___478))
                                                                 (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___478)))))
                                                      - 1)))))))));
                                           ()))  else
                                           ([GP_Sloc:commandhandler.adb:58:19] 
                                           (if
                                           ([sloc:commandhandler.adb:58] ([branch_id=1101]
                                           _gnatprove_standard.Main.spark__branch
                                           :=
                                           (let ([mlw:proxy_symbol]
                                             [introduced] temp___466) =
                                             (Temp___String_Literal_462.temp___String_Literal_462
                                                ()) in
                                             (let ([mlw:proxy_symbol]
                                             [introduced] temp___464) =
                                             (Standard__string.of_array
                                                !Commandhandler__execute__B_1__token1.token1
                                                (Standard__integer__rep.to_rep
                                                   Commandhandler__execute__B_1__token1.token1__first)
                                                (Standard__integer__rep.to_rep
                                                   Commandhandler__execute__B_1__token1.token1__last))
                                             in
                                             (Array__Int__Standard__character.bool_eq
                                                (Standard__string.to_array
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___464))
                                                (Standard__string.first
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___464))
                                                (Standard__string.last
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___464))
                                                ([mlw:proxy_symbol]
                                                [introduced] temp___466) 1 1)))));
                                           ([branch_id=1101] _gnatprove_standard.Main.spark__branch).bool__content
                                           then
                                           ();
                                           ([GP_Sloc:commandhandler.adb:59:22] 
                                           ([sloc:commandhandler.adb:59] ()));
                                           ([GP_Sloc:commandhandler.adb:59:45] 
                                           ([sloc:commandhandler.adb:59] ()));
                                           ([GP_Sloc:commandhandler.adb:59:48] 
                                           ([sloc:commandhandler.adb:59] ()));
                                           ([GP_Sloc:commandhandler.adb:59:37] 
                                           ([sloc:commandhandler.adb:59] ()));
                                           ([GP_Sloc:commandhandler.adb:59:24] 
                                           ([sloc:commandhandler.adb:59] (let ([mlw:proxy_symbol]
                                           [introduced] temp___451) =
                                           ( (Calculator__mul___axiom.mul
                                                ( --pp_record_aggregate NOT IMPLEMENTED)
                                                ( !Commandhandler__execute__B_1__B_2__a.a)
                                                ( !Commandhandler__execute__B_1__B_2__b.b)))
                                           in (
                                           Commandhandler__execute__B_1__B_2__r.r__split_fields
                                           :=
                                           ([mlw:proxy_symbol]
                                             [introduced] temp___451).Commandhandler__execute__result.__split_fields))));
                                           ([GP_Sloc:commandhandler.adb:60:22] 
                                           ([sloc:commandhandler.adb:60] ()));
                                           ([GP_Sloc:commandhandler.adb:60:22] 
                                           ([sloc:commandhandler.adb:60] (
                                            any --pp_effects NOT IMPLEMENTED
                                             pre {}
                                           post {} return unit);
                                           (Ada___ada__text_io__put_line__2___axiom.put_line
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___461) =
                                              (Standard_String__Img.to_string
                                                 (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                    (Calculator__int32__rep.to_rep
                                                       ( --pp_record_aggregate NOT IMPLEMENTED).Commandhandler__execute__result.__split_fields.Commandhandler__execute__result.rec__calculator__result__value))
                                                 12) in
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___460) =
                                              (let ([mlw:proxy_symbol]
                                                [introduced] temp___459) =
                                                (Temp___String_Literal_452.temp___String_Literal_452
                                                   ()) in
                                                (let ([mlw:proxy_symbol]
                                                [introduced] temp___458) =
                                                (let ([mlw:proxy_symbol]
                                                  [introduced] temp___457) =
                                                  (Standard_String__Img.to_string
                                                     (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                        !Commandhandler__execute__B_1__B_2__b.b)
                                                     12) in
                                                  (let ([mlw:proxy_symbol]
                                                  [introduced] temp___456) =
                                                  (let ([mlw:proxy_symbol]
                                                    [introduced] temp___455)
                                                    =
                                                    (Temp___String_Literal_453.temp___String_Literal_453
                                                       ()) in
                                                    (let ([mlw:proxy_symbol]
                                                    [introduced] temp___454)
                                                    =
                                                    (Standard_String__Img.to_string
                                                       (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                          !Commandhandler__execute__B_1__B_2__a.a)
                                                       12) in
                                                    (if
                                                    ((Standard__string.length
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___454))
                                                       = 0)
                                                    then
                                                    (Standard__string.of_array
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___455)
                                                       1 3)
                                                     else
                                                    (Standard__string.of_array
                                                       (Array__Int__Standard__character__Concat.concat
                                                          (Standard__string.to_array
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___454))
                                                          (Standard__string.first
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___454))
                                                          (Standard__string.last
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___454))
                                                          ([mlw:proxy_symbol]
                                                          [introduced] temp___455)
                                                          1 3)
                                                       (Standard__string.first
                                                          ([mlw:proxy_symbol]
                                                          [introduced] temp___454))
                                                       ([sloc:commandhandler.adb:60] 
                                                       ([vc:annotation]
                                                       [GP_Reason:VC_RANGE_CHECK]
                                                       [comment:                     Put_Line(Int32'Image(A) & " * " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                              ^ commandhandler.adb:60:46:VC_RANGE_CHECK]
                                                       [GP_Sloc:commandhandler.adb:60:46]
                                                       [GP_Id:9]
                                                       [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat__concat] (
                                                       Standard__positive.range_check_
                                                         (((Standard__string.first
                                                              ([mlw:proxy_symbol]
                                                              [introduced] temp___454))
                                                             + ((_gnatprove_standard.Integer.length
                                                                   (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___454))
                                                                   (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___454)))
                                                                  + (
                                                                  _gnatprove_standard.Integer.length
                                                                    1 3)))
                                                            - 1)))))))) in
                                                  (if
                                                  ((Standard__string.length
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___456))
                                                     = 0)
                                                  then
                                                  (Standard__string.of_array
                                                     (Standard__string.to_array
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___457))
                                                     (Standard__string.first
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___457))
                                                     (Standard__string.last
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___457)))
                                                   else
                                                  (Standard__string.of_array
                                                     (Array__Int__Standard__character__Concat.concat
                                                        (Standard__string.to_array
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___456))
                                                        (Standard__string.first
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___456))
                                                        (Standard__string.last
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___456))
                                                        (Standard__string.to_array
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___457))
                                                        (Standard__string.first
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___457))
                                                        (Standard__string.last
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___457)))
                                                     (Standard__string.first
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___456))
                                                     ([sloc:commandhandler.adb:60] 
                                                     ([GP_Id:10]
                                                     [comment:                     Put_Line(Int32'Image(A) & " * " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                      ^ commandhandler.adb:60:54:VC_RANGE_CHECK]
                                                     [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat]
                                                     [vc:annotation]
                                                     [GP_Reason:VC_RANGE_CHECK]
                                                     [GP_Sloc:commandhandler.adb:60:54] (
                                                     Standard__positive.range_check_
                                                       (((Standard__string.first
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___456))
                                                           + ((_gnatprove_standard.Integer.length
                                                                 (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___456))
                                                                 (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___456)))
                                                                + (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___457))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___457)))))
                                                          - 1)))))))) in
                                                (if
                                                ((Standard__string.length
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___458))
                                                   = 0)
                                                then
                                                (Standard__string.of_array
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___459) 1
                                                   3)
                                                 else
                                                (Standard__string.of_array
                                                   (Array__Int__Standard__character__Concat.concat
                                                      (Standard__string.to_array
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___458))
                                                      (Standard__string.first
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___458))
                                                      (Standard__string.last
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___458))
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___459)
                                                      1 3)
                                                   (Standard__string.first
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___458))
                                                   ([sloc:commandhandler.adb:60] 
                                                   ([GP_Sloc:commandhandler.adb:60:71]
                                                   [GP_Id:11]
                                                   [comment:                     Put_Line(Int32'Image(A) & " * " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                       ^ commandhandler.adb:60:71:VC_RANGE_CHECK]
                                                   [vc:annotation]
                                                   [GP_Reason:VC_RANGE_CHECK]
                                                   [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat] (
                                                   Standard__positive.range_check_
                                                     (((Standard__string.first
                                                          ([mlw:proxy_symbol]
                                                          [introduced] temp___458))
                                                         + ((_gnatprove_standard.Integer.length
                                                               (Standard__string.first
                                                                  ([mlw:proxy_symbol]
                                                                  [introduced] temp___458))
                                                               (Standard__string.last
                                                                  ([mlw:proxy_symbol]
                                                                  [introduced] temp___458)))
                                                              + (_gnatprove_standard.Integer.length
                                                                   1 3))) - 1))))))))
                                              in
                                              (if
                                              ((Standard__string.length
                                                  ([mlw:proxy_symbol]
                                                  [introduced] temp___460))
                                                 = 0)
                                              then
                                              (Standard__string.of_array
                                                 (Standard__string.to_array
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___461))
                                                 (Standard__string.first
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___461))
                                                 (Standard__string.last
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___461)))
                                               else
                                              (Standard__string.of_array
                                                 (Array__Int__Standard__character__Concat.concat
                                                    (Standard__string.to_array
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___460))
                                                    (Standard__string.first
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___460))
                                                    (Standard__string.last
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___460))
                                                    (Standard__string.to_array
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___461))
                                                    (Standard__string.first
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___461))
                                                    (Standard__string.last
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___461)))
                                                 (Standard__string.first
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___460))
                                                 ([sloc:commandhandler.adb:60] 
                                                 ([GP_Id:12]
                                                 [GP_Sloc:commandhandler.adb:60:79]
                                                 [vc:annotation]
                                                 [comment:                     Put_Line(Int32'Image(A) & " * " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                               ^ commandhandler.adb:60:79:VC_RANGE_CHECK]
                                                 [GP_Reason:VC_RANGE_CHECK]
                                                 [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat] (
                                                 Standard__positive.range_check_
                                                   (((Standard__string.first
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___460))
                                                       + ((_gnatprove_standard.Integer.length
                                                             (Standard__string.first
                                                                ([mlw:proxy_symbol]
                                                                [introduced] temp___460))
                                                             (Standard__string.last
                                                                ([mlw:proxy_symbol]
                                                                [introduced] temp___460)))
                                                            + (_gnatprove_standard.Integer.length
                                                                 (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___461))
                                                                 (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___461)))))
                                                      - 1)))))))));
                                           ()))  else
                                           ();
                                           ([GP_Sloc:commandhandler.adb:62:22] 
                                           ([sloc:commandhandler.adb:62] ()));
                                           ([GP_Sloc:commandhandler.adb:62:45] 
                                           ([sloc:commandhandler.adb:62] ()));
                                           ([GP_Sloc:commandhandler.adb:62:48] 
                                           ([sloc:commandhandler.adb:62] ()));
                                           ([GP_Sloc:commandhandler.adb:62:37] 
                                           ([sloc:commandhandler.adb:62] ()));
                                           ([GP_Sloc:commandhandler.adb:62:24] 
                                           ([sloc:commandhandler.adb:62] (let ([mlw:proxy_symbol]
                                           [introduced] temp___439) =
                                           ( (Calculator__div___axiom.div
                                                ( --pp_record_aggregate NOT IMPLEMENTED)
                                                ( !Commandhandler__execute__B_1__B_2__a.a)
                                                ( !Commandhandler__execute__B_1__B_2__b.b)))
                                           in (
                                           Commandhandler__execute__B_1__B_2__r.r__split_fields
                                           :=
                                           ([mlw:proxy_symbol]
                                             [introduced] temp___439).Commandhandler__execute__result.__split_fields))));
                                           ([GP_Sloc:commandhandler.adb:63:22] 
                                           ([sloc:commandhandler.adb:63] ()));
                                           ([GP_Sloc:commandhandler.adb:63:22] 
                                           ([sloc:commandhandler.adb:63] (
                                            any --pp_effects NOT IMPLEMENTED
                                             pre {}
                                           post {} return unit);
                                           (Ada___ada__text_io__put_line__2___axiom.put_line
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___449) =
                                              (Standard_String__Img.to_string
                                                 (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                    (Calculator__int32__rep.to_rep
                                                       ( --pp_record_aggregate NOT IMPLEMENTED).Commandhandler__execute__result.__split_fields.Commandhandler__execute__result.rec__calculator__result__value))
                                                 12) in
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___448) =
                                              (let ([mlw:proxy_symbol]
                                                [introduced] temp___447) =
                                                (Temp___String_Literal_440.temp___String_Literal_440
                                                   ()) in
                                                (let ([mlw:proxy_symbol]
                                                [introduced] temp___446) =
                                                (let ([mlw:proxy_symbol]
                                                  [introduced] temp___445) =
                                                  (Standard_String__Img.to_string
                                                     (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                        !Commandhandler__execute__B_1__B_2__b.b)
                                                     12) in
                                                  (let ([mlw:proxy_symbol]
                                                  [introduced] temp___444) =
                                                  (let ([mlw:proxy_symbol]
                                                    [introduced] temp___443)
                                                    =
                                                    (Temp___String_Literal_441.temp___String_Literal_441
                                                       ()) in
                                                    (let ([mlw:proxy_symbol]
                                                    [introduced] temp___442)
                                                    =
                                                    (Standard_String__Img.to_string
                                                       (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                          !Commandhandler__execute__B_1__B_2__a.a)
                                                       12) in
                                                    (if
                                                    ((Standard__string.length
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___442))
                                                       = 0)
                                                    then
                                                    (Standard__string.of_array
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___443)
                                                       1 3)
                                                     else
                                                    (Standard__string.of_array
                                                       (Array__Int__Standard__character__Concat.concat
                                                          (Standard__string.to_array
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___442))
                                                          (Standard__string.first
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___442))
                                                          (Standard__string.last
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___442))
                                                          ([mlw:proxy_symbol]
                                                          [introduced] temp___443)
                                                          1 3)
                                                       (Standard__string.first
                                                          ([mlw:proxy_symbol]
                                                          [introduced] temp___442))
                                                       ([sloc:commandhandler.adb:63] 
                                                       ([comment:                     Put_Line(Int32'Image(A) & " / " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                              ^ commandhandler.adb:63:46:VC_RANGE_CHECK]
                                                       [GP_Sloc:commandhandler.adb:63:46]
                                                       [vc:annotation]
                                                       [GP_Reason:VC_RANGE_CHECK]
                                                       [GP_Id:5]
                                                       [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat__concat] (
                                                       Standard__positive.range_check_
                                                         (((Standard__string.first
                                                              ([mlw:proxy_symbol]
                                                              [introduced] temp___442))
                                                             + ((_gnatprove_standard.Integer.length
                                                                   (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___442))
                                                                   (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___442)))
                                                                  + (
                                                                  _gnatprove_standard.Integer.length
                                                                    1 3)))
                                                            - 1)))))))) in
                                                  (if
                                                  ((Standard__string.length
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___444))
                                                     = 0)
                                                  then
                                                  (Standard__string.of_array
                                                     (Standard__string.to_array
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___445))
                                                     (Standard__string.first
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___445))
                                                     (Standard__string.last
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___445)))
                                                   else
                                                  (Standard__string.of_array
                                                     (Array__Int__Standard__character__Concat.concat
                                                        (Standard__string.to_array
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___444))
                                                        (Standard__string.first
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___444))
                                                        (Standard__string.last
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___444))
                                                        (Standard__string.to_array
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___445))
                                                        (Standard__string.first
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___445))
                                                        (Standard__string.last
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___445)))
                                                     (Standard__string.first
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___444))
                                                     ([sloc:commandhandler.adb:63] 
                                                     ([GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat__concat]
                                                     [vc:annotation]
                                                     [GP_Reason:VC_RANGE_CHECK]
                                                     [comment:                     Put_Line(Int32'Image(A) & " / " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                      ^ commandhandler.adb:63:54:VC_RANGE_CHECK]
                                                     [GP_Id:6]
                                                     [GP_Sloc:commandhandler.adb:63:54] (
                                                     Standard__positive.range_check_
                                                       (((Standard__string.first
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___444))
                                                           + ((_gnatprove_standard.Integer.length
                                                                 (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___444))
                                                                 (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___444)))
                                                                + (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___445))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___445)))))
                                                          - 1)))))))) in
                                                (if
                                                ((Standard__string.length
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___446))
                                                   = 0)
                                                then
                                                (Standard__string.of_array
                                                   ([mlw:proxy_symbol]
                                                   [introduced] temp___447) 1
                                                   3)
                                                 else
                                                (Standard__string.of_array
                                                   (Array__Int__Standard__character__Concat.concat
                                                      (Standard__string.to_array
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___446))
                                                      (Standard__string.first
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___446))
                                                      (Standard__string.last
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___446))
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___447)
                                                      1 3)
                                                   (Standard__string.first
                                                      ([mlw:proxy_symbol]
                                                      [introduced] temp___446))
                                                   ([sloc:commandhandler.adb:63] 
                                                   ([GP_Sloc:commandhandler.adb:63:71]
                                                   [vc:annotation]
                                                   [GP_Reason:VC_RANGE_CHECK]
                                                   [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat__concat]
                                                   [comment:                     Put_Line(Int32'Image(A) & " / " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                       ^ commandhandler.adb:63:71:VC_RANGE_CHECK]
                                                   [GP_Id:7] (Standard__positive.range_check_
                                                                (((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___446))
                                                                    + (
                                                                    (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___446))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___446)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    1 3)))
                                                                   - 1))))))))
                                              in
                                              (if
                                              ((Standard__string.length
                                                  ([mlw:proxy_symbol]
                                                  [introduced] temp___448))
                                                 = 0)
                                              then
                                              (Standard__string.of_array
                                                 (Standard__string.to_array
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___449))
                                                 (Standard__string.first
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___449))
                                                 (Standard__string.last
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___449)))
                                               else
                                              (Standard__string.of_array
                                                 (Array__Int__Standard__character__Concat.concat
                                                    (Standard__string.to_array
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___448))
                                                    (Standard__string.first
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___448))
                                                    (Standard__string.last
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___448))
                                                    (Standard__string.to_array
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___449))
                                                    (Standard__string.first
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___449))
                                                    (Standard__string.last
                                                       ([mlw:proxy_symbol]
                                                       [introduced] temp___449)))
                                                 (Standard__string.first
                                                    ([mlw:proxy_symbol]
                                                    [introduced] temp___448))
                                                 ([sloc:commandhandler.adb:63] 
                                                 ([comment:                     Put_Line(Int32'Image(A) & " / " & Int32'Image(B) & " = " & Int32'Image(R.Value));                                                                               ^ commandhandler.adb:63:79:VC_RANGE_CHECK]
                                                 [vc:annotation]
                                                 [GP_Sloc:commandhandler.adb:63:79]
                                                 [GP_Reason:VC_RANGE_CHECK]
                                                 [GP_Shape:B_1_declblk__if__B_2_declblk__if__if__call_put_line__concat]
                                                 [GP_Id:8] (Standard__positive.range_check_
                                                              (((Standard__string.first
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___448))
                                                                  + (
                                                                  (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___448))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___448)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___449))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___449)))))
                                                                 - 1)))))))));
                                           ())))))))));
                                           ([GP_Sloc:commandhandler.adb:66:22] 
                                           ([sloc:commandhandler.adb:66] ()));
                                           ([GP_Sloc:commandhandler.adb:66:19] 
                                           ([sloc:commandhandler.adb:66] 
                                           (if
                                           ([sloc:commandhandler.adb:66] ([branch_id=1166]
                                           _gnatprove_standard.Main.spark__branch
                                           :=
                                           ( --pp_record_aggregate NOT IMPLEMENTED).Commandhandler__execute__result.__split_fields.Commandhandler__execute__result.rec__calculator__result__success));
                                           ([branch_id=1166] _gnatprove_standard.Main.spark__branch).bool__content
                                           then
                                           ();
                                           ([GP_Sloc:commandhandler.adb:67:49] 
                                           ([sloc:commandhandler.adb:67] ()));
                                           ([GP_Sloc:commandhandler.adb:67:27] 
                                           ([sloc:commandhandler.adb:67] ()));
                                           ([GP_Sloc:commandhandler.adb:67:27] 
                                           ([sloc:commandhandler.adb:67] (let ([mlw:proxy_symbol]
                                           [introduced] temp___compl_489) =
                                           ( --pp_record_aggregate NOT IMPLEMENTED)
                                           in (let ([mlw:proxy_symbol]
                                           [introduced] temp___compl_490) =
                                           !Commandhandler__execute__B_1__B_2__success.success
                                           in
                                           ( any --pp_effects NOT IMPLEMENTED
                                              pre {}
                                           post {} return unit);
                                           (Stack__push___axiom.push
                                              ( --pp_record_aggregate NOT IMPLEMENTED)
                                              Commandhandler__execute__sk.sk__split_fields
                                              ( (Calculator__int32__rep.to_rep
                                                   ( --pp_record_aggregate NOT IMPLEMENTED).Commandhandler__execute__result.__split_fields.Commandhandler__execute__result.rec__calculator__result__value))
                                              Commandhandler__execute__B_1__B_2__success.success);
                                           ()))))  else
                                           ();
                                           ([GP_Sloc:commandhandler.adb:69:22] 
                                           ([sloc:commandhandler.adb:69] ()));
                                           ([GP_Sloc:commandhandler.adb:69:22] 
                                           ([sloc:commandhandler.adb:69] (
                                            any --pp_effects NOT IMPLEMENTED
                                             pre {}
                                           post {} return unit);
                                           (Ada___ada__text_io__put_line__2___axiom.put_line
                                              (let ([mlw:proxy_symbol]
                                              [introduced] temp___492) =
                                              ( (Temp___String_Literal_491.temp___String_Literal_491
                                                   ())) in
                                              (Standard__string.of_array
                                                 ([mlw:proxy_symbol]
                                                 [introduced] temp___492) 1
                                                 45)));
                                           ()));
                                           ([GP_Sloc:commandhandler.adb:70:41] 
                                           ([sloc:commandhandler.adb:70] ()));
                                           ([GP_Sloc:commandhandler.adb:70:44] 
                                           ([sloc:commandhandler.adb:70] ()));
                                           ([GP_Sloc:commandhandler.adb:70:47] 
                                           ([sloc:commandhandler.adb:70] ()));
                                           ([GP_Sloc:commandhandler.adb:70:27] 
                                           ([sloc:commandhandler.adb:70] ()));
                                           ([GP_Sloc:commandhandler.adb:70:27] 
                                           ([sloc:commandhandler.adb:70] (let ([mlw:proxy_symbol]
                                           [introduced] temp___compl_493) =
                                           ( --pp_record_aggregate NOT IMPLEMENTED)
                                           in (let ([mlw:proxy_symbol]
                                           [introduced] temp___compl_494) =
                                           !Commandhandler__execute__B_1__B_2__success.success
                                           in
                                           ( any --pp_effects NOT IMPLEMENTED
                                              pre {}
                                           post {} return unit);
                                           (Stack__push2___axiom.push2
                                              ( --pp_record_aggregate NOT IMPLEMENTED)
                                              Commandhandler__execute__sk.sk__split_fields
                                              ( !Commandhandler__execute__B_1__B_2__a.a)
                                              ( !Commandhandler__execute__B_1__B_2__b.b)
                                              Commandhandler__execute__B_1__B_2__success.success);
                                           ()))))))))))))  else
([GP_Sloc:commandhandler.adb:75:10] (if
                                    ([sloc:commandhandler.adb:75] ([branch_id=1194]
                                    _gnatprove_standard.Main.spark__branch :=
                                    (let ([mlw:proxy_symbol]
                                      [introduced] temp___655) =
                                      (Temp___String_Literal_651.temp___String_Literal_651
                                         ()) in (let ([mlw:proxy_symbol]
                                      [introduced] temp___653) =
                                      (Standard__string.of_array
                                         !Commandhandler__execute__B_1__token1.token1
                                         (Standard__integer__rep.to_rep
                                            Commandhandler__execute__B_1__token1.token1__first)
                                         (Standard__integer__rep.to_rep
                                            Commandhandler__execute__B_1__token1.token1__last))
                                      in
                                      (Array__Int__Standard__character.bool_eq
                                         (Standard__string.to_array
                                            ([mlw:proxy_symbol]
                                            [introduced] temp___653))
                                         (Standard__string.first
                                            ([mlw:proxy_symbol]
                                            [introduced] temp___653))
                                         (Standard__string.last
                                            ([mlw:proxy_symbol]
                                            [introduced] temp___653))
                                         ([mlw:proxy_symbol]
                                         [introduced] temp___655) 1 5)))));
                                    ([branch_id=1194] _gnatprove_standard.Main.spark__branch).bool__content
                                    then
                                    ();
                                    ([GP_Sloc:commandhandler.adb:76:22] 
                                    ([sloc:commandhandler.adb:76] ()));
                                    ([GP_Sloc:commandhandler.adb:76:13] 
                                    ([sloc:commandhandler.adb:76] (if
                                                                  ([sloc:commandhandler.adb:76] ([branch_id=1197]
                                                                  _gnatprove_standard.Main.spark__branch
                                                                  :=
                                                                  (Locker__is_locked___axiom.is_locked
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED))));
                                                                  ([branch_id=1197] _gnatprove_standard.Main.spark__branch).bool__content
                                                                  then
                                                                  ();
                                                                  ([GP_Sloc:commandhandler.adb:77:16] 
                                                                  ([sloc:commandhandler.adb:77] ()));
                                                                  ([GP_Sloc:commandhandler.adb:77:16] 
                                                                  ([sloc:commandhandler.adb:77] (
                                                                   any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    }
                                                                  post {
                                                                  } return
                                                                  unit);
                                                                  (Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___641)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_640.temp___String_Literal_640
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___641)
                                                                    1 7)));
                                                                  ()));
                                                                  ([GP_Sloc:commandhandler.adb:78:16] 
                                                                  ([sloc:commandhandler.adb:78] raise Return__exc))
                                     else ())));
                                    ([GP_Sloc:commandhandler.adb:81:16] 
                                    ([sloc:commandhandler.adb:81] ()));
                                    ([GP_Sloc:commandhandler.adb:81:13] 
                                    ([sloc:commandhandler.adb:81] (if
                                                                  ([sloc:commandhandler.adb:81] ([branch_id=1207]
                                                                  _gnatprove_standard.Main.spark__branch
                                                                  :=
                                                                  (!Commandhandler__execute__numtokens.numtokens
                                                                    <> 2)));
                                                                  ([branch_id=1207] _gnatprove_standard.Main.spark__branch).bool__content
                                                                  then
                                                                  ();
                                                                  ([GP_Sloc:commandhandler.adb:82:16] 
                                                                  ([sloc:commandhandler.adb:82] ()));
                                                                  ([GP_Sloc:commandhandler.adb:82:16] 
                                                                  ([sloc:commandhandler.adb:82] (
                                                                   any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    }
                                                                  post {
                                                                  } return
                                                                  unit);
                                                                  (Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___643)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_642.temp___String_Literal_642
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___643)
                                                                    1 31)));
                                                                  ()));
                                                                  ([GP_Sloc:commandhandler.adb:83:16] 
                                                                  ([sloc:commandhandler.adb:83] raise Return__exc))
                                     else ())));
([GP_Sloc:commandhandler.adb:86:13] ([sloc:commandhandler.adb:86] ();
                                    ([sloc:commandhandler.adb:88] ());
                                    ([sloc:commandhandler.adb:88] ());
                                    ([sloc:commandhandler.adb:87] ());
                                    ([sloc:commandhandler.adb:87] (
                                    Commandhandler__execute__B_1__B_3__token2.token2
                                    :=
                                    (Stringtointeger__from_string___axiom.from_string
                                       (Mystring_instance__lines__to_string___axiom.to_string
                                          ( ([sloc:commandhandler.adb:88] 
                                            ([GP_Reason:VC_PRECONDITION]
                                            [vc:annotation]
                                            [comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                       ^ commandhandler.adb:88:39:VC_PRECONDITION]
                                            [GP_Sloc:commandhandler.adb:88:39]
                                            [GP_Shape:B_1_declblk__if__B_3_declblk__token2_decl__call_from_string__call_to_string__call_substring]
                                            [GP_Id:54] (Mystring_instance__lines__substring___axiom.substring
                                                          ( Commandhandler__execute__s.s)
                                                          ( (Standard__positive__rep.to_rep
                                                               ( (Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                          ( ([sloc:commandhandler.adb:88] 
                                                            ([vc:annotation]
                                                            [GP_Reason:VC_RANGE_CHECK]
                                                            [GP_Sloc:commandhandler.adb:88:90]
                                                            [GP_Shape:B_1_declblk__if__B_3_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub]
                                                            [GP_Id:53]
                                                            [comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                                          ^ commandhandler.adb:88:90:VC_RANGE_CHECK] (
                                                            Standard__positive.range_check_
                                                              (([sloc:commandhandler.adb:88] 
                                                               ([GP_Shape:B_1_declblk__if__B_3_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub__add]
                                                               [comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                            ^ commandhandler.adb:88:76:VC_OVERFLOW_CHECK]
                                                               [vc:annotation]
                                                               [GP_Sloc:commandhandler.adb:88:76]
                                                               [GP_Reason:VC_OVERFLOW_CHECK]
                                                               [GP_Id:52] (
                                                               Standard__integer.range_check_
                                                                 ((Standard__positive__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)
                                                                    + (
                                                                    Standard__natural__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                                 - 1))))))))))));
                                    assume
                                    { (Standard__integer___axiom.dynamic_invariant
                                         !Commandhandler__execute__B_1__B_3__token2.token2
                                         True False True True) });
                                    ([sloc:commandhandler.adb:89] (
                                    Commandhandler__execute__B_1__B_3__success.success
                                    :=
                                    (_gnatprove_standard.Boolean.of_int 0)));
                                    ();
                                    ([GP_Sloc:commandhandler.adb:91:49] 
                                    ([sloc:commandhandler.adb:91] ()));
                                    ([GP_Sloc:commandhandler.adb:91:21] 
                                    ([sloc:commandhandler.adb:91] ()));
                                    ([GP_Sloc:commandhandler.adb:91:21] 
                                    ([sloc:commandhandler.adb:91] (let ([mlw:proxy_symbol]
                                    [introduced] temp___compl_644) =
                                    ( --pp_record_aggregate NOT IMPLEMENTED)
                                    in (let ([mlw:proxy_symbol]
                                    [introduced] temp___compl_645) =
                                    !Commandhandler__execute__B_1__B_3__success.success
                                    in
                                    ( any --pp_effects NOT IMPLEMENTED pre {}
                                    post {} return unit);
                                    (Stack__push___axiom.push
                                       ( --pp_record_aggregate NOT IMPLEMENTED)
                                       Commandhandler__execute__sk.sk__split_fields
                                       ( !Commandhandler__execute__B_1__B_3__token2.token2)
                                       Commandhandler__execute__B_1__B_3__success.success);
                                    ()))));
([GP_Sloc:commandhandler.adb:92:19] ([sloc:commandhandler.adb:92] ()));
([GP_Sloc:commandhandler.adb:92:16] ([sloc:commandhandler.adb:92] (if
                                                                  ([sloc:commandhandler.adb:92] ([branch_id=1266]
                                                                  _gnatprove_standard.Main.spark__branch
                                                                  :=
                                                                  !Commandhandler__execute__B_1__B_3__success.success));
                                                                  ([branch_id=1266] _gnatprove_standard.Main.spark__branch).bool__content
                                                                  then
                                                                  ();
                                                                  ([GP_Sloc:commandhandler.adb:93:19] 
                                                                  ([sloc:commandhandler.adb:93] ()));
                                                                  ([GP_Sloc:commandhandler.adb:93:19] 
                                                                  ([sloc:commandhandler.adb:93] (
                                                                   any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    }
                                                                  post {
                                                                  } return
                                                                  unit);
                                                                  (Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___648)
                                                                    =
                                                                    (Standard_String__Img.to_string
                                                                    (Standard__integer.attr__ATTRIBUTE_IMAGE
                                                                    !Commandhandler__execute__B_1__B_3__token2.token2)
                                                                    12) in
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___647)
                                                                    =
                                                                    (Temp___String_Literal_646.temp___String_Literal_646
                                                                    ()) in
                                                                    (Standard__string.of_array
                                                                    (Array__Int__Standard__character__Concat.concat
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___647)
                                                                    1 6
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___648))
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___648))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___648)))
                                                                    1
                                                                    ([sloc:commandhandler.adb:93] 
                                                                    ([GP_Shape:B_1_declblk__if__B_3_declblk__if__call_put_line__concat]
                                                                    [vc:annotation]
                                                                    [GP_Sloc:commandhandler.adb:93:37]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [GP_Id:51]
                                                                    [comment:                  Put_Line("Push: " & Integer'Image(Token2));                                     ^ commandhandler.adb:93:37:VC_RANGE_CHECK] (
                                                                    Standard__positive.range_check_
                                                                    ((1
                                                                    + ((_gnatprove_standard.Integer.length
                                                                    1 6)
                                                                    + (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___648))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___648)))))
                                                                    - 1))))))));
                                                                  ()))
                                     else
                                    ();
                                    ([GP_Sloc:commandhandler.adb:95:19] 
                                    ([sloc:commandhandler.adb:95] ()));
                                    ([GP_Sloc:commandhandler.adb:95:19] 
                                    ([sloc:commandhandler.adb:95] ( any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    }
                                    post {} return unit);
                                    (Ada___ada__text_io__put_line__2___axiom.put_line
                                       (let ([mlw:proxy_symbol]
                                       [introduced] temp___650) =
                                       ( (Temp___String_Literal_649.temp___String_Literal_649
                                            ())) in
                                       (Standard__string.of_array
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___650) 1 11)));
                                    ())))))))  else
([GP_Sloc:commandhandler.adb:99:10] (if
                                    ([sloc:commandhandler.adb:99] ([branch_id=1281]
                                    _gnatprove_standard.Main.spark__branch :=
                                    (let ([mlw:proxy_symbol]
                                      [introduced] temp___639) =
                                      (Temp___String_Literal_635.temp___String_Literal_635
                                         ()) in (let ([mlw:proxy_symbol]
                                      [introduced] temp___637) =
                                      (Standard__string.of_array
                                         !Commandhandler__execute__B_1__token1.token1
                                         (Standard__integer__rep.to_rep
                                            Commandhandler__execute__B_1__token1.token1__first)
                                         (Standard__integer__rep.to_rep
                                            Commandhandler__execute__B_1__token1.token1__last))
                                      in
                                      (Array__Int__Standard__character.bool_eq
                                         (Standard__string.to_array
                                            ([mlw:proxy_symbol]
                                            [introduced] temp___637))
                                         (Standard__string.first
                                            ([mlw:proxy_symbol]
                                            [introduced] temp___637))
                                         (Standard__string.last
                                            ([mlw:proxy_symbol]
                                            [introduced] temp___637))
                                         ([mlw:proxy_symbol]
                                         [introduced] temp___639) 1 5)))));
                                    ([branch_id=1281] _gnatprove_standard.Main.spark__branch).bool__content
                                    then
                                    ();
                                    ([GP_Sloc:commandhandler.adb:100:22] 
                                    ([sloc:commandhandler.adb:100] ()));
                                    ([GP_Sloc:commandhandler.adb:100:13] 
                                    ([sloc:commandhandler.adb:100] (if
                                                                   ([sloc:commandhandler.adb:100] ([branch_id=1284]
                                                                   _gnatprove_standard.Main.spark__branch
                                                                   :=
                                                                   (Locker__is_locked___axiom.is_locked
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED))));
                                                                   ([branch_id=1284] _gnatprove_standard.Main.spark__branch).bool__content
                                                                   then
                                                                   ();
                                                                   ([GP_Sloc:commandhandler.adb:101:16] 
                                                                   ([sloc:commandhandler.adb:101] ()));
                                                                   ([GP_Sloc:commandhandler.adb:101:16] 
                                                                   ([sloc:commandhandler.adb:101] (
                                                                    any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    }
                                                                   post {
                                                                   } return
                                                                   unit);
                                                                   (Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___620)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_619.temp___String_Literal_619
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___620)
                                                                    1 7)));
                                                                   ()));
                                                                   ([GP_Sloc:commandhandler.adb:102:16] 
                                                                   ([sloc:commandhandler.adb:102] raise Return__exc))
                                     else ())));
                                    ([GP_Sloc:commandhandler.adb:105:16] 
                                    ([sloc:commandhandler.adb:105] ()));
                                    ([GP_Sloc:commandhandler.adb:105:13] 
                                    ([sloc:commandhandler.adb:105] (if
                                                                   ([sloc:commandhandler.adb:105] ([branch_id=1294]
                                                                   _gnatprove_standard.Main.spark__branch
                                                                   :=
                                                                   (!Commandhandler__execute__numtokens.numtokens
                                                                    <> 3)));
                                                                   ([branch_id=1294] _gnatprove_standard.Main.spark__branch).bool__content
                                                                   then
                                                                   ();
                                                                   ([GP_Sloc:commandhandler.adb:106:16] 
                                                                   ([sloc:commandhandler.adb:106] ()));
                                                                   ([GP_Sloc:commandhandler.adb:106:16] 
                                                                   ([sloc:commandhandler.adb:106] (
                                                                    any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    }
                                                                   post {
                                                                   } return
                                                                   unit);
                                                                   (Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___622)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_621.temp___String_Literal_621
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___622)
                                                                    1 31)));
                                                                   ()));
                                                                   ([GP_Sloc:commandhandler.adb:107:16] 
                                                                   ([sloc:commandhandler.adb:107] raise Return__exc))
                                     else ())));
([GP_Sloc:commandhandler.adb:110:13] ([sloc:commandhandler.adb:110] ();
                                     ([sloc:commandhandler.adb:112] ());
                                     ([sloc:commandhandler.adb:112] ());
                                     ([sloc:commandhandler.adb:111] ());
                                     ([sloc:commandhandler.adb:111] (
                                     Commandhandler__execute__B_1__B_4__token2.token2
                                     :=
                                     (Stringtointeger__from_string___axiom.from_string
                                        (Mystring_instance__lines__to_string___axiom.to_string
                                           ( ([sloc:commandhandler.adb:112] 
                                             ([GP_Reason:VC_PRECONDITION]
                                             [GP_Sloc:commandhandler.adb:112:39]
                                             [GP_Id:47] [vc:annotation]
                                             [GP_Shape:B_1_declblk__if__B_4_declblk__token2_decl__call_from_string__call_to_string__call_substring]
                                             [comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                       ^ commandhandler.adb:112:39:VC_PRECONDITION] (
                                             Mystring_instance__lines__substring___axiom.substring
                                               ( Commandhandler__execute__s.s)
                                               ( (Standard__positive__rep.to_rep
                                                    ( (Array__Int__Mystringtokeniser__tokenextent.get
                                                         !Commandhandler__execute__t.t
                                                         2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                               ( ([sloc:commandhandler.adb:112] 
                                                 ([comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                                          ^ commandhandler.adb:112:90:VC_RANGE_CHECK]
                                                 [GP_Id:46] [vc:annotation]
                                                 [GP_Sloc:commandhandler.adb:112:90]
                                                 [GP_Shape:B_1_declblk__if__B_4_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub]
                                                 [GP_Reason:VC_RANGE_CHECK] (
                                                 Standard__positive.range_check_
                                                   (([sloc:commandhandler.adb:112] 
                                                    ([GP_Sloc:commandhandler.adb:112:76]
                                                    [comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                            ^ commandhandler.adb:112:76:VC_OVERFLOW_CHECK]
                                                    [GP_Id:45]
                                                    [vc:annotation]
                                                    [GP_Reason:VC_OVERFLOW_CHECK]
                                                    [GP_Shape:B_1_declblk__if__B_4_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub__add] (
                                                    Standard__integer.range_check_
                                                      ((Standard__positive__rep.to_rep
                                                          ( (Array__Int__Mystringtokeniser__tokenextent.get
                                                               !Commandhandler__execute__t.t
                                                               2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)
                                                         + (Standard__natural__rep.to_rep
                                                              ( (Array__Int__Mystringtokeniser__tokenextent.get
                                                                   !Commandhandler__execute__t.t
                                                                   2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                      - 1))))))))))));
                                     assume
                                     { (Standard__integer___axiom.dynamic_invariant
                                          !Commandhandler__execute__B_1__B_4__token2.token2
                                          True False True True) });
                                     ([sloc:commandhandler.adb:114] ());
                                     ([sloc:commandhandler.adb:114] ());
                                     ([sloc:commandhandler.adb:113] ());
                                     ([sloc:commandhandler.adb:113] (
                                     Commandhandler__execute__B_1__B_4__token3.token3
                                     :=
                                     (Stringtointeger__from_string___axiom.from_string
                                        (Mystring_instance__lines__to_string___axiom.to_string
                                           ( ([sloc:commandhandler.adb:114] 
                                             ([GP_Reason:VC_PRECONDITION]
                                             [comment:                 Lines.To_String(Lines.Substring(S, T(3).Start, T(3).Start + T(3).Length - 1)));                                       ^ commandhandler.adb:114:39:VC_PRECONDITION]
                                             [vc:annotation] [GP_Id:50]
                                             [GP_Shape:B_1_declblk__if__B_4_declblk__token3_decl__call_from_string__call_to_string__call_substring]
                                             [GP_Sloc:commandhandler.adb:114:39] (
                                             Mystring_instance__lines__substring___axiom.substring
                                               ( Commandhandler__execute__s.s)
                                               ( (Standard__positive__rep.to_rep
                                                    ( (Array__Int__Mystringtokeniser__tokenextent.get
                                                         !Commandhandler__execute__t.t
                                                         3)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                               ( ([sloc:commandhandler.adb:114] 
                                                 ([GP_Sloc:commandhandler.adb:114:90]
                                                 [vc:annotation] [GP_Id:49]
                                                 [GP_Reason:VC_RANGE_CHECK]
                                                 [comment:                 Lines.To_String(Lines.Substring(S, T(3).Start, T(3).Start + T(3).Length - 1)));                                                                                          ^ commandhandler.adb:114:90:VC_RANGE_CHECK]
                                                 [GP_Shape:B_1_declblk__if__B_4_declblk__token3_decl__call_from_string__call_to_string__call_substring__sub] (
                                                 Standard__positive.range_check_
                                                   (([sloc:commandhandler.adb:114] 
                                                    ([GP_Id:48]
                                                    [vc:annotation]
                                                    [GP_Reason:VC_OVERFLOW_CHECK]
                                                    [GP_Shape:B_1_declblk__if__B_4_declblk__token3_decl__call_from_string__call_to_string__call_substring__sub__add]
                                                    [GP_Sloc:commandhandler.adb:114:76]
                                                    [comment:                 Lines.To_String(Lines.Substring(S, T(3).Start, T(3).Start + T(3).Length - 1)));                                                                            ^ commandhandler.adb:114:76:VC_OVERFLOW_CHECK] (
                                                    Standard__integer.range_check_
                                                      ((Standard__positive__rep.to_rep
                                                          ( (Array__Int__Mystringtokeniser__tokenextent.get
                                                               !Commandhandler__execute__t.t
                                                               3)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)
                                                         + (Standard__natural__rep.to_rep
                                                              ( (Array__Int__Mystringtokeniser__tokenextent.get
                                                                   !Commandhandler__execute__t.t
                                                                   3)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                      - 1))))))))))));
                                     assume
                                     { (Standard__integer___axiom.dynamic_invariant
                                          !Commandhandler__execute__B_1__B_4__token3.token3
                                          True False True True) });
                                     ([sloc:commandhandler.adb:115] (
                                     Commandhandler__execute__B_1__B_4__success.success
                                     :=
                                     (_gnatprove_standard.Boolean.of_int 0)));
                                     ();
                                     ([GP_Sloc:commandhandler.adb:117:65] 
                                     ([sloc:commandhandler.adb:117] ()));
                                     ([GP_Sloc:commandhandler.adb:117:21] 
                                     ([sloc:commandhandler.adb:117] ()));
                                     ([GP_Sloc:commandhandler.adb:117:21] 
                                     ([sloc:commandhandler.adb:117] (let ([mlw:proxy_symbol]
                                     [introduced] temp___compl_623) =
                                     ( --pp_record_aggregate NOT IMPLEMENTED)
                                     in (let ([mlw:proxy_symbol]
                                     [introduced] temp___compl_624) =
                                     !Commandhandler__execute__B_1__B_4__success.success
                                     in
                                     ( any --pp_effects NOT IMPLEMENTED pre {}
                                     post {} return unit);
                                     (Stack__push2___axiom.push2
                                        ( --pp_record_aggregate NOT IMPLEMENTED)
                                        Commandhandler__execute__sk.sk__split_fields
                                        ( !Commandhandler__execute__B_1__B_4__token2.token2)
                                        ( !Commandhandler__execute__B_1__B_4__token3.token3)
                                        Commandhandler__execute__B_1__B_4__success.success);
                                     ()))));
([GP_Sloc:commandhandler.adb:118:19] ([sloc:commandhandler.adb:118] ()));
([GP_Sloc:commandhandler.adb:118:16] ([sloc:commandhandler.adb:118] (if
                                                                    ([sloc:commandhandler.adb:118] ([branch_id=1390]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    !Commandhandler__execute__B_1__B_4__success.success));
                                                                    ([branch_id=1390] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:119:19] 
                                                                    ([sloc:commandhandler.adb:119] ()));
                                                                    ([GP_Sloc:commandhandler.adb:119:19] 
                                                                    ([sloc:commandhandler.adb:119] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___632)
                                                                    =
                                                                    (Standard_String__Img.to_string
                                                                    (Standard__integer.attr__ATTRIBUTE_IMAGE
                                                                    !Commandhandler__execute__B_1__B_4__token3.token3)
                                                                    12) in
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___631)
                                                                    =
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___630)
                                                                    =
                                                                    (Temp___String_Literal_625.temp___String_Literal_625
                                                                    ()) in
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___629)
                                                                    =
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___628)
                                                                    =
                                                                    (Standard_String__Img.to_string
                                                                    (Standard__integer.attr__ATTRIBUTE_IMAGE
                                                                    !Commandhandler__execute__B_1__B_4__token2.token2)
                                                                    12) in
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___627)
                                                                    =
                                                                    (Temp___String_Literal_626.temp___String_Literal_626
                                                                    ()) in
                                                                    (Standard__string.of_array
                                                                    (Array__Int__Standard__character__Concat.concat
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___627)
                                                                    1 6
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___628))
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___628))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___628)))
                                                                    1
                                                                    ([sloc:commandhandler.adb:119] 
                                                                    ([GP_Id:42]
                                                                    [vc:annotation]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [GP_Shape:B_1_declblk__if__B_4_declblk__if__call_put_line__concat__concat__concat]
                                                                    [comment:                  Put_Line("Push: " & Integer'Image(Token2) & " and " & Integer'Image(Token3));                                     ^ commandhandler.adb:119:37:VC_RANGE_CHECK]
                                                                    [GP_Sloc:commandhandler.adb:119:37] (
                                                                    Standard__positive.range_check_
                                                                    ((1
                                                                    + ((_gnatprove_standard.Integer.length
                                                                    1 6)
                                                                    + (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___628))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___628)))))
                                                                    - 1)))))))
                                                                    in
                                                                    (if
                                                                    (
                                                                    (Standard__string.length
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___629))
                                                                    = 0) then
                                                                    (
                                                                    Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___630)
                                                                    1 5) 
                                                                    else
                                                                    (
                                                                    Standard__string.of_array
                                                                    (Array__Int__Standard__character__Concat.concat
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___629))
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___629))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___629))
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___630)
                                                                    1 5)
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___629))
                                                                    ([sloc:commandhandler.adb:119] 
                                                                    ([comment:                  Put_Line("Push: " & Integer'Image(Token2) & " and " & Integer'Image(Token3));                                                             ^ commandhandler.adb:119:61:VC_RANGE_CHECK]
                                                                    [GP_Id:43]
                                                                    [vc:annotation]
                                                                    [GP_Shape:B_1_declblk__if__B_4_declblk__if__call_put_line__concat__concat]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [GP_Sloc:commandhandler.adb:119:61] (
                                                                    Standard__positive.range_check_
                                                                    (((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___629))
                                                                    + ((_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___629))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___629)))
                                                                    + (_gnatprove_standard.Integer.length
                                                                    1 5)))
                                                                    - 1))))))))
                                                                    in
                                                                    (if
                                                                    (
                                                                    (Standard__string.length
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___631))
                                                                    = 0) then
                                                                    (
                                                                    Standard__string.of_array
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___632))
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___632))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___632)))
                                                                     else
                                                                    (
                                                                    Standard__string.of_array
                                                                    (Array__Int__Standard__character__Concat.concat
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___631))
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___631))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___631))
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___632))
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___632))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___632)))
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___631))
                                                                    ([sloc:commandhandler.adb:119] 
                                                                    ([GP_Shape:B_1_declblk__if__B_4_declblk__if__call_put_line__concat]
                                                                    [comment:                  Put_Line("Push: " & Integer'Image(Token2) & " and " & Integer'Image(Token3));                                                                       ^ commandhandler.adb:119:71:VC_RANGE_CHECK]
                                                                    [GP_Id:44]
                                                                    [vc:annotation]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [GP_Sloc:commandhandler.adb:119:71] (
                                                                    Standard__positive.range_check_
                                                                    (((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___631))
                                                                    + ((_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___631))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___631)))
                                                                    + (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___632))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___632)))))
                                                                    - 1)))))))));
                                                                    ()))
                                      else
                                     ();
                                     ([GP_Sloc:commandhandler.adb:121:19] 
                                     ([sloc:commandhandler.adb:121] ()));
                                     ([GP_Sloc:commandhandler.adb:121:19] 
                                     ([sloc:commandhandler.adb:121] (
                                      any --pp_effects NOT IMPLEMENTED pre {
                                       }
                                     post {} return unit);
                                     (Ada___ada__text_io__put_line__2___axiom.put_line
                                        (let ([mlw:proxy_symbol]
                                        [introduced] temp___634) =
                                        ( (Temp___String_Literal_633.temp___String_Literal_633
                                             ())) in
                                        (Standard__string.of_array
                                           ([mlw:proxy_symbol]
                                           [introduced] temp___634) 1 11)));
                                     ())))))))  else
([GP_Sloc:commandhandler.adb:125:10] (if
                                     ([sloc:commandhandler.adb:125] ([branch_id=1412]
                                     _gnatprove_standard.Main.spark__branch
                                     :=
                                     (let ([mlw:proxy_symbol]
                                       [introduced] temp___618) =
                                       (Temp___String_Literal_614.temp___String_Literal_614
                                          ()) in (let ([mlw:proxy_symbol]
                                       [introduced] temp___616) =
                                       (Standard__string.of_array
                                          !Commandhandler__execute__B_1__token1.token1
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__first)
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__last))
                                       in
                                       (Array__Int__Standard__character.bool_eq
                                          (Standard__string.to_array
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___616))
                                          (Standard__string.first
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___616))
                                          (Standard__string.last
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___616))
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___618) 1 3)))));
                                     ([branch_id=1412] _gnatprove_standard.Main.spark__branch).bool__content
                                     then
                                     ();
                                     ([GP_Sloc:commandhandler.adb:126:22] 
                                     ([sloc:commandhandler.adb:126] ()));
                                     ([GP_Sloc:commandhandler.adb:126:13] 
                                     ([sloc:commandhandler.adb:126] (if
                                                                    ([sloc:commandhandler.adb:126] ([branch_id=1415]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    (Locker__is_locked___axiom.is_locked
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED))));
                                                                    ([branch_id=1415] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:127:16] 
                                                                    ([sloc:commandhandler.adb:127] ()));
                                                                    ([GP_Sloc:commandhandler.adb:127:16] 
                                                                    ([sloc:commandhandler.adb:127] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___603)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_602.temp___String_Literal_602
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___603)
                                                                    1 7)));
                                                                    ()));
                                                                    ([GP_Sloc:commandhandler.adb:128:16] 
                                                                    ([sloc:commandhandler.adb:128] raise Return__exc))
                                      else ())));
                                     ([GP_Sloc:commandhandler.adb:131:16] 
                                     ([sloc:commandhandler.adb:131] ()));
                                     ([GP_Sloc:commandhandler.adb:131:13] 
                                     ([sloc:commandhandler.adb:131] (if
                                                                    ([sloc:commandhandler.adb:131] ([branch_id=1425]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    (!Commandhandler__execute__numtokens.numtokens
                                                                    <> 1)));
                                                                    ([branch_id=1425] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:132:16] 
                                                                    ([sloc:commandhandler.adb:132] ()));
                                                                    ([GP_Sloc:commandhandler.adb:132:16] 
                                                                    ([sloc:commandhandler.adb:132] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___605)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_604.temp___String_Literal_604
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___605)
                                                                    1 31)));
                                                                    ()));
                                                                    ([GP_Sloc:commandhandler.adb:133:16] 
                                                                    ([sloc:commandhandler.adb:133] raise Return__exc))
                                      else ())));
([GP_Sloc:commandhandler.adb:136:13] ([sloc:commandhandler.adb:136] ();
                                     ([sloc:commandhandler.adb:137] (
                                     Commandhandler__execute__B_1__B_5__a.a
                                     := ( 0));
                                     assume
                                     { (Commandhandler__execute__int32___axiom.dynamic_invariant
                                          !Commandhandler__execute__B_1__B_5__a.a
                                          True False True True) });
                                     ([sloc:commandhandler.adb:138] (
                                     Commandhandler__execute__B_1__B_5__success.success
                                     :=
                                     (_gnatprove_standard.Boolean.of_int 0)));
                                     ();
                                     ([GP_Sloc:commandhandler.adb:140:33] 
                                     ([sloc:commandhandler.adb:140] ()));
                                     ([GP_Sloc:commandhandler.adb:140:36] 
                                     ([sloc:commandhandler.adb:140] ()));
                                     ([GP_Sloc:commandhandler.adb:140:21] 
                                     ([sloc:commandhandler.adb:140] ()));
                                     ([GP_Sloc:commandhandler.adb:140:21] 
                                     ([sloc:commandhandler.adb:140] (let ([mlw:proxy_symbol]
                                     [introduced] temp___compl_606) =
                                     ( --pp_record_aggregate NOT IMPLEMENTED)
                                     in (let ([mlw:proxy_symbol]
                                     [introduced] temp___compl_607) =
                                     ( !Commandhandler__execute__B_1__B_5__a.a)
                                     in --pp_binding_ref NOT IMPLEMENTED))));
                                     ([GP_Sloc:commandhandler.adb:141:19] 
                                     ([sloc:commandhandler.adb:141] ()));
                                     ([GP_Sloc:commandhandler.adb:141:16] 
                                     ([sloc:commandhandler.adb:141] (if
                                                                    ([sloc:commandhandler.adb:141] ([branch_id=1452]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    !Commandhandler__execute__B_1__B_5__success.success));
                                                                    ([branch_id=1452] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:142:19] 
                                                                    ([sloc:commandhandler.adb:142] ()));
                                                                    ([GP_Sloc:commandhandler.adb:142:19] 
                                                                    ([sloc:commandhandler.adb:142] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___611)
                                                                    =
                                                                    (Standard_String__Img.to_string
                                                                    (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                                    !Commandhandler__execute__B_1__B_5__a.a)
                                                                    12) in
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___610)
                                                                    =
                                                                    (Temp___String_Literal_609.temp___String_Literal_609
                                                                    ()) in
                                                                    (Standard__string.of_array
                                                                    (Array__Int__Standard__character__Concat.concat
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___610)
                                                                    1 5
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___611))
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___611))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___611)))
                                                                    1
                                                                    ([sloc:commandhandler.adb:142] 
                                                                    ([GP_Shape:B_1_declblk__if__B_5_declblk__if__call_put_line__concat]
                                                                    [GP_Sloc:commandhandler.adb:142:36]
                                                                    [GP_Id:41]
                                                                    [comment:                  Put_Line("Pop: " & Int32'Image(A));                                    ^ commandhandler.adb:142:36:VC_RANGE_CHECK]
                                                                    [vc:annotation]
                                                                    [GP_Reason:VC_RANGE_CHECK] (
                                                                    Standard__positive.range_check_
                                                                    ((1
                                                                    + ((_gnatprove_standard.Integer.length
                                                                    1 5)
                                                                    + (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___611))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___611)))))
                                                                    - 1))))))));
                                                                    ()))
                                      else
                                     ();
                                     ([GP_Sloc:commandhandler.adb:144:19] 
                                     ([sloc:commandhandler.adb:144] ()));
                                     ([GP_Sloc:commandhandler.adb:144:19] 
                                     ([sloc:commandhandler.adb:144] (
                                      any --pp_effects NOT IMPLEMENTED pre {
                                       }
                                     post {} return unit);
                                     (Ada___ada__text_io__put_line__2___axiom.put_line
                                        (let ([mlw:proxy_symbol]
                                        [introduced] temp___613) =
                                        ( (Temp___String_Literal_612.temp___String_Literal_612
                                             ())) in
                                        (Standard__string.of_array
                                           ([mlw:proxy_symbol]
                                           [introduced] temp___613) 1 12)));
                                     ())))))))  else
([GP_Sloc:commandhandler.adb:148:10] (if
                                     ([sloc:commandhandler.adb:148] ([branch_id=1467]
                                     _gnatprove_standard.Main.spark__branch
                                     :=
                                     (let ([mlw:proxy_symbol]
                                       [introduced] temp___601) =
                                       (Temp___String_Literal_597.temp___String_Literal_597
                                          ()) in (let ([mlw:proxy_symbol]
                                       [introduced] temp___599) =
                                       (Standard__string.of_array
                                          !Commandhandler__execute__B_1__token1.token1
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__first)
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__last))
                                       in
                                       (Array__Int__Standard__character.bool_eq
                                          (Standard__string.to_array
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___599))
                                          (Standard__string.first
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___599))
                                          (Standard__string.last
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___599))
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___601) 1 7)))));
                                     ([branch_id=1467] _gnatprove_standard.Main.spark__branch).bool__content
                                     then
                                     ();
                                     ([GP_Sloc:commandhandler.adb:149:22] 
                                     ([sloc:commandhandler.adb:149] ()));
                                     ([GP_Sloc:commandhandler.adb:149:13] 
                                     ([sloc:commandhandler.adb:149] (if
                                                                    ([sloc:commandhandler.adb:149] ([branch_id=1470]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    (Locker__is_locked___axiom.is_locked
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED))));
                                                                    ([branch_id=1470] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:150:16] 
                                                                    ([sloc:commandhandler.adb:150] ()));
                                                                    ([GP_Sloc:commandhandler.adb:150:16] 
                                                                    ([sloc:commandhandler.adb:150] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___584)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_583.temp___String_Literal_583
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___584)
                                                                    1 7)));
                                                                    ()));
                                                                    ([GP_Sloc:commandhandler.adb:151:16] 
                                                                    ([sloc:commandhandler.adb:151] raise Return__exc))
                                      else ())));
                                     ([GP_Sloc:commandhandler.adb:154:16] 
                                     ([sloc:commandhandler.adb:154] ()));
                                     ([GP_Sloc:commandhandler.adb:154:13] 
                                     ([sloc:commandhandler.adb:154] (if
                                                                    ([sloc:commandhandler.adb:154] ([branch_id=1480]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    (!Commandhandler__execute__numtokens.numtokens
                                                                    <> 2)));
                                                                    ([branch_id=1480] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:155:16] 
                                                                    ([sloc:commandhandler.adb:155] ()));
                                                                    ([GP_Sloc:commandhandler.adb:155:16] 
                                                                    ([sloc:commandhandler.adb:155] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___586)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_585.temp___String_Literal_585
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___586)
                                                                    1 31)));
                                                                    ()));
                                                                    ([GP_Sloc:commandhandler.adb:156:16] 
                                                                    ([sloc:commandhandler.adb:156] raise Return__exc))
                                      else ())));
([GP_Sloc:commandhandler.adb:159:13] ([sloc:commandhandler.adb:159] ();
                                     ([sloc:commandhandler.adb:161] ());
                                     ([sloc:commandhandler.adb:161] ());
                                     ([sloc:commandhandler.adb:160] ());
                                     ([sloc:commandhandler.adb:160] (
                                     Commandhandler__execute__B_1__B_6__token2.token2
                                     :=
                                     (Stringtointeger__from_string___axiom.from_string
                                        (Mystring_instance__lines__to_string___axiom.to_string
                                           ( ([sloc:commandhandler.adb:161] 
                                             ([comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                       ^ commandhandler.adb:161:39:VC_PRECONDITION]
                                             [GP_Sloc:commandhandler.adb:161:39]
                                             [GP_Reason:VC_PRECONDITION]
                                             [GP_Id:40] [vc:annotation]
                                             [GP_Shape:B_1_declblk__if__B_6_declblk__token2_decl__call_from_string__call_to_string__call_substring] (
                                             Mystring_instance__lines__substring___axiom.substring
                                               ( Commandhandler__execute__s.s)
                                               ( (Standard__positive__rep.to_rep
                                                    ( (Array__Int__Mystringtokeniser__tokenextent.get
                                                         !Commandhandler__execute__t.t
                                                         2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                               ( ([sloc:commandhandler.adb:161] 
                                                 ([comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                                          ^ commandhandler.adb:161:90:VC_RANGE_CHECK]
                                                 [GP_Shape:B_1_declblk__if__B_6_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub]
                                                 [GP_Sloc:commandhandler.adb:161:90]
                                                 [vc:annotation]
                                                 [GP_Reason:VC_RANGE_CHECK]
                                                 [GP_Id:39] (Standard__positive.range_check_
                                                               (([sloc:commandhandler.adb:161] 
                                                                ([GP_Shape:B_1_declblk__if__B_6_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub__add]
                                                                [vc:annotation]
                                                                [GP_Reason:VC_OVERFLOW_CHECK]
                                                                [GP_Id:38]
                                                                [GP_Sloc:commandhandler.adb:161:76]
                                                                [comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                            ^ commandhandler.adb:161:76:VC_OVERFLOW_CHECK] (
                                                                Standard__integer.range_check_
                                                                  ((Standard__positive__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)
                                                                    + (
                                                                    Standard__natural__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                                  - 1))))))))))));
                                     assume
                                     { (Standard__integer___axiom.dynamic_invariant
                                          !Commandhandler__execute__B_1__B_6__token2.token2
                                          True False True True) });
                                     ([sloc:commandhandler.adb:162] (
                                     Commandhandler__execute__B_1__B_6__a.a
                                     := ( 0));
                                     assume
                                     { (Commandhandler__execute__int32___axiom.dynamic_invariant
                                          !Commandhandler__execute__B_1__B_6__a.a
                                          True False True True) });
                                     ([sloc:commandhandler.adb:163] (
                                     Commandhandler__execute__B_1__B_6__success.success
                                     :=
                                     (_gnatprove_standard.Boolean.of_int 0)));
                                     ();
                                     ([GP_Sloc:commandhandler.adb:165:19] 
                                     ([sloc:commandhandler.adb:165] ()));
                                     ([GP_Sloc:commandhandler.adb:165:16] 
                                     ([sloc:commandhandler.adb:165] (if
                                                                    ([sloc:commandhandler.adb:165] ([branch_id=1533]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    ((!Commandhandler__execute__B_1__B_6__token2.token2
                                                                    < 1) ||
                                                                    (!Commandhandler__execute__B_1__B_6__token2.token2
                                                                    > 256))));
                                                                    ([branch_id=1533] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:166:19] 
                                                                    ([sloc:commandhandler.adb:166] ()));
                                                                    ([GP_Sloc:commandhandler.adb:166:19] 
                                                                    ([sloc:commandhandler.adb:166] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___588)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_587.temp___String_Literal_587
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___588)
                                                                    1 24)));
                                                                    ()))
                                      else
                                     ();
                                     ([GP_Sloc:commandhandler.adb:168:36] 
                                     ([sloc:commandhandler.adb:168] ()));
                                     ([GP_Sloc:commandhandler.adb:168:39] 
                                     ([sloc:commandhandler.adb:168] ()));
                                     ([GP_Sloc:commandhandler.adb:168:24] 
                                     ([sloc:commandhandler.adb:168] ()));
                                     ([GP_Sloc:commandhandler.adb:168:24] 
                                     ([sloc:commandhandler.adb:168] (let ([mlw:proxy_symbol]
                                     [introduced] temp___compl_589) =
                                     ( --pp_record_aggregate NOT IMPLEMENTED)
                                     in (let ([mlw:proxy_symbol]
                                     [introduced] temp___compl_590) =
                                     ( !Commandhandler__execute__B_1__B_6__a.a)
                                     in --pp_binding_ref NOT IMPLEMENTED))));
                                     ([GP_Sloc:commandhandler.adb:169:26] 
                                     ([sloc:commandhandler.adb:169] ()));
                                     ([GP_Sloc:commandhandler.adb:169:19] 
                                     ([sloc:commandhandler.adb:169] (if
                                                                    ([sloc:commandhandler.adb:169] ([branch_id=1554]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    --pp_not NOT IMPLEMENTED));
                                                                    ([branch_id=1554] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:170:22] 
                                                                    ([sloc:commandhandler.adb:170] ()));
                                                                    ([GP_Sloc:commandhandler.adb:170:22] 
                                                                    ([sloc:commandhandler.adb:170] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___593)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_592.temp___String_Literal_592
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___593)
                                                                    1 21)));
                                                                    ()))
                                      else
                                     ();
                                     ([GP_Sloc:commandhandler.adb:172:79] 
                                     ([sloc:commandhandler.adb:172] ()));
                                     ([GP_Sloc:commandhandler.adb:172:32] 
                                     ([sloc:commandhandler.adb:172] ()));
                                     ([GP_Sloc:commandhandler.adb:172:32] 
                                     ([sloc:commandhandler.adb:172] (let ([mlw:proxy_symbol]
                                     [introduced] temp___compl_594) =
                                     ( --pp_record_aggregate NOT IMPLEMENTED)
                                     in
                                     ( any --pp_effects NOT IMPLEMENTED pre {}
                                     post {} return unit);
                                     (Lockmemory__put___axiom.put
                                        ( --pp_record_aggregate NOT IMPLEMENTED)
                                        Commandhandler__execute__d.d__split_fields
                                        ( ([sloc:commandhandler.adb:172] 
                                          ([GP_Sloc:commandhandler.adb:172:70]
                                          [vc:annotation] [GP_Id:37]
                                          [GP_Reason:VC_RANGE_CHECK]
                                          [GP_Shape:B_1_declblk__if__B_6_declblk__if__if__call_put__typeconv]
                                          [comment:                     LockMemory.Put(L, D, MemoryStore.Location_Index(Token2), A);                                                                      ^ commandhandler.adb:172:70:VC_RANGE_CHECK] (
                                          Memorystore__location_index.range_check_
                                            !Commandhandler__execute__B_1__B_6__token2.token2))))
                                        ( !Commandhandler__execute__B_1__B_6__a.a));
                                     ())));
                                     ([GP_Sloc:commandhandler.adb:173:22] 
                                     ([sloc:commandhandler.adb:173] ()));
                                     ([GP_Sloc:commandhandler.adb:173:22] 
                                     ([sloc:commandhandler.adb:173] (
                                      any --pp_effects NOT IMPLEMENTED pre {
                                       }
                                     post {} return unit);
                                     (Ada___ada__text_io__put_line__2___axiom.put_line
                                        (let ([mlw:proxy_symbol]
                                        [introduced] temp___596) =
                                        ( (Temp___String_Literal_595.temp___String_Literal_595
                                             ())) in
                                        (Standard__string.of_array
                                           ([mlw:proxy_symbol]
                                           [introduced] temp___596) 1 20)));
                                     ()))))))))))  else
([GP_Sloc:commandhandler.adb:178:10] (if
                                     ([sloc:commandhandler.adb:178] ([branch_id=1577]
                                     _gnatprove_standard.Main.spark__branch
                                     :=
                                     (let ([mlw:proxy_symbol]
                                       [introduced] temp___582) =
                                       (Temp___String_Literal_578.temp___String_Literal_578
                                          ()) in (let ([mlw:proxy_symbol]
                                       [introduced] temp___580) =
                                       (Standard__string.of_array
                                          !Commandhandler__execute__B_1__token1.token1
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__first)
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__last))
                                       in
                                       (Array__Int__Standard__character.bool_eq
                                          (Standard__string.to_array
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___580))
                                          (Standard__string.first
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___580))
                                          (Standard__string.last
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___580))
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___582) 1 8)))));
                                     ([branch_id=1577] _gnatprove_standard.Main.spark__branch).bool__content
                                     then
                                     ();
                                     ([GP_Sloc:commandhandler.adb:179:22] 
                                     ([sloc:commandhandler.adb:179] ()));
                                     ([GP_Sloc:commandhandler.adb:179:13] 
                                     ([sloc:commandhandler.adb:179] (if
                                                                    ([sloc:commandhandler.adb:179] ([branch_id=1580]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    (Locker__is_locked___axiom.is_locked
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED))));
                                                                    ([branch_id=1580] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:180:16] 
                                                                    ([sloc:commandhandler.adb:180] ()));
                                                                    ([GP_Sloc:commandhandler.adb:180:16] 
                                                                    ([sloc:commandhandler.adb:180] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___565)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_564.temp___String_Literal_564
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___565)
                                                                    1 7)));
                                                                    ()));
                                                                    ([GP_Sloc:commandhandler.adb:181:16] 
                                                                    ([sloc:commandhandler.adb:181] raise Return__exc))
                                      else ())));
                                     ([GP_Sloc:commandhandler.adb:184:16] 
                                     ([sloc:commandhandler.adb:184] ()));
                                     ([GP_Sloc:commandhandler.adb:184:13] 
                                     ([sloc:commandhandler.adb:184] (if
                                                                    ([sloc:commandhandler.adb:184] ([branch_id=1590]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    (!Commandhandler__execute__numtokens.numtokens
                                                                    <> 2)));
                                                                    ([branch_id=1590] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:185:16] 
                                                                    ([sloc:commandhandler.adb:185] ()));
                                                                    ([GP_Sloc:commandhandler.adb:185:16] 
                                                                    ([sloc:commandhandler.adb:185] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___567)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_566.temp___String_Literal_566
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___567)
                                                                    1 31)));
                                                                    ()));
                                                                    ([GP_Sloc:commandhandler.adb:186:16] 
                                                                    ([sloc:commandhandler.adb:186] raise Return__exc))
                                      else ())));
([GP_Sloc:commandhandler.adb:189:13] ([sloc:commandhandler.adb:189] ();
                                     ([sloc:commandhandler.adb:191] ());
                                     ([sloc:commandhandler.adb:191] ());
                                     ([sloc:commandhandler.adb:190] ());
                                     ([sloc:commandhandler.adb:190] (
                                     Commandhandler__execute__B_1__B_7__token2.token2
                                     :=
                                     (Stringtointeger__from_string___axiom.from_string
                                        (Mystring_instance__lines__to_string___axiom.to_string
                                           ( ([sloc:commandhandler.adb:191] 
                                             ([GP_Reason:VC_PRECONDITION]
                                             [GP_Sloc:commandhandler.adb:191:39]
                                             [comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                       ^ commandhandler.adb:191:39:VC_PRECONDITION]
                                             [GP_Shape:B_1_declblk__if__B_7_declblk__token2_decl__call_from_string__call_to_string__call_substring]
                                             [vc:annotation]
                                             [GP_Id:36] (Mystring_instance__lines__substring___axiom.substring
                                                           ( Commandhandler__execute__s.s)
                                                           ( (Standard__positive__rep.to_rep
                                                                ( (Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                           ( ([sloc:commandhandler.adb:191] 
                                                             ([vc:annotation]
                                                             [GP_Sloc:commandhandler.adb:191:90]
                                                             [GP_Shape:B_1_declblk__if__B_7_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub]
                                                             [GP_Id:35]
                                                             [GP_Reason:VC_RANGE_CHECK]
                                                             [comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                                          ^ commandhandler.adb:191:90:VC_RANGE_CHECK] (
                                                             Standard__positive.range_check_
                                                               (([sloc:commandhandler.adb:191] 
                                                                ([GP_Sloc:commandhandler.adb:191:76]
                                                                [vc:annotation]
                                                                [GP_Reason:VC_OVERFLOW_CHECK]
                                                                [comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                            ^ commandhandler.adb:191:76:VC_OVERFLOW_CHECK]
                                                                [GP_Id:34]
                                                                [GP_Shape:B_1_declblk__if__B_7_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub__add] (
                                                                Standard__integer.range_check_
                                                                  ((Standard__positive__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)
                                                                    + (
                                                                    Standard__natural__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                                  - 1))))))))))));
                                     assume
                                     { (Standard__integer___axiom.dynamic_invariant
                                          !Commandhandler__execute__B_1__B_7__token2.token2
                                          True False True True) });
                                     ([sloc:commandhandler.adb:192] (
                                     Commandhandler__execute__B_1__B_7__a.a
                                     := ( 0));
                                     assume
                                     { (Commandhandler__execute__int32___axiom.dynamic_invariant
                                          !Commandhandler__execute__B_1__B_7__a.a
                                          True False True True) });
                                     ([sloc:commandhandler.adb:193] (
                                     Commandhandler__execute__B_1__B_7__success.success
                                     :=
                                     (_gnatprove_standard.Boolean.of_int 0)));
                                     ();
                                     ([GP_Sloc:commandhandler.adb:195:19] 
                                     ([sloc:commandhandler.adb:195] ()));
                                     ([GP_Sloc:commandhandler.adb:195:16] 
                                     ([sloc:commandhandler.adb:195] (if
                                                                    ([sloc:commandhandler.adb:195] ([branch_id=1643]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    ((!Commandhandler__execute__B_1__B_7__token2.token2
                                                                    < 1) ||
                                                                    (!Commandhandler__execute__B_1__B_7__token2.token2
                                                                    > 256))));
                                                                    ([branch_id=1643] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:196:19] 
                                                                    ([sloc:commandhandler.adb:196] ()));
                                                                    ([GP_Sloc:commandhandler.adb:196:19] 
                                                                    ([sloc:commandhandler.adb:196] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___569)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_568.temp___String_Literal_568
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___569)
                                                                    1 24)));
                                                                    ()))
                                      else
                                     ();
                                     ([GP_Sloc:commandhandler.adb:198:19] 
                                     ([sloc:commandhandler.adb:198] ()));
                                     ([GP_Sloc:commandhandler.adb:198:34] 
                                     ([sloc:commandhandler.adb:198] ()));
                                     ([GP_Sloc:commandhandler.adb:198:21] 
                                     ([sloc:commandhandler.adb:198] (
                                     Commandhandler__execute__B_1__B_7__a.a
                                     :=
                                     ( (Lockmemory__get___axiom.get
                                          ( --pp_record_aggregate NOT IMPLEMENTED)
                                          ( --pp_record_aggregate NOT IMPLEMENTED)
                                          ( ([sloc:commandhandler.adb:198] 
                                            ([vc:annotation] [GP_Id:32]
                                            [GP_Shape:B_1_declblk__if__B_7_declblk__if__a_assign__call_get__typeconv]
                                            [GP_Reason:VC_RANGE_CHECK]
                                            [comment:                  A := LockMemory.Get(L, D, MemoryStore.Location_Index(Token2));                                                                        ^ commandhandler.adb:198:72:VC_RANGE_CHECK]
                                            [GP_Sloc:commandhandler.adb:198:72] (
                                            Memorystore__location_index.range_check_
                                              !Commandhandler__execute__B_1__B_7__token2.token2)))))))));
                                     ([GP_Sloc:commandhandler.adb:199:37] 
                                     ([sloc:commandhandler.adb:199] ()));
                                     ([GP_Sloc:commandhandler.adb:199:40] 
                                     ([sloc:commandhandler.adb:199] ()));
                                     ([GP_Sloc:commandhandler.adb:199:24] 
                                     ([sloc:commandhandler.adb:199] ()));
                                     ([GP_Sloc:commandhandler.adb:199:24] 
                                     ([sloc:commandhandler.adb:199] (let ([mlw:proxy_symbol]
                                     [introduced] temp___compl_571) =
                                     ( --pp_record_aggregate NOT IMPLEMENTED)
                                     in (let ([mlw:proxy_symbol]
                                     [introduced] temp___compl_572) =
                                     !Commandhandler__execute__B_1__B_7__success.success
                                     in
                                     ( any --pp_effects NOT IMPLEMENTED pre {}
                                     post {} return unit);
                                     (Stack__push___axiom.push
                                        ( --pp_record_aggregate NOT IMPLEMENTED)
                                        Commandhandler__execute__sk.sk__split_fields
                                        ( !Commandhandler__execute__B_1__B_7__a.a)
                                        Commandhandler__execute__B_1__B_7__success.success);
                                     ()))));
                                     ([GP_Sloc:commandhandler.adb:200:22] 
                                     ([sloc:commandhandler.adb:200] ()));
                                     ([GP_Sloc:commandhandler.adb:200:19] 
                                     ([sloc:commandhandler.adb:200] (if
                                                                    ([sloc:commandhandler.adb:200] ([branch_id=1677]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    !Commandhandler__execute__B_1__B_7__success.success));
                                                                    ([branch_id=1677] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:201:22] 
                                                                    ([sloc:commandhandler.adb:201] ()));
                                                                    ([GP_Sloc:commandhandler.adb:201:22] 
                                                                    ([sloc:commandhandler.adb:201] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___575)
                                                                    =
                                                                    (Standard_String__Img.to_string
                                                                    (Commandhandler__execute__int32.attr__ATTRIBUTE_IMAGE
                                                                    !Commandhandler__execute__B_1__B_7__a.a)
                                                                    12) in
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___574)
                                                                    =
                                                                    (Temp___String_Literal_573.temp___String_Literal_573
                                                                    ()) in
                                                                    (Standard__string.of_array
                                                                    (Array__Int__Standard__character__Concat.concat
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___574)
                                                                    1 8
                                                                    (Standard__string.to_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___575))
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___575))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___575)))
                                                                    1
                                                                    ([sloc:commandhandler.adb:201] 
                                                                    ([vc:annotation]
                                                                    [GP_Shape:B_1_declblk__if__B_7_declblk__if__if__call_put_line__concat]
                                                                    [GP_Id:33]
                                                                    [GP_Sloc:commandhandler.adb:201:42]
                                                                    [GP_Reason:VC_RANGE_CHECK]
                                                                    [comment:                     Put_Line("Loaded: " & Int32'Image(A));                                          ^ commandhandler.adb:201:42:VC_RANGE_CHECK] (
                                                                    Standard__positive.range_check_
                                                                    ((1
                                                                    + ((_gnatprove_standard.Integer.length
                                                                    1 8)
                                                                    + (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___575))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___575)))))
                                                                    - 1))))))));
                                                                    ()))
                                      else
                                     ();
                                     ([GP_Sloc:commandhandler.adb:203:22] 
                                     ([sloc:commandhandler.adb:203] ()));
                                     ([GP_Sloc:commandhandler.adb:203:22] 
                                     ([sloc:commandhandler.adb:203] (
                                      any --pp_effects NOT IMPLEMENTED pre {
                                       }
                                     post {} return unit);
                                     (Ada___ada__text_io__put_line__2___axiom.put_line
                                        (let ([mlw:proxy_symbol]
                                        [introduced] temp___577) =
                                        ( (Temp___String_Literal_576.temp___String_Literal_576
                                             ())) in
                                        (Standard__string.of_array
                                           ([mlw:proxy_symbol]
                                           [introduced] temp___577) 1 11)));
                                     ()))))))))))  else
([GP_Sloc:commandhandler.adb:208:10] (if
                                     ([sloc:commandhandler.adb:208] ([branch_id=1692]
                                     _gnatprove_standard.Main.spark__branch
                                     :=
                                     (let ([mlw:proxy_symbol]
                                       [introduced] temp___563) =
                                       (Temp___String_Literal_559.temp___String_Literal_559
                                          ()) in (let ([mlw:proxy_symbol]
                                       [introduced] temp___561) =
                                       (Standard__string.of_array
                                          !Commandhandler__execute__B_1__token1.token1
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__first)
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__last))
                                       in
                                       (Array__Int__Standard__character.bool_eq
                                          (Standard__string.to_array
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___561))
                                          (Standard__string.first
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___561))
                                          (Standard__string.last
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___561))
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___563) 1 6)))));
                                     ([branch_id=1692] _gnatprove_standard.Main.spark__branch).bool__content
                                     then
                                     ();
                                     ([GP_Sloc:commandhandler.adb:209:22] 
                                     ([sloc:commandhandler.adb:209] ()));
                                     ([GP_Sloc:commandhandler.adb:209:13] 
                                     ([sloc:commandhandler.adb:209] (if
                                                                    ([sloc:commandhandler.adb:209] ([branch_id=1695]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    (Locker__is_locked___axiom.is_locked
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED))));
                                                                    ([branch_id=1695] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:210:16] 
                                                                    ([sloc:commandhandler.adb:210] ()));
                                                                    ([GP_Sloc:commandhandler.adb:210:16] 
                                                                    ([sloc:commandhandler.adb:210] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___551)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_550.temp___String_Literal_550
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___551)
                                                                    1 7)));
                                                                    ()));
                                                                    ([GP_Sloc:commandhandler.adb:211:16] 
                                                                    ([sloc:commandhandler.adb:211] raise Return__exc))
                                      else ())));
                                     ([GP_Sloc:commandhandler.adb:214:16] 
                                     ([sloc:commandhandler.adb:214] ()));
                                     ([GP_Sloc:commandhandler.adb:214:13] 
                                     ([sloc:commandhandler.adb:214] (if
                                                                    ([sloc:commandhandler.adb:214] ([branch_id=1705]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    (!Commandhandler__execute__numtokens.numtokens
                                                                    <> 2)));
                                                                    ([branch_id=1705] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:215:16] 
                                                                    ([sloc:commandhandler.adb:215] ()));
                                                                    ([GP_Sloc:commandhandler.adb:215:16] 
                                                                    ([sloc:commandhandler.adb:215] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___553)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_552.temp___String_Literal_552
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___553)
                                                                    1 31)));
                                                                    ()));
                                                                    ([GP_Sloc:commandhandler.adb:216:16] 
                                                                    ([sloc:commandhandler.adb:216] raise Return__exc))
                                      else ())));
([GP_Sloc:commandhandler.adb:219:13] ([sloc:commandhandler.adb:219] ();
                                     ([sloc:commandhandler.adb:221] ());
                                     ([sloc:commandhandler.adb:221] ());
                                     ([sloc:commandhandler.adb:220] ());
                                     ([sloc:commandhandler.adb:220] (
                                     Commandhandler__execute__B_1__B_8__token2.token2
                                     :=
                                     (Stringtointeger__from_string___axiom.from_string
                                        (Mystring_instance__lines__to_string___axiom.to_string
                                           ( ([sloc:commandhandler.adb:221] 
                                             ([GP_Reason:VC_PRECONDITION]
                                             [GP_Sloc:commandhandler.adb:221:39]
                                             [vc:annotation]
                                             [comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                       ^ commandhandler.adb:221:39:VC_PRECONDITION]
                                             [GP_Id:31]
                                             [GP_Shape:B_1_declblk__if__B_8_declblk__token2_decl__call_from_string__call_to_string__call_substring] (
                                             Mystring_instance__lines__substring___axiom.substring
                                               ( Commandhandler__execute__s.s)
                                               ( (Standard__positive__rep.to_rep
                                                    ( (Array__Int__Mystringtokeniser__tokenextent.get
                                                         !Commandhandler__execute__t.t
                                                         2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                               ( ([sloc:commandhandler.adb:221] 
                                                 ([vc:annotation]
                                                 [GP_Sloc:commandhandler.adb:221:90]
                                                 [GP_Id:30]
                                                 [GP_Reason:VC_RANGE_CHECK]
                                                 [comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                                          ^ commandhandler.adb:221:90:VC_RANGE_CHECK]
                                                 [GP_Shape:B_1_declblk__if__B_8_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub] (
                                                 Standard__positive.range_check_
                                                   (([sloc:commandhandler.adb:221] 
                                                    ([GP_Sloc:commandhandler.adb:221:76]
                                                    [vc:annotation]
                                                    [GP_Reason:VC_OVERFLOW_CHECK]
                                                    [GP_Shape:B_1_declblk__if__B_8_declblk__token2_decl__call_from_string__call_to_string__call_substring__sub__add]
                                                    [comment:                 Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1)));                                                                            ^ commandhandler.adb:221:76:VC_OVERFLOW_CHECK]
                                                    [GP_Id:29] (Standard__integer.range_check_
                                                                  ((Standard__positive__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)
                                                                    + (
                                                                    Standard__natural__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                      - 1))))))))))));
                                     assume
                                     { (Standard__integer___axiom.dynamic_invariant
                                          !Commandhandler__execute__B_1__B_8__token2.token2
                                          True False True True) });
                                     ();
                                     ([GP_Sloc:commandhandler.adb:223:19] 
                                     ([sloc:commandhandler.adb:223] ()));
                                     ([GP_Sloc:commandhandler.adb:223:16] 
                                     ([sloc:commandhandler.adb:223] (if
                                                                    ([sloc:commandhandler.adb:223] ([branch_id=1750]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    ((!Commandhandler__execute__B_1__B_8__token2.token2
                                                                    < 1) ||
                                                                    (!Commandhandler__execute__B_1__B_8__token2.token2
                                                                    > 256))));
                                                                    ([branch_id=1750] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:224:19] 
                                                                    ([sloc:commandhandler.adb:224] ()));
                                                                    ([GP_Sloc:commandhandler.adb:224:19] 
                                                                    ([sloc:commandhandler.adb:224] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___555)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_554.temp___String_Literal_554
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___555)
                                                                    1 24)));
                                                                    ()))
                                      else
                                     ();
                                     ([GP_Sloc:commandhandler.adb:226:29] 
                                     ([sloc:commandhandler.adb:226] ()));
                                     ([GP_Sloc:commandhandler.adb:226:29] 
                                     ([sloc:commandhandler.adb:226] (let ([mlw:proxy_symbol]
                                     [introduced] temp___compl_556) =
                                     ( --pp_record_aggregate NOT IMPLEMENTED)
                                     in
                                     ( any --pp_effects NOT IMPLEMENTED pre {}
                                     post {} return unit);
                                     (Lockmemory__remove___axiom.remove
                                        ( --pp_record_aggregate NOT IMPLEMENTED)
                                        Commandhandler__execute__d.d__split_fields
                                        ( ([sloc:commandhandler.adb:226] 
                                          ([vc:annotation]
                                          [GP_Reason:VC_RANGE_CHECK]
                                          [GP_Shape:B_1_declblk__if__B_8_declblk__if__call_remove__typeconv]
                                          [GP_Id:28]
                                          [GP_Sloc:commandhandler.adb:226:70]
                                          [comment:                  LockMemory.Remove(L, D, MemoryStore.Location_Index(Token2));                                                                      ^ commandhandler.adb:226:70:VC_RANGE_CHECK] (
                                          Memorystore__location_index.range_check_
                                            !Commandhandler__execute__B_1__B_8__token2.token2)))));
                                     ())));
                                     ([GP_Sloc:commandhandler.adb:227:19] 
                                     ([sloc:commandhandler.adb:227] ()));
                                     ([GP_Sloc:commandhandler.adb:227:19] 
                                     ([sloc:commandhandler.adb:227] (
                                      any --pp_effects NOT IMPLEMENTED pre {
                                       }
                                     post {} return unit);
                                     (Ada___ada__text_io__put_line__2___axiom.put_line
                                        (let ([mlw:proxy_symbol]
                                        [introduced] temp___558) =
                                        ( (Temp___String_Literal_557.temp___String_Literal_557
                                             ())) in
                                        (Standard__string.of_array
                                           ([mlw:proxy_symbol]
                                           [introduced] temp___558) 1 8)));
                                     ())))))))  else
([GP_Sloc:commandhandler.adb:231:10] (if
                                     ([sloc:commandhandler.adb:231] ([branch_id=1779]
                                     _gnatprove_standard.Main.spark__branch
                                     :=
                                     (let ([mlw:proxy_symbol]
                                       [introduced] temp___549) =
                                       (Temp___String_Literal_545.temp___String_Literal_545
                                          ()) in (let ([mlw:proxy_symbol]
                                       [introduced] temp___547) =
                                       (Standard__string.of_array
                                          !Commandhandler__execute__B_1__token1.token1
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__first)
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__last))
                                       in
                                       (Array__Int__Standard__character.bool_eq
                                          (Standard__string.to_array
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___547))
                                          (Standard__string.first
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___547))
                                          (Standard__string.last
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___547))
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___549) 1 4)))));
                                     ([branch_id=1779] _gnatprove_standard.Main.spark__branch).bool__content
                                     then
                                     ();
                                     ([GP_Sloc:commandhandler.adb:232:22] 
                                     ([sloc:commandhandler.adb:232] ()));
                                     ([GP_Sloc:commandhandler.adb:232:13] 
                                     ([sloc:commandhandler.adb:232] (if
                                                                    ([sloc:commandhandler.adb:232] ([branch_id=1782]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    (Locker__is_locked___axiom.is_locked
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED))));
                                                                    ([branch_id=1782] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:233:16] 
                                                                    ([sloc:commandhandler.adb:233] ()));
                                                                    ([GP_Sloc:commandhandler.adb:233:16] 
                                                                    ([sloc:commandhandler.adb:233] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___544)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_543.temp___String_Literal_543
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___544)
                                                                    1 7)));
                                                                    ()));
                                                                    ([GP_Sloc:commandhandler.adb:234:16] 
                                                                    ([sloc:commandhandler.adb:234] raise Return__exc))
                                      else ())));
                                     ([GP_Sloc:commandhandler.adb:237:23] 
                                     ([sloc:commandhandler.adb:237] ()));
                                     ([GP_Sloc:commandhandler.adb:237:23] 
                                     ([sloc:commandhandler.adb:237] (
                                      any --pp_effects NOT IMPLEMENTED pre {
                                       }
                                     post {} return unit);
                                     (Lockmemory__print___axiom.print
                                        ( --pp_record_aggregate NOT IMPLEMENTED)
                                        ( --pp_record_aggregate NOT IMPLEMENTED));
                                     ()))
 else
([GP_Sloc:commandhandler.adb:239:10] (if
                                     ([sloc:commandhandler.adb:239] ([branch_id=1799]
                                     _gnatprove_standard.Main.spark__branch
                                     :=
                                     (let ([mlw:proxy_symbol]
                                       [introduced] temp___542) =
                                       (Temp___String_Literal_538.temp___String_Literal_538
                                          ()) in (let ([mlw:proxy_symbol]
                                       [introduced] temp___540) =
                                       (Standard__string.of_array
                                          !Commandhandler__execute__B_1__token1.token1
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__first)
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__last))
                                       in
                                       (Array__Int__Standard__character.bool_eq
                                          (Standard__string.to_array
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___540))
                                          (Standard__string.first
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___540))
                                          (Standard__string.last
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___540))
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___542) 1 4)))));
                                     ([branch_id=1799] _gnatprove_standard.Main.spark__branch).bool__content
                                     then
                                     ();
                                     ([GP_Sloc:commandhandler.adb:240:22] 
                                     ([sloc:commandhandler.adb:240] ()));
                                     ([GP_Sloc:commandhandler.adb:240:13] 
                                     ([sloc:commandhandler.adb:240] (if
                                                                    ([sloc:commandhandler.adb:240] ([branch_id=1802]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    (Locker__is_locked___axiom.is_locked
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED))));
                                                                    ([branch_id=1802] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:241:16] 
                                                                    ([sloc:commandhandler.adb:241] ()));
                                                                    ([GP_Sloc:commandhandler.adb:241:16] 
                                                                    ([sloc:commandhandler.adb:241] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___526)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_525.temp___String_Literal_525
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___526)
                                                                    1 15)));
                                                                    ()));
                                                                    ([GP_Sloc:commandhandler.adb:242:16] 
                                                                    ([sloc:commandhandler.adb:242] raise Return__exc))
                                      else ())));
                                     ([GP_Sloc:commandhandler.adb:245:16] 
                                     ([sloc:commandhandler.adb:245] ()));
                                     ([GP_Sloc:commandhandler.adb:245:13] 
                                     ([sloc:commandhandler.adb:245] (if
                                                                    ([sloc:commandhandler.adb:245] ([branch_id=1812]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    (!Commandhandler__execute__numtokens.numtokens
                                                                    <> 2)));
                                                                    ([branch_id=1812] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:246:16] 
                                                                    ([sloc:commandhandler.adb:246] ()));
                                                                    ([GP_Sloc:commandhandler.adb:246:16] 
                                                                    ([sloc:commandhandler.adb:246] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___528)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_527.temp___String_Literal_527
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___528)
                                                                    1 31)));
                                                                    ()));
                                                                    ([GP_Sloc:commandhandler.adb:247:16] 
                                                                    ([sloc:commandhandler.adb:247] raise Return__exc))
                                      else ())));
([GP_Sloc:commandhandler.adb:250:13] ([sloc:commandhandler.adb:250] ();
                                     ([sloc:commandhandler.adb:251] ());
                                     ([sloc:commandhandler.adb:251] ());
                                     ([sloc:commandhandler.adb:251] (let commandhandler__execute__B_1__B_9__token2__assume
                                     =
                                     (Mystring_instance__lines__to_string___axiom.to_string
                                        ( ([sloc:commandhandler.adb:251] 
                                          ([GP_Reason:VC_PRECONDITION]
                                          [comment:               Token2 : String := Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1));                                                        ^ commandhandler.adb:251:56:VC_PRECONDITION]
                                          [vc:annotation]
                                          [GP_Shape:B_1_declblk__if__B_9_declblk__token2_decl__call_to_string__call_substring]
                                          [GP_Sloc:commandhandler.adb:251:56]
                                          [GP_Id:27] (Mystring_instance__lines__substring___axiom.substring
                                                        ( Commandhandler__execute__s.s)
                                                        ( (Standard__positive__rep.to_rep
                                                             ( (Array__Int__Mystringtokeniser__tokenextent.get
                                                                  !Commandhandler__execute__t.t
                                                                  2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                        ( ([sloc:commandhandler.adb:251] 
                                                          ([vc:annotation]
                                                          [GP_Sloc:commandhandler.adb:251:107]
                                                          [GP_Shape:B_1_declblk__if__B_9_declblk__token2_decl__call_to_string__call_substring__sub]
                                                          [GP_Reason:VC_RANGE_CHECK]
                                                          [comment:               Token2 : String := Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1));                                                                                                           ^ commandhandler.adb:251:107:VC_RANGE_CHECK]
                                                          [GP_Id:26] (
                                                          Standard__positive.range_check_
                                                            (([sloc:commandhandler.adb:251] 
                                                             ([comment:               Token2 : String := Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1));                                                                                             ^ commandhandler.adb:251:93:VC_OVERFLOW_CHECK]
                                                             [vc:annotation]
                                                             [GP_Reason:VC_OVERFLOW_CHECK]
                                                             [GP_Shape:B_1_declblk__if__B_9_declblk__token2_decl__call_to_string__call_substring__sub__add]
                                                             [GP_Sloc:commandhandler.adb:251:93]
                                                             [GP_Id:25] (
                                                             Standard__integer.range_check_
                                                               ((Standard__positive__rep.to_rep
                                                                   ( (
                                                                   Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)
                                                                  + (
                                                                  Standard__natural__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                               - 1))))))))))
                                     in (
                                     Commandhandler__execute__B_1__B_9__token2.token2
                                     :=
                                     (Standard__string.to_array
                                        commandhandler__execute__B_1__B_9__token2__assume));
                                     assume
                                     { ((Standard__integer__rep.to_rep
                                           Commandhandler__execute__B_1__B_9__token2.token2__first)
                                          = (Standard__string.first
                                               commandhandler__execute__B_1__B_9__token2__assume)) };
                                     assume
                                     { ((Standard__integer__rep.to_rep
                                           Commandhandler__execute__B_1__B_9__token2.token2__last)
                                          = (Standard__string.last
                                               commandhandler__execute__B_1__B_9__token2__assume)) });
                                     assume
                                     { (Standard__string___axiom.dynamic_invariant
                                          (Standard__string.of_array
                                             !Commandhandler__execute__B_1__B_9__token2.token2
                                             (Standard__integer__rep.to_rep
                                                Commandhandler__execute__B_1__B_9__token2.token2__first)
                                             (Standard__integer__rep.to_rep
                                                Commandhandler__execute__B_1__B_9__token2.token2__last))
                                          True False True True) });
                                     ();
                                     ([GP_Sloc:commandhandler.adb:253:19] 
                                     ([sloc:commandhandler.adb:253] ()));
                                     ([GP_Sloc:commandhandler.adb:253:16] 
                                     ([sloc:commandhandler.adb:253] (if
                                                                    ([sloc:commandhandler.adb:253] ([branch_id=1853]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    ((abstract
                                                                    ensures
                                                                    { True } begin 
                                                                     (let _ =
                                                                    (Standard__string.of_array
                                                                    !Commandhandler__execute__B_1__B_9__token2.token2
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last))
                                                                    in ())  end;
                                                                    (_gnatprove_standard.Integer.length
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last))
                                                                    <> 4) ||
                                                                    (let i =
                                                                    ( any 
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    int) in
                                                                    (if
                                                                    (
                                                                    _gnatprove_standard.Boolean.andb
                                                                    ((Standard__integer__rep.to_rep
                                                                    abstract
                                                                    ensures
                                                                    { True } begin 
                                                                     (let _ =
                                                                    (Standard__string.of_array
                                                                    !Commandhandler__execute__B_1__B_9__token2.token2
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last))
                                                                    in ())  end;
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first)
                                                                    <= i)
                                                                    (i
                                                                    <= (
                                                                    Standard__integer__rep.to_rep
                                                                    abstract
                                                                    ensures
                                                                    { True } begin 
                                                                     (let _ =
                                                                    (Standard__string.of_array
                                                                    !Commandhandler__execute__B_1__B_9__token2.token2
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last))
                                                                    in ())  end;
                                                                    Commandhandler__execute__B_1__B_9__token2.token2__last)))
                                                                    then
                                                                    abstract
                                                                    ensures
                                                                    { True } begin 
                                                                     (let _ =
                                                                    --pp_not NOT IMPLEMENTED
                                                                    in ())  end
                                                                    ));
                                                                    ( any 
                                                                    pre {
                                                                    } post
                                                                    {(
                                                                    (result
                                                                    = True)
                                                                    <->
                                                                    --pp_existential_quantif NOT IMPLEMENTED)}
                                                                    return
                                                                    bool))));
                                     ([branch_id=1853] _gnatprove_standard.Main.spark__branch).bool__content
                                     then
                                     ();
                                     ([GP_Sloc:commandhandler.adb:254:19] 
                                     ([sloc:commandhandler.adb:254] ()));
                                     ([GP_Sloc:commandhandler.adb:254:19] 
                                     ([sloc:commandhandler.adb:254] (
                                      any --pp_effects NOT IMPLEMENTED pre {
                                       }
                                     post {} return unit);
                                     (Ada___ada__text_io__put_line__2___axiom.put_line
                                        (let ([mlw:proxy_symbol]
                                        [introduced] temp___530) =
                                        ( (Temp___String_Literal_529.temp___String_Literal_529
                                             ())) in
                                        (Standard__string.of_array
                                           ([mlw:proxy_symbol]
                                           [introduced] temp___530) 1 12)));
                                     ()))  else
                                     ();
                                     ([GP_Sloc:commandhandler.adb:256:55] 
                                     ([sloc:commandhandler.adb:256] ()));
                                     ([GP_Sloc:commandhandler.adb:256:42] 
                                     ([sloc:commandhandler.adb:256] ()));
                                     ([GP_Sloc:commandhandler.adb:256:25] 
                                     ([sloc:commandhandler.adb:256] ()));
                                     ([GP_Sloc:commandhandler.adb:256:25] 
                                     ([sloc:commandhandler.adb:256] (let ([mlw:proxy_symbol]
                                     [introduced] temp___compl_531) =
                                     ( --pp_record_aggregate NOT IMPLEMENTED)
                                     in
                                     ( any --pp_effects NOT IMPLEMENTED pre {}
                                     post {} return unit);
                                     (Locker__reset_pwd___axiom.reset_pwd
                                        Commandhandler__execute__l.l__split_fields
                                        ([sloc:commandhandler.adb:256] 
                                        ([GP_Reason:VC_PRECONDITION]
                                        [GP_Shape:B_1_declblk__if__B_9_declblk__if__call_reset_pwd__call_from_string]
                                        [vc:annotation]
                                        [comment:                  Locker.Reset_PWD(L, PIN.From_String(Token2));                                          ^ commandhandler.adb:256:42:VC_PRECONDITION]
                                        [GP_Sloc:commandhandler.adb:256:42]
                                        [GP_Id:23] (Pin__from_string___axiom.from_string
                                                      (Standard__string.of_array
                                                         !Commandhandler__execute__B_1__B_9__token2.token2
                                                         (Standard__integer__rep.to_rep
                                                            Commandhandler__execute__B_1__B_9__token2.token2__first)
                                                         (Standard__integer__rep.to_rep
                                                            Commandhandler__execute__B_1__B_9__token2.token2__last))))));
                                     ())));
                                     ([GP_Sloc:commandhandler.adb:257:19] 
                                     ([sloc:commandhandler.adb:257] ()));
                                     ([GP_Sloc:commandhandler.adb:257:19] 
                                     ([sloc:commandhandler.adb:257] (
                                      any --pp_effects NOT IMPLEMENTED pre {
                                       }
                                     post {} return unit);
                                     (Ada___ada__text_io__put_line__2___axiom.put_line
                                        (let ([mlw:proxy_symbol]
                                        [introduced] temp___533) =
                                        ( (Temp___String_Literal_532.temp___String_Literal_532
                                             ())) in
                                        (Standard__string.of_array
                                           ([mlw:proxy_symbol]
                                           [introduced] temp___533) 1 20)));
                                     ())))))))  else
([GP_Sloc:commandhandler.adb:261:10] (if
                                     ([sloc:commandhandler.adb:261] ([branch_id=1890]
                                     _gnatprove_standard.Main.spark__branch
                                     :=
                                     (let ([mlw:proxy_symbol]
                                       [introduced] temp___524) =
                                       (Temp___String_Literal_520.temp___String_Literal_520
                                          ()) in (let ([mlw:proxy_symbol]
                                       [introduced] temp___522) =
                                       (Standard__string.of_array
                                          !Commandhandler__execute__B_1__token1.token1
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__first)
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__last))
                                       in
                                       (Array__Int__Standard__character.bool_eq
                                          (Standard__string.to_array
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___522))
                                          (Standard__string.first
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___522))
                                          (Standard__string.last
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___522))
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___524) 1 6)))));
                                     ([branch_id=1890] _gnatprove_standard.Main.spark__branch).bool__content
                                     then
                                     ();
                                     ([GP_Sloc:commandhandler.adb:262:26] 
                                     ([sloc:commandhandler.adb:262] ()));
                                     ([GP_Sloc:commandhandler.adb:262:13] 
                                     ([sloc:commandhandler.adb:262] (if
                                                                    ([sloc:commandhandler.adb:262] ([branch_id=1893]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    --pp_not NOT IMPLEMENTED));
                                                                    ([branch_id=1893] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:263:16] 
                                                                    ([sloc:commandhandler.adb:263] ()));
                                                                    ([GP_Sloc:commandhandler.adb:263:16] 
                                                                    ([sloc:commandhandler.adb:263] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___508)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_507.temp___String_Literal_507
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___508)
                                                                    1 17)));
                                                                    ()));
                                                                    ([GP_Sloc:commandhandler.adb:264:16] 
                                                                    ([sloc:commandhandler.adb:264] raise Return__exc))
                                      else ())));
                                     ([GP_Sloc:commandhandler.adb:267:16] 
                                     ([sloc:commandhandler.adb:267] ()));
                                     ([GP_Sloc:commandhandler.adb:267:13] 
                                     ([sloc:commandhandler.adb:267] (if
                                                                    ([sloc:commandhandler.adb:267] ([branch_id=1904]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    (!Commandhandler__execute__numtokens.numtokens
                                                                    <> 2)));
                                                                    ([branch_id=1904] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:commandhandler.adb:268:16] 
                                                                    ([sloc:commandhandler.adb:268] ()));
                                                                    ([GP_Sloc:commandhandler.adb:268:16] 
                                                                    ([sloc:commandhandler.adb:268] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___510)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_509.temp___String_Literal_509
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___510)
                                                                    1 31)));
                                                                    ()));
                                                                    ([GP_Sloc:commandhandler.adb:269:16] 
                                                                    ([sloc:commandhandler.adb:269] raise Return__exc))
                                      else ())));
([GP_Sloc:commandhandler.adb:272:13] ([sloc:commandhandler.adb:272] ();
                                     ([sloc:commandhandler.adb:273] ());
                                     ([sloc:commandhandler.adb:273] ());
                                     ([sloc:commandhandler.adb:273] (let commandhandler__execute__B_1__B_10__token2__assume
                                     =
                                     (Mystring_instance__lines__to_string___axiom.to_string
                                        ( ([sloc:commandhandler.adb:273] 
                                          ([GP_Reason:VC_PRECONDITION]
                                          [GP_Shape:B_1_declblk__if__B_10_declblk__token2_decl__call_to_string__call_substring]
                                          [vc:annotation]
                                          [comment:               Token2 : String := Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1));                                                        ^ commandhandler.adb:273:56:VC_PRECONDITION]
                                          [GP_Sloc:commandhandler.adb:273:56]
                                          [GP_Id:22] (Mystring_instance__lines__substring___axiom.substring
                                                        ( Commandhandler__execute__s.s)
                                                        ( (Standard__positive__rep.to_rep
                                                             ( (Array__Int__Mystringtokeniser__tokenextent.get
                                                                  !Commandhandler__execute__t.t
                                                                  2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start))
                                                        ( ([sloc:commandhandler.adb:273] 
                                                          ([GP_Sloc:commandhandler.adb:273:107]
                                                          [vc:annotation]
                                                          [GP_Reason:VC_RANGE_CHECK]
                                                          [GP_Id:21]
                                                          [comment:               Token2 : String := Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1));                                                                                                           ^ commandhandler.adb:273:107:VC_RANGE_CHECK]
                                                          [GP_Shape:B_1_declblk__if__B_10_declblk__token2_decl__call_to_string__call_substring__sub] (
                                                          Standard__positive.range_check_
                                                            (([sloc:commandhandler.adb:273] 
                                                             ([GP_Shape:B_1_declblk__if__B_10_declblk__token2_decl__call_to_string__call_substring__sub__add]
                                                             [comment:               Token2 : String := Lines.To_String(Lines.Substring(S, T(2).Start, T(2).Start + T(2).Length - 1));                                                                                             ^ commandhandler.adb:273:93:VC_OVERFLOW_CHECK]
                                                             [GP_Sloc:commandhandler.adb:273:93]
                                                             [vc:annotation]
                                                             [GP_Reason:VC_OVERFLOW_CHECK]
                                                             [GP_Id:20] (
                                                             Standard__integer.range_check_
                                                               ((Standard__positive__rep.to_rep
                                                                   ( (
                                                                   Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__start)
                                                                  + (
                                                                  Standard__natural__rep.to_rep
                                                                    ( (
                                                                    Array__Int__Mystringtokeniser__tokenextent.get
                                                                    !Commandhandler__execute__t.t
                                                                    2)).Mystringtokeniser__tokenextent.__split_fields.Mystringtokeniser__tokenextent.rec__mystringtokeniser__tokenextent__length)))))
                                                               - 1))))))))))
                                     in (
                                     Commandhandler__execute__B_1__B_10__token2.token2
                                     :=
                                     (Standard__string.to_array
                                        commandhandler__execute__B_1__B_10__token2__assume));
                                     assume
                                     { ((Standard__integer__rep.to_rep
                                           Commandhandler__execute__B_1__B_10__token2.token2__first)
                                          = (Standard__string.first
                                               commandhandler__execute__B_1__B_10__token2__assume)) };
                                     assume
                                     { ((Standard__integer__rep.to_rep
                                           Commandhandler__execute__B_1__B_10__token2.token2__last)
                                          = (Standard__string.last
                                               commandhandler__execute__B_1__B_10__token2__assume)) });
                                     assume
                                     { (Standard__string___axiom.dynamic_invariant
                                          (Standard__string.of_array
                                             !Commandhandler__execute__B_1__B_10__token2.token2
                                             (Standard__integer__rep.to_rep
                                                Commandhandler__execute__B_1__B_10__token2.token2__first)
                                             (Standard__integer__rep.to_rep
                                                Commandhandler__execute__B_1__B_10__token2.token2__last))
                                          True False True True) });
                                     ();
                                     ([GP_Sloc:commandhandler.adb:275:19] 
                                     ([sloc:commandhandler.adb:275] ()));
                                     ([GP_Sloc:commandhandler.adb:275:16] 
                                     ([sloc:commandhandler.adb:275] (if
                                                                    ([sloc:commandhandler.adb:275] ([branch_id=1945]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    ((abstract
                                                                    ensures
                                                                    { True } begin 
                                                                     (let _ =
                                                                    (Standard__string.of_array
                                                                    !Commandhandler__execute__B_1__B_10__token2.token2
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last))
                                                                    in ())  end;
                                                                    (_gnatprove_standard.Integer.length
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last))
                                                                    <> 4) ||
                                                                    (let i =
                                                                    ( any 
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    int) in
                                                                    (if
                                                                    (
                                                                    _gnatprove_standard.Boolean.andb
                                                                    ((Standard__integer__rep.to_rep
                                                                    abstract
                                                                    ensures
                                                                    { True } begin 
                                                                     (let _ =
                                                                    (Standard__string.of_array
                                                                    !Commandhandler__execute__B_1__B_10__token2.token2
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last))
                                                                    in ())  end;
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first)
                                                                    <= i)
                                                                    (i
                                                                    <= (
                                                                    Standard__integer__rep.to_rep
                                                                    abstract
                                                                    ensures
                                                                    { True } begin 
                                                                     (let _ =
                                                                    (Standard__string.of_array
                                                                    !Commandhandler__execute__B_1__B_10__token2.token2
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__first)
                                                                    (Standard__integer__rep.to_rep
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last))
                                                                    in ())  end;
                                                                    Commandhandler__execute__B_1__B_10__token2.token2__last)))
                                                                    then
                                                                    abstract
                                                                    ensures
                                                                    { True } begin 
                                                                     (let _ =
                                                                    --pp_not NOT IMPLEMENTED
                                                                    in ())  end
                                                                    ));
                                                                    ( any 
                                                                    pre {
                                                                    } post
                                                                    {(
                                                                    (result
                                                                    = True)
                                                                    <->
                                                                    --pp_existential_quantif NOT IMPLEMENTED)}
                                                                    return
                                                                    bool))));
                                     ([branch_id=1945] _gnatprove_standard.Main.spark__branch).bool__content
                                     then
                                     ();
                                     ([GP_Sloc:commandhandler.adb:276:19] 
                                     ([sloc:commandhandler.adb:276] ()));
                                     ([GP_Sloc:commandhandler.adb:276:19] 
                                     ([sloc:commandhandler.adb:276] (
                                      any --pp_effects NOT IMPLEMENTED pre {
                                       }
                                     post {} return unit);
                                     (Ada___ada__text_io__put_line__2___axiom.put_line
                                        (let ([mlw:proxy_symbol]
                                        [introduced] temp___512) =
                                        ( (Temp___String_Literal_511.temp___String_Literal_511
                                             ())) in
                                        (Standard__string.of_array
                                           ([mlw:proxy_symbol]
                                           [introduced] temp___512) 1 12)));
                                     ()))  else
                                     ();
                                     ([GP_Sloc:commandhandler.adb:278:56] 
                                     ([sloc:commandhandler.adb:278] ()));
                                     ([GP_Sloc:commandhandler.adb:278:43] 
                                     ([sloc:commandhandler.adb:278] ()));
                                     ([GP_Sloc:commandhandler.adb:278:25] 
                                     ([sloc:commandhandler.adb:278] ()));
                                     ([GP_Sloc:commandhandler.adb:278:25] 
                                     ([sloc:commandhandler.adb:278] (let ([mlw:proxy_symbol]
                                     [introduced] temp___compl_513) =
                                     ( --pp_record_aggregate NOT IMPLEMENTED)
                                     in
                                     ( any --pp_effects NOT IMPLEMENTED pre {}
                                     post {} return unit);
                                     (Locker__try_unlock___axiom.try_unlock
                                        Commandhandler__execute__l.l__split_fields
                                        ([sloc:commandhandler.adb:278] 
                                        ([GP_Reason:VC_PRECONDITION]
                                        [GP_Id:18] [vc:annotation]
                                        [GP_Shape:B_1_declblk__if__B_10_declblk__if__call_try_unlock__call_from_string]
                                        [comment:                  Locker.Try_Unlock(L, PIN.From_String(Token2));                                           ^ commandhandler.adb:278:43:VC_PRECONDITION]
                                        [GP_Sloc:commandhandler.adb:278:43] (
                                        Pin__from_string___axiom.from_string
                                          (Standard__string.of_array
                                             !Commandhandler__execute__B_1__B_10__token2.token2
                                             (Standard__integer__rep.to_rep
                                                Commandhandler__execute__B_1__B_10__token2.token2__first)
                                             (Standard__integer__rep.to_rep
                                                Commandhandler__execute__B_1__B_10__token2.token2__last))))));
                                     ())));
                                     ([GP_Sloc:commandhandler.adb:279:19] 
                                     ([sloc:commandhandler.adb:279] ()));
                                     ([GP_Sloc:commandhandler.adb:279:19] 
                                     ([sloc:commandhandler.adb:279] (
                                      any --pp_effects NOT IMPLEMENTED pre {
                                       }
                                     post {} return unit);
                                     (Ada___ada__text_io__put_line__2___axiom.put_line
                                        (let ([mlw:proxy_symbol]
                                        [introduced] temp___515) =
                                        ( (Temp___String_Literal_514.temp___String_Literal_514
                                             ())) in
                                        (Standard__string.of_array
                                           ([mlw:proxy_symbol]
                                           [introduced] temp___515) 1 20)));
                                     ())))))))  else
([GP_Sloc:commandhandler.adb:283:10] (if
                                     ([sloc:commandhandler.adb:283] ([branch_id=1982]
                                     _gnatprove_standard.Main.spark__branch
                                     :=
                                     (let ([mlw:proxy_symbol]
                                       [introduced] temp___506) =
                                       (Temp___String_Literal_502.temp___String_Literal_502
                                          ()) in (let ([mlw:proxy_symbol]
                                       [introduced] temp___504) =
                                       (Standard__string.of_array
                                          !Commandhandler__execute__B_1__token1.token1
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__first)
                                          (Standard__integer__rep.to_rep
                                             Commandhandler__execute__B_1__token1.token1__last))
                                       in
                                       (Array__Int__Standard__character.bool_eq
                                          (Standard__string.to_array
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___504))
                                          (Standard__string.first
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___504))
                                          (Standard__string.last
                                             ([mlw:proxy_symbol]
                                             [introduced] temp___504))
                                          ([mlw:proxy_symbol]
                                          [introduced] temp___506) 1 4)))));
                                     ([branch_id=1982] _gnatprove_standard.Main.spark__branch).bool__content
                                     then
                                     ();
                                     ([GP_Sloc:commandhandler.adb:284:13] 
                                     ([sloc:commandhandler.adb:284] ()));
                                     ([GP_Sloc:commandhandler.adb:284:13] 
                                     ([sloc:commandhandler.adb:284] (
                                      any --pp_effects NOT IMPLEMENTED pre {
                                       }
                                     post {} return unit);
                                     (Ada___ada__text_io__put_line__2___axiom.put_line
                                        (let ([mlw:proxy_symbol]
                                        [introduced] temp___501) =
                                        ( (Temp___String_Literal_500.temp___String_Literal_500
                                             ())) in
                                        (Standard__string.of_array
                                           ([mlw:proxy_symbol]
                                           [introduced] temp___501) 1 10)));
                                     ()));
                                     ([GP_Sloc:commandhandler.adb:285:13] 
                                     ([sloc:commandhandler.adb:285] raise Return__exc))
 else
();
([GP_Sloc:commandhandler.adb:288:13] ([sloc:commandhandler.adb:288] ()));
([GP_Sloc:commandhandler.adb:288:13] ([sloc:commandhandler.adb:288] (
                                      any --pp_effects NOT IMPLEMENTED pre {
                                       }
                                     post {} return unit);
(Ada___ada__text_io__put_line__2___axiom.put_line (let ([mlw:proxy_symbol]
   [introduced] temp___499) =
   (Standard__string.of_array !Commandhandler__execute__B_1__token1.token1
      (Standard__integer__rep.to_rep
         Commandhandler__execute__B_1__token1.token1__first)
      (Standard__integer__rep.to_rep
         Commandhandler__execute__B_1__token1.token1__last)) in
   (let ([mlw:proxy_symbol] [introduced] temp___498) =
   (Temp___String_Literal_497.temp___String_Literal_497 ()) in
   (Standard__string.of_array
      (Array__Int__Standard__character__Concat.concat ([mlw:proxy_symbol]
         [introduced] temp___498) 1 17
         (Standard__string.to_array ([mlw:proxy_symbol]
            [introduced] temp___499))
         (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___499))
         (Standard__string.last ([mlw:proxy_symbol] [introduced] temp___499)))
      1
      ([sloc:commandhandler.adb:288] ([GP_Id:17] [vc:annotation]
                                     [GP_Reason:VC_RANGE_CHECK]
                                     [GP_Shape:B_1_declblk__if__call_put_line__concat]
                                     [comment:            Put_Line("Unknown command: " & Token1);                                          ^ commandhandler.adb:288:42:VC_RANGE_CHECK]
                                     [GP_Sloc:commandhandler.adb:288:42] (
                                     Standard__positive.range_check_
                                       ((1
                                           + ((_gnatprove_standard.Integer.length
                                                 1 17)
                                                + (_gnatprove_standard.Integer.length
                                                     (Standard__string.first
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___499))
                                                     (Standard__string.last
                                                        ([mlw:proxy_symbol]
                                                        [introduced] temp___499)))))
                                          - 1))))))));
())))))))))))))))))))))))))));
raise Return__exc with | Return__exc  -> ());
abstract ensures
{ True } begin  (let _ = True in ())  end

end
